{"version":3,"file":"assets/691.3ad9f283.js","mappings":"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","sources":["webpack://@xivanalysis/client/./src/components/ui/Rotation.tsx","webpack://@xivanalysis/client/./src/components/ui/Rotation.module.css?6b52","webpack://@xivanalysis/client/./src/parser/core/filter.ts","webpack://@xivanalysis/client/./src/parser/core/modules/Actors/Actor.ts","webpack://@xivanalysis/client/./src/parser/core/modules/Actors/Actors.tsx","webpack://@xivanalysis/client/./src/parser/core/modules/BrokenLog.tsx","webpack://@xivanalysis/client/./src/parser/core/modules/Checklist/Rule.js","webpack://@xivanalysis/client/./src/parser/core/modules/Checklist/Component.js","webpack://@xivanalysis/client/./src/parser/core/modules/Checklist/Checklist.module.css?79ed","webpack://@xivanalysis/client/./src/parser/core/modules/Checklist/Checklist.js","webpack://@xivanalysis/client/./src/parser/core/modules/Checklist/Requirement.js","webpack://@xivanalysis/client/./src/parser/core/modules/CooldownDowntime.tsx","webpack://@xivanalysis/client/./src/parser/core/modules/Cooldowns.tsx","webpack://@xivanalysis/client/./src/parser/core/modules/DISPLAY_ORDER.ts","webpack://@xivanalysis/client/./src/parser/core/modules/Data.ts","webpack://@xivanalysis/client/./src/parser/core/modules/Downtime.tsx","webpack://@xivanalysis/client/./src/parser/core/modules/Invulnerability.tsx","webpack://@xivanalysis/client/./src/parser/core/modules/ResourceGraphs/Graph.tsx","webpack://@xivanalysis/client/./src/parser/core/modules/ResourceGraphs/ResourceGraphs.module.css?2d09","webpack://@xivanalysis/client/./src/parser/core/modules/ResourceGraphs/MarkerHandler.tsx","webpack://@xivanalysis/client/./src/parser/core/modules/ResourceGraphs/ResourceGraphs.tsx","webpack://@xivanalysis/client/./src/parser/core/modules/SpeedAdjustments.ts","webpack://@xivanalysis/client/./src/parser/core/modules/Suggestions/Suggestion.ts","webpack://@xivanalysis/client/./src/parser/core/modules/Suggestions/Suggestions.module.css?22e5","webpack://@xivanalysis/client/./src/parser/core/modules/Suggestions/Component.js","webpack://@xivanalysis/client/./src/parser/core/modules/Suggestions/Suggestions.js","webpack://@xivanalysis/client/./src/parser/core/modules/Timeline/components/ScaleHandler.tsx","webpack://@xivanalysis/client/./src/parser/core/modules/Timeline/components/Timeline.module.css?66d3","webpack://@xivanalysis/client/./src/parser/core/modules/Timeline/components/Item.tsx","webpack://@xivanalysis/client/./src/parser/core/modules/Timeline/components/Axis.tsx","webpack://@xivanalysis/client/./src/parser/core/modules/Timeline/components/utilities.ts","webpack://@xivanalysis/client/./src/parser/core/modules/Timeline/components/Row.tsx","webpack://@xivanalysis/client/./src/parser/core/modules/Timeline/components/Timeline.tsx","webpack://@xivanalysis/client/./src/parser/core/modules/Timeline/Timeline.module.css?31a5","webpack://@xivanalysis/client/./src/parser/core/modules/Timeline/Timeline.tsx","webpack://@xivanalysis/client/./src/parser/core/modules/Timeline/config/Item.module.css?4ae4","webpack://@xivanalysis/client/./src/parser/core/modules/Timeline/config/Item.tsx","webpack://@xivanalysis/client/./src/parser/core/modules/Timeline/config/Row.tsx","webpack://@xivanalysis/client/./src/generated/unableToActStatusIds.ts","webpack://@xivanalysis/client/./src/parser/core/modules/UnableToAct/statusIds.ts","webpack://@xivanalysis/client/./src/parser/core/modules/UnableToAct/UnableToAct.tsx","webpack://@xivanalysis/client/./src/components/ui/Procs/ProcOverlay.module.css?3c10","webpack://@xivanalysis/client/./node_modules/moment/locale/ sync ^\\.\\/.*$"],"sourcesContent":["import cn from 'classnames'\nimport {ActionLink, ItemLink} from 'components/ui/DbLink'\nimport {getDataBy} from 'data'\nimport ACTIONS, {ITEM_ID_OFFSET} from 'data/ACTIONS'\nimport {Cause} from 'event'\nimport React, {Component} from 'react'\nimport overlayStyle from './Procs/ProcOverlay.module.css'\nimport styles from './Rotation.module.css'\n\nexport interface RotationEvent {\n\tcause?: Cause,\n\taction?: number\n\tisProc?: boolean\n}\ninterface RotationProps {\n\tevents: RotationEvent[]\n}\n\nexport default class Rotation extends Component<RotationProps> {\n\tgetActionId(event: RotationEvent): number | undefined {\n\t\tif (event.action != null) {\n\t\t\treturn event.action\n\t\t}\n\t\tif (event.cause != null && event.cause.type === 'action') {\n\t\t\treturn event.cause.action\n\t\t}\n\t\treturn undefined\n\t}\n\n\toverride render() {\n\t\tconst {events} = this.props\n\n\t\treturn <div className={styles.container}>\n\t\t\t{events.map((event, index) => {\n\t\t\t\tconst actionId = this.getActionId(event)\n\n\t\t\t\tconst action = getDataBy(ACTIONS, 'id', actionId) as TODO\n\n\t\t\t\t// Don't bother showing the icon for autos\n\t\t\t\tif (!action || action.autoAttack) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\t// Stuff like the duty action doesn't have an icon mapping yet.\n\t\t\t\t// TODO: Sort this out if it's a problem\n\t\t\t\tif (!action.icon) {\n\t\t\t\t\tconsole.error(event, 'event ability has no icon')\n\t\t\t\t\treturn false\n\t\t\t\t}\n\n\t\t\t\tconst linkClassName = [\n\t\t\t\t\tstyles.link,\n\t\t\t\t\t{[styles.ogcd]: !action.onGcd},\n\t\t\t\t\tevent.isProc ? overlayStyle.procOverlay : '',\n\t\t\t\t]\n\n\t\t\t\tconst iconSize = action.onGcd ? styles.gcdSize : styles.ogcdSize\n\n\t\t\t\tconst isItem = action.id >= ITEM_ID_OFFSET\n\n\t\t\t\tconst Link = isItem ? ItemLink : ActionLink\n\n\t\t\t\treturn <div\n\t\t\t\t\tkey={index}\n\t\t\t\t\tclassName={cn(...linkClassName)}\n\t\t\t\t>\n\t\t\t\t\t<Link\n\t\t\t\t\t\tshowName={false}\n\t\t\t\t\t\ticonSize={iconSize}\n\t\t\t\t\t\t{...action}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t})}\n\t\t</div>\n\t}\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"gcdSize\":\"40px\",\"ogcdSize\":\"30px\",\"container\":\"Rotation-module_container__2xmai\",\"link\":\"Rotation-module_link__G20wf\",\"ogcd\":\"Rotation-module_ogcd__qqqbl\"};","import _ from 'lodash'\nimport * as TB from 'ts-toolbelt'\n\n// -----\n// #region Core filter logic\n// ----\n\nconst proxyInner = (() => { /* unused */ }) as object\n\nconst customiser: _.isMatchWithCustomizer = (objValue, filterValue) => {\n\t// TODO: This effectively means we can't match against a function, but I'm not sure\n\t// that's really a _problem_. If it _is_, can mark it with a unique symbol or something.\n\tif (typeof filterValue === 'function') {\n\t\treturn filterValue(objValue)\n\t}\n}\n\n// Actual filter logic\nconst filterInternal = <Base, Current extends Partial<Base>>(current: Current) =>\n\tnew Proxy(proxyInner, {\n\t\t// Property access generates a new filter with a narrowed Current, i.e.\n\t\t// filter<Base, {}>.key(value) results in current={[key]:value}\n\t\tget: (target, key) =>\n\t\t\t(value: unknown) =>\n\t\t\t\tfilterInternal({...current, [key]: value}),\n\n\t\t// Calling the filter directly execute the filter on the value passed in\n\t\t// the first argument. The exposed return type is a predicate.\n\t\tapply: (target, thisArg, [toCheck]) => _.isMatchWith(toCheck, current, customiser),\n\t}) as Filter<Base, Current>\n\n/** Create a filter builder for the shape of Base. */\n// This is just a pass-through to fitlerInternal for type wrangling purposes.\nexport const filter = <Base>() => filterInternal<Base, {}>({})\n\n// -----\n// #endregion\n// #region Matchers\n// -----\n\n// Extending primitive so TS narrows the type as far as it can\n/** Match successfully if value matches any of the provided values by reference.  */\nexport function oneOf<T extends TB.Misc.Primitive>(values: T[] | Set<T>): Matcher<T> {\n\tconst set = Array.isArray(values) ? new Set(values) : values\n\treturn (objValue): objValue is T => set.has(objValue)\n}\n\n// TODO: the type guard on this isn't... quite right.\n/** Match successfully if value matches none of the provided values by reference.  */\nexport function noneOf<T extends TB.Misc.Primitive>(values: T[] | Set<T>): Matcher<T> {\n\tconst set = Array.isArray(values) ? new Set(values) : values\n\treturn (objValue): objValue is T => !set.has(objValue)\n}\n\n// This will technically always return true in a filter due to lodash semantics, but hey\n/** Match successfully if value is not nullish. */\nexport const exists = <T>(value?: T | null): value is T => value != null\n\n// -----\n// #endregion\n// #region Filter types\n// -----\n/*\n-------------------------------- W A R N I N G --------------------------------\nWhile I've tried to document it as best I can, the \"code\" below is some pretty\nhefty typescript generic shenanigans that power and strongly-type the proxy\nmagic above. If you just want to use the filter as a consumer, I'd recommend\nnot reading any further.\n\nThat said, if you're interested in how it works, have a read! Let me know if\nyou've got any questions or anything, I spent quite a bit on time on this, and\nI'd be more than happy to explain how it works!\n-------------------------------------------------------------------------------\n*/\n\n// For the given Union, resolve to union of keys of all members\ntype DistributedKeyof<Union> = Union extends unknown ? keyof Union : never\n\n// For the given Union of Objects, select members that contain key Key with any value\ntype HasKey<Union, Key extends DistributedKeyof<Union>> =\n\tUnion extends unknown\n\t\t? Required<Union> extends {[_ in Key]: unknown}\n\t\t\t? Union\n\t\t\t: never\n\t\t: never\n\n// Resolve Value to the loosest type matching the type of each Shape at Key\ntype ResolveValue<Value, Shape, Key extends keyof Shape> =\n\tShape extends unknown\n\t? Value extends Shape[Key] ? Shape[Key] : never\n\t: never\n\n// Matchers are predicate functions\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type Matcher<Type> = (input: any) => input is Type\n\n// Build a filter function for Key in Base, given constraints in Current\ntype FilterFunction<\n\tBase,\n\tCurrent extends Partial<Base>,\n\tKey extends DistributedKeyof<Base>\n> = (\n\t// Resolve WithKey to members of Base constrained by Current that contain Key\n\t// Constrain parameter to types permitted on the above via Value.\n\t// Return a new filter, passing down base and extending current with the resolved Value.\n\t<\n\t\tWithKey extends HasKey<TB.Union.Select<Required<Base>, Current>, Key>,\n\t\tValue extends WithKey[Key]\n\t>(\n\t\t_value: Value | Matcher<Value>\n\t) => (\n\t\tFilter<Base, TB.Any.Compute<\n\t\t\t& Current\n\t\t\t& {[_ in Key]: ResolveValue<Value, WithKey, Key>}\n\t\t>>\n\t)\n)\n\n// Build a filter object for Base, given constraints in Current\nexport type Filter<Base, Current extends Partial<Base> = {}> =\n\t// Chaining builder methods\n\t& {\n\t\t[Key in Exclude<\n\t\t\tDistributedKeyof<TB.Union.Select<Required<Base>, Current>>,\n\t\t\tkeyof Current\n\t\t>]:\n\t\tFilterFunction<Base, Current, Key>\n\t}\n\t// Call signature for the filter\n\t& {(value: Base): value is TB.Any.Compute<TB.Union.Select<Required<Base>, Current>>}\n\n// -----\n// #endregion\n// -----\n","import {JobKey} from 'data/JOBS'\nimport {Status} from 'data/STATUSES'\nimport {Attribute, AttributeValue, Events, Position, Resource} from 'event'\nimport _ from 'lodash'\nimport {Actor as ReportActor, Team} from 'report'\nimport {Object} from 'ts-toolbelt'\nimport {SUB_ATTRIBUTE_MINIMUM} from 'utilities/speedStatMapper'\n\nexport type StatusEvent = Events['statusApply'] | Events['statusRemove']\ntype StatusHistory = Map<Status['id'], Map<Actor['id'], StatusEvent[]>>\n\ntype ToReadonly<T> =\n\tT extends Map<infer K, infer V> ? ReadonlyMap<ToReadonly<K>, ToReadonly<V>>\n\t: T\n\n/** Representation of resources of an actor at a point in time. */\nclass ActorResources {\n\thp: Readonly<Resource>\n\tmp: Readonly<Resource>\n\tposition: Readonly<Position>\n\tget targetable() {\n\t\treturn this.getHistoricalValue(event => event.targetable, true)\n\t}\n\tattributes: Readonly<Record<Attribute, AttributeValue>>\n\n\tprotected _updateHistory: Array<Events['actorUpdate']>\n\tprotected _statusHistory: StatusHistory\n\tprivate time?: number\n\n\tconstructor(opts: {\n\t\tupdateHistory?: Array<Events['actorUpdate']>\n\t\tstatusHistory?: StatusHistory\n\t\ttime?: number\n\t}) {\n\t\tthis._updateHistory = opts.updateHistory ?? []\n\t\tthis._statusHistory = opts.statusHistory ?? new Map()\n\t\tthis.time = opts.time\n\t\tthis.hp = this.buildResource('hp')\n\t\tthis.mp = this.buildResource('mp')\n\t\tthis.position = this.buildPosition()\n\t\tthis.attributes = this.buildAttributes()\n\t}\n\n\thasStatus(statusId: Status['id'], source?: Actor['id']) {\n\t\treturn this.getStatusApplication(statusId, source) != null\n\t}\n\n\tgetStatusData(statusId: Status['id'], source?: Actor['id']) {\n\t\treturn this.getStatusApplication(statusId, source)?.data\n\t}\n\n\tprivate getStatusApplication(statusId: Status['id'], source?: Actor['id']) {\n\t\t// Grab data for the requested status - if there is none, we can resolve early.\n\t\tconst statusEvents = this._statusHistory.get(statusId)\n\t\tif (statusEvents == null) {\n\t\t\treturn\n\t\t}\n\n\t\t// Narrow to a single source if requested\n\t\tconst requestedSourceEvents = source != null\n\t\t\t? [statusEvents.get(source) ?? []]\n\t\t\t: statusEvents.values()\n\n\t\tconst time = this.time ?? Infinity\n\n\t\t// Search sources for an open application\n\t\tfor (const sourceEvents of requestedSourceEvents) {\n\t\t\tconst lastEvent = _.findLast(sourceEvents, event => event.timestamp <= time)\n\t\t\tif (lastEvent?.type === 'statusApply') {\n\t\t\t\treturn lastEvent\n\t\t\t}\n\t\t}\n\t}\n\n\t// TODO: think of how to automate building these getters this is dumb\n\n\t/** Build a \"Resource\" that will retrieve values from the history array. */\n\tprivate buildResource(field: Object.SelectKeys<Events['actorUpdate'], Resource, '<-extends'>) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-this-alias\n\t\tconst self = this\n\t\treturn {\n\t\t\tget maximum() {\n\t\t\t\treturn self.getHistoricalValue(event => event[field]?.maximum, 0)\n\t\t\t},\n\t\t\tget current() {\n\t\t\t\treturn self.getHistoricalValue(event => event[field]?.current, 0)\n\t\t\t},\n\t\t}\n\t}\n\n\t/** Build a \"Position\" that will retreive values from the history array. */\n\tprivate buildPosition() {\n\t\t// eslint-disable-next-line @typescript-eslint/no-this-alias\n\t\tconst self = this\n\t\treturn {\n\t\t\tget x() {\n\t\t\t\treturn self.getHistoricalValue(event => event.position?.x, 0)\n\t\t\t},\n\t\t\tget y() {\n\t\t\t\treturn self.getHistoricalValue(event => event.position?.y, 0)\n\t\t\t},\n\t\t\tget bearing() {\n\t\t\t\treturn self.getHistoricalValue(event => event.position?.bearing, 0)\n\t\t\t},\n\t\t}\n\t}\n\n\tprivate buildAttributes() {\n\t\tconst getHistoricalAttribute = (attribute: Attribute) =>\n\t\t\tthis.getHistoricalValue(\n\t\t\t\tevent => event.attributes?.find(eventAttr => eventAttr.attribute === attribute),\n\t\t\t\t{attribute, value: SUB_ATTRIBUTE_MINIMUM, estimated: true}\n\t\t\t)\n\n\t\treturn {\n\t\t\tget [Attribute.SKILL_SPEED]() {\n\t\t\t\treturn getHistoricalAttribute(Attribute.SKILL_SPEED)\n\t\t\t},\n\t\t\tget [Attribute.SPELL_SPEED]() {\n\t\t\t\treturn getHistoricalAttribute(Attribute.SPELL_SPEED)\n\t\t\t},\n\t\t}\n\t}\n\n\t/**\n\t * Retrieve the most recent value as fetched by `getter` occuring\n\t * before `this.time`, if it is set.\n\t */\n\tprivate getHistoricalValue<T>(\n\t\tgetter: (x: Events['actorUpdate']) => T | undefined,\n\t\tfallback: T,\n\t): T {\n\t\t// Infinity -> most recent data point\n\t\tconst time = this.time ?? Infinity\n\t\t// TODO: Work out how to optimise this w/ cache &c\n\t\tfor (let i = this._updateHistory.length - 1; i >= 0; i--) {\n\t\t\tconst event = this._updateHistory[i]\n\t\t\t// If it's in the future of what we're looking for, ignore\n\t\t\t// TODO: Can we avoid looping through shit we already know?\n\t\t\tif (event.timestamp > time) { continue }\n\n\t\t\t// Grab the value for this event - if it's not present, ignore\n\t\t\tconst value = getter(event)\n\t\t\tif (value == null) { continue }\n\n\t\t\treturn value\n\t\t}\n\n\t\treturn fallback\n\t}\n}\n\ninterface ActorOptions {\n\tactor: ReportActor\n}\n\nexport class Actor extends ActorResources implements ReportActor {\n\t// we re-export the actor shape so people don't need to dig into `Pull` to get it.\n\treadonly id: string\n\treadonly kind: string\n\treadonly name: string\n\treadonly team: Team\n\treadonly playerControlled: boolean\n\treadonly owner?: ReportActor\n\treadonly job: JobKey\n\n\t/** Read-only view of the update history of this actor. */\n\tget updateHistory(): ReadonlyArray<Events['actorUpdate']> {\n\t\treturn this._updateHistory\n\t}\n\n\t/** Read-only view of the status history of this actor. */\n\tget statusHistory(): ToReadonly<StatusHistory> {\n\t\treturn this._statusHistory\n\t}\n\n\tconstructor({actor}: ActorOptions) {\n\t\tsuper({})\n\t\tthis.id = actor.id\n\t\tthis.kind = actor.kind\n\t\tthis.name = actor.name\n\t\tthis.team = actor.team\n\t\tthis.playerControlled = actor.playerControlled\n\t\tthis.owner = actor.owner\n\t\tthis.job = actor.job\n\t}\n\n\t/** Get actor resources at a specified point in time. */\n\tat(time: number) {\n\t\t// TODO: perhaps pre-compute history slice here, based on time? Will depend on usage -\n\t\t// a few `at` calls with lots of lookups will preference a slice, a lot of `at` calls\n\t\t// with a few lookups, the current impl.\n\t\treturn new ActorResources({\n\t\t\tupdateHistory: this._updateHistory,\n\t\t\tstatusHistory: this._statusHistory,\n\t\t\ttime,\n\t\t})\n\t}\n\n\taddUpdateEntry(event: Events['actorUpdate']) {\n\t\t// This pushes to the history in the parent class, which is effectively reference-\n\t\t// shared by all ActorResource instances generated by this Actor\n\t\tthis._updateHistory.push(event)\n\t}\n\n\taddStatusEntry(event: StatusEvent) {\n\t\tlet statusEvents = this._statusHistory.get(event.status)\n\t\tif (statusEvents == null) {\n\t\t\tstatusEvents = new Map()\n\t\t\tthis._statusHistory.set(event.status, statusEvents)\n\t\t}\n\n\t\tlet sourceEvents = statusEvents.get(event.source)\n\t\tif (sourceEvents == null) {\n\t\t\tsourceEvents = []\n\t\t\tstatusEvents.set(event.source, sourceEvents)\n\t\t}\n\n\t\tsourceEvents.push(event)\n\t}\n}\n","import {Trans} from '@lingui/react'\nimport {Event, Events} from 'event'\nimport {Analyser} from 'parser/core/Analyser'\nimport {filter, oneOf} from 'parser/core/filter'\nimport {dependency} from 'parser/core/Injectable'\nimport React from 'react'\nimport {Actor as ReportActor, Team} from 'report'\nimport {ResourceDatum, ResourceGraphs} from '../ResourceGraphs'\nimport {Actor, StatusEvent} from './Actor'\n\nexport class Actors extends Analyser {\n\tstatic override handle = 'actors'\n\n\t@dependency private resourceGraphs!: ResourceGraphs\n\n\tprivate actors = new Map<ReportActor['id'], Actor>()\n\n\t/** Data for the actor currently being analysed. */\n\tget current() {\n\t\treturn this.get(this.parser.actor.id)\n\t}\n\n\t/** Data for all friendly actors. */\n\tget friends() {\n\t\treturn this.getTeam(Team.FRIEND)\n\t}\n\n\t/** Data for all foe actors. */\n\tget foes() {\n\t\treturn this.getTeam(Team.FOE)\n\t}\n\n\t/** Retrive data for all actors on the specified team. */\n\tgetTeam(team: Team) {\n\t\tconst actors: Actor[] = []\n\t\tfor (const reportActor of this.parser.pull.actors) {\n\t\t\tif (reportActor.team !== team) {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tactors.push(this.get(reportActor))\n\t\t}\n\t\treturn actors\n\t}\n\n\t/** Retrive the data for the actor of the specified ID. */\n\tget(actorSpecifier: ReportActor['id'] | ReportActor) {\n\t\tconst id = typeof actorSpecifier === 'string'\n\t\t\t? actorSpecifier\n\t\t\t: actorSpecifier.id\n\n\t\tlet actor = this.actors.get(id)\n\t\tif (actor != null) {\n\t\t\treturn actor\n\t\t}\n\n\t\tconst reportActor = typeof actorSpecifier === 'string'\n\t\t\t? this.parser.pull.actors.find(actor => actor.id === id)\n\t\t\t: actorSpecifier\n\n\t\tif (reportActor == null) {\n\t\t\tthrow new Error(`Actor ${id} does not exist within pull ${this.parser.pull.id}`)\n\t\t}\n\n\t\tactor = new Actor({actor: reportActor})\n\t\tthis.actors.set(id, actor)\n\n\t\treturn actor\n\t}\n\n\toverride initialise() {\n\t\tthis.addEventHook('actorUpdate', this.onUpdate)\n\t\tthis.addEventHook(\n\t\t\tfilter<Event>().type(oneOf(['statusApply', 'statusRemove'])),\n\t\t\tthis.onStatus,\n\t\t)\n\t\tthis.addEventHook('complete', this.onComplete)\n\t}\n\n\tprivate onUpdate(event: Events['actorUpdate']) {\n\t\tconst actor = this.get(event.actor)\n\t\tactor.addUpdateEntry(event)\n\t}\n\n\tprivate onStatus(event: StatusEvent) {\n\t\tconst actor = this.get(event.target)\n\t\tactor.addStatusEntry(event)\n\t}\n\n\tprivate onComplete() {\n\t\t// Build & add the current player's primary resources to the resource graphs\n\t\tconst hp: ResourceDatum[] = []\n\t\tconst mp: ResourceDatum[] = []\n\n\t\tfor (const event of this.current.updateHistory) {\n\t\t\tif (event.hp != null) {\n\t\t\t\thp.push({\n\t\t\t\t\t...hp[hp.length - 1],\n\t\t\t\t\t...event.hp,\n\t\t\t\t\ttime: event.timestamp,\n\t\t\t\t})\n\t\t\t}\n\t\t\tif (event.mp != null) {\n\t\t\t\tmp.push({\n\t\t\t\t\t...mp[mp.length - 1],\n\t\t\t\t\t...event.mp,\n\t\t\t\t\ttime: event.timestamp,\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\t// Colours borrowed from cactbot's jobs UI\n\t\t// TODO: Abstract the base colours if we need to reuse somewhere\n\n\t\tthis.resourceGraphs.addResource({\n\t\t\tlabel: <Trans id=\"core.actors.resource.hp\">HP</Trans>,\n\t\t\tcolour: 'rgba(59, 133, 4, 0.5)',\n\t\t\tdata: hp,\n\t\t})\n\n\t\t// Some jobs do not use MP at all - hide if we get no info beyond the initial data dump\n\t\t// TODO: This check fails if there was a death - the natural MP regen will create mp update\n\t\t// events. Look into a more robust way of deriving MP-less jobs - will require updates in data/\n\t\tif (mp.length > 1) {\n\t\t\tthis.resourceGraphs.addResource({\n\t\t\t\tlabel: <Trans id=\"core.actors.resource.mp\">MP</Trans>,\n\t\t\t\tcolour: 'rgba(188, 55, 147, 0.5)',\n\t\t\t\tdata: mp,\n\t\t\t})\n\t\t}\n\t}\n}\n","import {t} from '@lingui/macro'\nimport {Trans} from '@lingui/react'\nimport * as Sentry from '@sentry/browser'\nimport {Message, Segment} from 'akkd'\nimport NormalisedMessage from 'components/ui/NormalisedMessage'\nimport {getReportPatch} from 'data/PATCHES'\nimport React from 'react'\nimport {Table} from 'semantic-ui-react'\nimport {Analyser, DisplayMode} from '../Analyser'\nimport {dependency} from '../Injectable'\nimport {Data} from './Data'\nimport DISPLAY_ORDER from './DISPLAY_ORDER'\n\ninterface Trigger {\n\tsource: typeof Analyser\n\treason?: React.ReactNode\n}\n\nexport default class BrokenLog extends Analyser {\n\tstatic override handle = 'brokenLog'\n\tstatic override title = t('core.broken-log.title')`Broken Log`\n\tstatic override displayOrder = DISPLAY_ORDER.BROKEN_LOG\n\tstatic override displayMode = DisplayMode.RAW\n\n\t@dependency private data!: Data\n\n\tprivate triggers = new Map<string, Trigger>()\n\n\t/**\n\t * Trigger the module to display the broken log error.\n\t * @param key Unique key that represents the BL trigger\n\t * @param source Module that is triggering BL\n\t * @param reason Short description of why BL was triggered\n\t * @param erroneous If this trigger should be reported as an error to logs.\n\t */\n\ttrigger(\n\t\tsource: Analyser,\n\t\tkey: string,\n\t\treason?: React.ReactNode,\n\t\terroneous = true,\n\t) {\n\t\tconst constructor = (source.constructor as typeof Analyser)\n\t\tconst {handle} = constructor\n\t\tconst triggerKey = `${handle}.${key}`\n\n\t\t// If this is the first time this issue has been triggered, try and report it to Sentry\n\t\tif (\n\t\t\terroneous &&\n\t\t\t!this.triggers.has(triggerKey) &&\n\t\t\t!getReportPatch(this.parser.report).branch\n\t\t) {\n\t\t\tconst job = this.parser.actor.job\n\n\t\t\tSentry.withScope(scope => {\n\t\t\t\tscope.setTags({\n\t\t\t\t\tjob,\n\t\t\t\t\tmodule: handle,\n\t\t\t\t})\n\t\t\t\tscope.setExtras({\n\t\t\t\t\tsource: this.parser.report.meta.source,\n\t\t\t\t\tpull: this.parser.pull.id,\n\t\t\t\t\tactor: this.parser.actor.id,\n\t\t\t\t})\n\t\t\t\tSentry.captureMessage(`${job}.${triggerKey}`)\n\t\t\t})\n\t\t}\n\n\t\tthis.triggers.set(triggerKey, {\n\t\t\tsource: constructor,\n\t\t\treason,\n\t\t})\n\t}\n\n\toverride initialise() {\n\t\tconst unknownAction = this.data.actions.UNKNOWN.id\n\t\tthis.addEventHook({cause: {type: 'action', action: unknownAction}}, this.triggerUnknownCause)\n\t\tthis.addEventHook({action: unknownAction}, this.triggerUnknownCause)\n\n\t\tconst unknownStatus = this.data.statuses.UNKNOWN.id\n\t\tthis.addEventHook({cause: {type: 'status', status: unknownStatus}}, this.triggerUnknownCause)\n\t\tthis.addEventHook({status: unknownStatus}, this.triggerUnknownCause)\n\t}\n\n\tprivate triggerUnknownCause() {\n\t\tthis.trigger(this, 'unknown action', (\n\t\t\t<Trans id=\"core.broken-log.trigger.unknown-action\">\n\t\t\t\tOne or more actions were recorded incorrectly, and could not be parsed.\n\t\t\t</Trans>\n\t\t))\n\t}\n\n\toverride output() {\n\t\tif (this.triggers.size === 0) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn <Segment>\n\t\t\t<Message error icon=\"times circle outline\">\n\t\t\t\t<Trans id=\"core.broken-log.broken-log.title\" render={<Message.Header/>}>\n\t\t\t\t\tThis log is broken.\n\t\t\t\t</Trans>\n\t\t\t\t<Trans id=\"core.broken-log.broken-log.description\">\n\t\t\t\t\tOne or more modules have reported that this log contains inconsistencies that would suggest data is missing or incorrect. While the system does try to maintain sane results in this situation, some statistics may be inaccurate.\n\t\t\t\t</Trans>\n\t\t\t</Message>\n\n\t\t\t<Table basic=\"very\" compact=\"very\">\n\t\t\t\t<Table.Header>\n\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t<Trans id=\"core.broken-log.list.module\" render={<Table.HeaderCell/>}>Module</Trans>\n\t\t\t\t\t\t<Trans id=\"core.broken-log.list.reason\" render={<Table.HeaderCell/>}>Reason</Trans>\n\t\t\t\t\t</Table.Row>\n\t\t\t\t</Table.Header>\n\t\t\t\t<Table.Body>\n\t\t\t\t\t{Array.from(this.triggers.values()).map(({source, reason}, index) => (\n\t\t\t\t\t\t<Table.Row key={index}>\n\t\t\t\t\t\t\t<Table.Cell><NormalisedMessage message={source.title}/></Table.Cell>\n\t\t\t\t\t\t\t<Table.Cell>{reason}</Table.Cell>\n\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t))}\n\t\t\t\t</Table.Body>\n\t\t\t</Table>\n\t\t</Segment>\n\t}\n}\n","import {DisplayOrder} from 'parser/core/Analyser'\nimport {matchClosestLower} from 'utilities'\n\nexport const TARGET = {\n\tSUCCESS: 2,\n\tWARN: 1,\n\tFAIL: undefined,\n}\n\nconst DEFAULT_TARGET = 95\n\nexport default class Rule {\n\tname = ''\n\tdescription = null\n\trequirements = []\n\ttarget = DEFAULT_TARGET\n\tdisplayOrder = DisplayOrder.DEFAULT\n\n\tget tier() {\n\t\treturn matchClosestLower(\n\t\t\t{[this.target]: TARGET.SUCCESS},\n\t\t\tthis.percent,\n\t\t)\n\t}\n\n\tget percent() {\n\t\tconst weightedPercents = this.requirements.reduce((aggregate, requirement) => aggregate + requirement.percent * requirement.weight, 0)\n\t\tconst totalWeight = this.requirements.reduce((aggregate, requirement) => aggregate + requirement.weight, 0)\n\t\treturn totalWeight !== 0 ? weightedPercents / totalWeight : 0\n\t}\n\n\tconstructor(options) {\n\t\tObject.keys(options || {}).forEach(key => {\n\t\t\tthis[key] = options[key]\n\t\t})\n\t}\n}\n\nexport class TieredRule extends Rule {\n\tconstructor(options) {\n\t\tsuper({\n\t\t\ttiers: {},\n\t\t\tmatcher: matchClosestLower,\n\t\t\t...options,\n\t\t})\n\t}\n\n\tget tier() {\n\t\treturn this.matcher(this.tiers, this.percent)\n\t}\n}\n","import {TARGET} from 'parser/core/modules/Checklist/Rule'\nimport * as PropTypes from 'prop-types'\nimport React, {Component} from 'react'\nimport {Accordion, Icon, Progress} from 'semantic-ui-react'\nimport styles from './Checklist.module.css'\n\nconst RULE_STYLES = {\n\t[TARGET.SUCCESS]: {text: 'text-success', color: 'green', icon: 'checkmark', autoExpand: false},\n\t[TARGET.WARN]: {text: 'text-warning', color: 'yellow', icon: 'warning sign', autoExpand: true},\n\t[TARGET.FAIL]: {text: 'text-error', color: 'red', icon: 'remove', autoExpand: true},\n}\n\nclass Checklist extends Component {\n\tstatic propTypes = {\n\t\trules: PropTypes.arrayOf(PropTypes.shape({\n\t\t\tpercent: PropTypes.number.isRequired,\n\t\t\ttier: PropTypes.oneOf(Object.values(TARGET)),\n\t\t\tname: PropTypes.node.isRequired,\n\t\t\trequirements: PropTypes.arrayOf(PropTypes.shape({\n\t\t\t\tname: PropTypes.node.isRequired,\n\t\t\t\tcontent: PropTypes.string.isRequired,\n\t\t\t})),\n\t\t})),\n\t}\n\n\trender() {\n\t\tconst {rules} = this.props\n\n\t\t// If there's no rules, just stop now\n\t\tif (!rules.length) { return false }\n\n\t\tconst expanded = []\n\t\tconst panels = rules.map((rule, index) => {\n\t\t\tconst ruleStyles = RULE_STYLES[rule.tier]\n\n\t\t\t// We cap the percent @ 100 in production mode - calculations can always be a bit janky\n\t\t\tlet percent = rule.percent\n\t\t\tif (process.env.NODE_ENV === 'production') {\n\t\t\t\tpercent = Math.min(percent, 100)\n\t\t\t}\n\n\t\t\tif (ruleStyles.autoExpand) {\n\t\t\t\texpanded.push(index)\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t// This should be a handle of some sort\n\t\t\t\tkey: index,\n\t\t\t\ttitle: {\n\t\t\t\t\tclassName: styles.title,\n\t\t\t\t\tcontent: <>\n\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\tname={ruleStyles.icon}\n\t\t\t\t\t\t\tclassName={ruleStyles.text}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{rule.name}\n\t\t\t\t\t\t<div className={styles.percent + ' ' + ruleStyles.text}>\n\t\t\t\t\t\t\t{percent.toFixed(1)}%\n\t\t\t\t\t\t\t<Progress\n\t\t\t\t\t\t\t\tpercent={percent}\n\t\t\t\t\t\t\t\tclassName={styles.progress}\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\tcolor={ruleStyles.color}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>,\n\t\t\t\t},\n\t\t\t\tcontent: {\n\t\t\t\t\tcontent: <>\n\t\t\t\t\t\t{rule.description && <div className={styles.description}>\n\t\t\t\t\t\t\t<Icon name=\"info\" size=\"large\" />\n\t\t\t\t\t\t\t<p>{rule.description}</p>\n\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t{/* TODO: Better styling for these requirements */}\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{rule.requirements.map((requirement, index) =>\n\t\t\t\t\t\t\t\t<li key={index}>\n\t\t\t\t\t\t\t\t\t{requirement.name}: {requirement.content}\n\t\t\t\t\t\t\t\t</li>,\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</>,\n\t\t\t\t},\n\t\t\t}\n\t\t})\n\n\t\treturn <Accordion\n\t\t\texclusive={false}\n\t\t\tpanels={panels}\n\t\t\tdefaultActiveIndex={expanded}\n\t\t\tstyled fluid\n\t\t/>\n\t}\n}\n\nexport default (Checklist)\n","// extracted by mini-css-extract-plugin\nexport default {\"lg\":\"(min-width: 992px)\",\"title\":\"Checklist-module_title__2R2KC\",\"percent\":\"Checklist-module_percent__EuGu0\",\"progress\":\"Checklist-module_progress__Y1Fy8\",\"description\":\"Checklist-module_description__1hNf9\"};","import {t} from '@lingui/macro'\nimport {Analyser, DisplayMode} from 'parser/core/Analyser'\nimport React from 'react'\nimport DISPLAY_ORDER from '../DISPLAY_ORDER'\nimport ChecklistComponent from './Component'\nimport Rule from './Rule'\n\nexport default class Checklist extends Analyser {\n\tstatic handle = 'checklist'\n\tstatic title = t('core.checklist.title')`Checklist`\n\tstatic displayOrder = DISPLAY_ORDER.CHECKLIST\n\tstatic displayMode = DisplayMode.FULL\n\n\t_rules = []\n\n\tadd(rule) {\n\t\tif (!(rule instanceof Rule)) {\n\t\t\tthrow new Error('Invalid rule provided to checklist.')\n\t\t}\n\n\t\tthis._rules.push(rule)\n\t}\n\n\toutput() {\n\t\tconst sortedRules = [...this._rules]\n\t\tsortedRules.sort((a, b) => a.displayOrder - b.displayOrder)\n\t\treturn <ChecklistComponent rules={sortedRules}/>\n\t}\n}\n","export default class Requirement {\n\tname = ''\n\t_percent = null\n\tvalue = null\n\ttarget = 100\n\t_weight = 1\n\toverrideDisplay = null\n\n\tget content() {\n\t\tif (this.overrideDisplay !== null) { return this.overrideDisplay }\n\t\tif (this._percent !== null || this.value === null) { return `${this.percent.toFixed(2)}%` }\n\t\treturn `${this.value.toFixed(0)}/${this.target.toFixed(0)}` //avoid weird floating point shit\n\t}\n\tget percent() {\n\t\tif (this._percent === null) {\n\t\t\tif (this.value === null) { return 0 }\n\t\t\treturn 100 * (((typeof this.value === 'function')? this.value() : this.value) || 0) / this.target\n\t\t}\n\t\treturn ((typeof this._percent === 'function')? this._percent() : this._percent) || 0\n\t}\n\tset percent(value) {\n\t\tthis._percent = value\n\t}\n\tget weight() {\n\t\treturn this._weight\n\t}\n\tset weight(value) {\n\t\tthis._weight = value\n\t}\n\n\tconstructor(options) {\n\t\tObject.keys(options || {}).forEach(key => {\n\t\t\tthis[key] = options[key]\n\t\t})\n\t}\n}\n","import {t} from '@lingui/macro'\nimport {Trans} from '@lingui/react'\nimport {ActionLink} from 'components/ui/DbLink'\nimport {Action} from 'data/ACTIONS'\nimport {Event, Events} from 'event'\nimport {dependency} from 'parser/core/Injectable'\nimport {Requirement, Rule} from 'parser/core/modules/Checklist'\nimport React from 'react'\nimport {Analyser, DisplayOrder} from '../Analyser'\nimport {filter, oneOf} from '../filter'\nimport Checklist from './Checklist'\nimport {Data} from './Data'\nimport Downtime from './Downtime'\n\ninterface CooldownReset {\n\t/**\n\t * One or more skills that trigger a cooldown reset.\n\t */\n\tactions: Action[],\n\t/**\n\t * The amount of time in ms that an action deducts from the remaining\n\t * cooldown of the affected cooldowns.\n\t */\n\trefundAmount: number\n}\n\ninterface CooldownGroup {\n\t/**\n\t * One or more skills that share a recharge.\n\t */\n\tcooldowns: Action[],\n\t/**\n\t * Allowed time in ms a cooldown can be held after its cooldown has ended\n\t * that will not be counted as lost time.  If no value is provided, a basic\n\t * 2500 ms will be used to account for skills coming available too late in\n\t * the GCD to be used immediately.\n\t *\n\t * This value will be ignored and treated as 0 for cooldowns that have\n\t * multiple charges. Their 'allowed downtime' is the build up time of the\n\t * extra charges.\n\t */\n\tallowedAverageDowntime?: number,\n\t/**\n\t * Time in ms that the skill is expected to be used for the first time in\n\t * a fight.  This should be based on the opener for the class, and will also\n\t * be considered after long downtimes.\n\t */\n\tfirstUseOffset?: number,\n\t/**\n\t * Determines if the cooldown provided in the action data is reduced by\n\t * skill/spell speed or other modifiers that affect GCD length.\n\t * Currently, this property is not used due to the low reliability of GCD estimates.\n\t */\n\t// isAffectedBySpeed: boolean\n\t/**\n\t * Any skills that deduct from charge time for this group.\n\t */\n\tresetBy?: CooldownReset\n\t/**\n\t * The weighted importance of the given CooldownGroup\n\t * Set this higher or lower than the other CooldownGroups to adjust the priority\n\t * when calculating the checklist percentage\n\t */\n\tweight?: number\n}\n\nconst DEFAULT_CHECKLIST_TARGET = 95\nconst DEFAULT_ALLOWED_AVERAGE_DOWNTIME = 1250\n\nexport abstract class CooldownDowntime extends Analyser {\n\tstatic override handle = 'cooldownDowntime'\n\tstatic override title = t('core.cooldownDowntime.title')`Cooldown Downtime`\n\tstatic override debug = false\n\n\t@dependency protected data!: Data\n\t@dependency private downtime!: Downtime\n\t@dependency private checklist!: Checklist\n\n\t/**\n\t * Jobs MUST provide a list of tracked DPS cooldowns\n\t */\n\tprotected abstract trackedCds: CooldownGroup[]\n\n\t/**\n\t * Jobs may provide a list of cooldowns that won't appear in the checklist, but may still warrant suggestions regarding their use\n\t */\n\tprotected suggestionOnlyCooldowns: CooldownGroup[] = []\n\n\tprivate get allCooldowns(): CooldownGroup[] {\n\t\treturn this.trackedCds.concat(this.suggestionOnlyCooldowns)\n\t}\n\n\tprivate usages = new Map<CooldownGroup, Array<Events['action']>>()\n\tprivate resets = new Map<CooldownGroup, Array<Events['action']>>()\n\n\tprotected checklistName = <Trans id=\"core.cooldownDowntime.use-ogcd-cds\">Use your cooldowns</Trans>\n\tprotected checklistDescription = <Trans id=\"core.cooldownDowntime.ogcd-cd-metric\">Always make sure to use your actions\n\t\twhen they are available, but do not clip your GCD to use them.</Trans>\n\tprotected checklistTarget = DEFAULT_CHECKLIST_TARGET\n\n\tprotected defaultAllowedAverageDowntime = DEFAULT_ALLOWED_AVERAGE_DOWNTIME\n\tprotected defaultFirstUseOffset = 0\n\n\tprotected trackedDisplayOrder = DisplayOrder.DEFAULT //to allow for more flexible ordering in the checklist\n\n\t/**\n\t * Jobs MAY filter out some usages as 'fake' usages of a cooldown.\n\t *\n\t * The primary example of this would be NIN mudras, where any mudra\n\t * may start a usage, but further mudras while the Mudra buff or any\n\t * during the Kassatsu buff should not be counted as usages, even\n\t * though all 3 mudra skills are part of the group.\n\t *\n\t * @param event The cast that may or may not be counted.\n\t * @returns True if the event should be counted or false if the event\n\t * should not be counted as a usage of the cooldown.\n\t */\n\tprotected countUsage(_event: Events['action']): boolean {\n\t\treturn true\n\t}\n\n\toverride initialise() {\n\t\tconst trackedIds = this.allCooldowns.map(group => group.cooldowns)\n\t\t\t.reduce((acc, cur) => acc.concat(cur))\n\t\t\t.map(action => action.id)\n\n\t\tconst resetIds = this.allCooldowns\n\t\t\t.map(group => group.resetBy?.actions ?? [])\n\t\t\t.reduce((acc, cur) => acc.concat(cur))\n\t\t\t.map(action => action.id)\n\n\t\tconst baseFilter = filter<Event>()\n\t\t\t.type('action')\n\t\t\t.source(this.parser.actor.id)\n\n\t\tthis.addEventHook(\n\t\t\tbaseFilter.action(oneOf(trackedIds)),\n\t\t\tthis.onTrackedCast,\n\t\t)\n\t\tthis.addEventHook(\n\t\t\tbaseFilter.action(oneOf(resetIds)),\n\t\t\tthis.onResetCast,\n\t\t)\n\t\tthis.addEventHook('complete', this.onComplete)\n\n\t\tthis.allCooldowns.forEach(group => {\n\t\t\tthis.usages.set(group, [])\n\t\t\tthis.resets.set(group, [])\n\t\t})\n\t}\n\n\tprotected onTrackedCast(event: Events['action']) {\n\t\tif (!this.countUsage(event)) {\n\t\t\treturn\n\t\t}\n\n\t\tconst group = this.getTrackedGroup(event.action)\n\t\tif (group === undefined) {\n\t\t\treturn\n\t\t}\n\n\t\t(this.usages.get(group) || []).push(event)\n\t}\n\n\tprivate getTrackedGroup(abilityId: number): CooldownGroup | undefined {\n\t\treturn this.allCooldowns.find(group => group.cooldowns.find(action => action.id === abilityId) !== undefined)\n\t}\n\n\tprivate onResetCast(event: Events['action']) {\n\t\tthis.allCooldowns.forEach(group => {\n\t\t\tif (group.resetBy?.actions.find(action => action.id === event.action)) {\n\t\t\t\t(this.resets.get(group) ?? []).push(event)\n\t\t\t}\n\t\t})\n\t}\n\n\tprivate onComplete() {\n\t\tconst cdRequirements = []\n\t\tfor (const cdGroup of this.trackedCds) {\n\t\t\tcdRequirements.push(this.createRequirement(cdGroup))\n\t\t}\n\n\t\tthis.checklist.add(new WeightedRule({\n\t\t\tname: this.checklistName,\n\t\t\tdescription: this.checklistDescription,\n\t\t\trequirements: cdRequirements,\n\t\t\ttarget: this.checklistTarget,\n\t\t\tdisplayOrder: this.trackedDisplayOrder,\n\t\t}))\n\t\tthis.addJobSuggestions()\n\t}\n\n\tprivate createRequirement(cdGroup: CooldownGroup): Requirement {\n\t\tconst expected = this.calculateMaxUsages(cdGroup)\n\t\tconst actual = this.calculateUsageCount(cdGroup)\n\t\tlet percent = actual / expected * 100\n\t\tif (process.env.NODE_ENV === 'production') {\n\t\t\tpercent = Math.min(percent, 100)\n\t\t}\n\t\tconst requirementDisplay = cdGroup.cooldowns.map((val, ix) => <>\n\t\t\t{(ix > 0 ? ', ' : '')}\n\t\t\t<ActionLink {...this.data.getAction(val.id)} />\n\t\t</>)\n\t\tthis.debug(JSON.stringify(requirementDisplay))\n\n\t\treturn new Requirement({\n\t\t\tname: requirementDisplay,\n\t\t\tpercent: percent,\n\t\t\toverrideDisplay: `${actual} / ${expected} (${percent.toFixed(2)}%)`,\n\t\t\tweight: cdGroup.weight ?? 1,\n\t\t})\n\t}\n\n\t/** Override to provide additional suggestions (intended for jobs that track skills that should not have weight in the checklist, like healer mitigation cooldowns) */\n\tprotected addJobSuggestions() {\n\t\treturn\n\t}\n\n\tprotected calculateUsageCount(group: CooldownGroup): number {\n\t\treturn (this.usages.get(group) ?? []).length\n\t}\n\n\t/** Calculates the maximum possible uses for a given cooldown group */\n\tpublic calculateMaxUsages(group: CooldownGroup): number {\n\t\tconst gRep = group.cooldowns[0]\n\t\tif (gRep.cooldown === undefined) {\n\t\t\treturn 0\n\t\t}\n\t\t// 0 charges is nonsensical at this point, default up to 1.\n\t\tconst maxCharges = gRep.charges || 1\n\n\t\t// Skill with charges get their allowed downtime from the charge build up time,\n\t\t// so ignore the value on the group object\n\t\tconst step = gRep.cooldown + ((maxCharges > 1) ? 0 : (group.allowedAverageDowntime ?? this.defaultAllowedAverageDowntime))\n\n\t\tconst gResets = this.resets.get(group) ?? []\n\t\tconst gUsages = (this.usages.get(group) ?? [])\n\t\tconst dtUsages = gUsages\n\t\t\t.filter(u => this.downtime.isDowntime(u.timestamp))\n\t\t\t.map(u => this.downtime.getDowntimeWindows(u.timestamp)[0])\n\t\tconst resetTime = (group.resetBy && group.resetBy.refundAmount) ? group.resetBy.refundAmount : 0\n\n\t\tlet timeLost = 0 // TODO: this variable is for logging only and does not actually affect the final count\n\n\t\tthis.debug(`Checking downtime for group ${gRep.name} with default first use ${group.firstUseOffset} and step ${step} and ${maxCharges} charges`)\n\t\tlet charges = maxCharges\n\t\tlet count = 0\n\t\tconst expectedFirstUseTime = this.parser.pull.timestamp + (group.firstUseOffset ?? this.defaultFirstUseOffset)\n\t\tconst actualFirstUseTime = gUsages[0]\n\t\tconst pullEndTimestamp = this.parser.pull.timestamp + this.parser.pull.duration\n\n\t\tlet currentTime = expectedFirstUseTime\n\t\tif ((group.firstUseOffset ?? 0) < 0 && maxCharges === 1) {\n\t\t\t// check for pre-fight usages, which cause synthesized usage events\n\t\t\t// that will have timestamps that don't accurartely indicated when\n\t\t\t// exactly they were used pre-fight\n\t\t\tconst actualSecondUseTime = gUsages[1]\n\t\t\tif (actualSecondUseTime && (actualSecondUseTime.timestamp - actualFirstUseTime.timestamp) < gRep.cooldown) {\n\t\t\t\tthis.debug(`Assumed first use of skill ${gRep.name} at ${this.parser.formatEpochTimestamp(actualSecondUseTime.timestamp - gRep.cooldown)}`)\n\t\t\t\tthis.debug(`Actual second use of skill ${gRep.name} at ${this.parser.formatEpochTimestamp(actualSecondUseTime.timestamp)}`)\n\t\t\t\tcount += 1 // add in the pre-fight usage\n\t\t\t\tcurrentTime = actualSecondUseTime.timestamp\n\t\t\t} else if (actualFirstUseTime) {\n\t\t\t\t// If the actual second usage isn't early enough to suggest an actual pre-fight usage, follow normal logic.\n\t\t\t\t// Start at the earlier of the actual first use or the expected first use\n\t\t\t\tthis.debug(`Actual first use of skill ${gRep.name} at ${this.parser.formatEpochTimestamp(actualFirstUseTime.timestamp)}`)\n\t\t\t\tcurrentTime = Math.min(actualFirstUseTime.timestamp, expectedFirstUseTime)\n\t\t\t}\n\t\t} else if (actualFirstUseTime) {\n\t\t\t// Start at the earlier of the actual first use or the expected first use\n\t\t\tthis.debug(`Actual first use of skill ${gRep.name} at ${this.parser.formatEpochTimestamp(actualFirstUseTime.timestamp)}`)\n\t\t\tcurrentTime = Math.min(actualFirstUseTime.timestamp, expectedFirstUseTime)\n\t\t}\n\n\t\twhile (currentTime < pullEndTimestamp) {\n\t\t\t// spend accumulated charges\n\t\t\tcount += charges\n\t\t\tthis.debug(`Expected ${charges} usages at ${this.parser.formatEpochTimestamp(currentTime)}. Count: ${count}`)\n\t\t\tcharges = 0\n\n\t\t\t// build a new charge at the next charge time\n\t\t\tcurrentTime += step\n\t\t\tcharges += 1\n\n\t\t\t// apply resets that are found\n\t\t\twhile (gResets.length > 0 && gResets[0].timestamp < currentTime) {\n\t\t\t\tconst rs = gResets[0]\n\t\t\t\tconst previousTime = currentTime\n\t\t\t\tif (currentTime - resetTime < rs.timestamp) {\n\t\t\t\t\tif (charges < maxCharges) {\n\t\t\t\t\t\t// if not at max charges, the \"extra\" reset time counts toward\n\t\t\t\t\t\t// the next charge wihtout being lost\n\t\t\t\t\t\tcurrentTime -= resetTime\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttimeLost += rs.timestamp - (currentTime - resetTime)\n\t\t\t\t\t\tcurrentTime = rs.timestamp\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcurrentTime -= resetTime\n\t\t\t\t}\n\t\t\t\tthis.debug(`Reset (${this.data.getAction(rs.action)?.name}) used at ${this.parser.formatEpochTimestamp(rs.timestamp)}. Changing next charge time from ${this.parser.formatEpochTimestamp(previousTime)} to ${this.parser.formatEpochTimestamp(currentTime)}`)\n\t\t\t\tgResets.shift()\n\t\t\t}\n\n\t\t\twhile (\n\t\t\t\tcurrentTime < pullEndTimestamp\n\t\t\t\t&& charges < maxCharges\n\t\t\t\t&& this.downtime.isDowntime(currentTime)\n\t\t\t) {\n\t\t\t\tthis.debug(`Saving charge during downtime at ${this.parser.formatEpochTimestamp(currentTime)}. ${charges} charges stored`)\n\n\t\t\t\tconst window = this.downtime.getDowntimeWindows(currentTime)[0]\n\t\t\t\tif (window.end < currentTime + step) {\n\t\t\t\t\tcount += charges\n\t\t\t\t\tthis.debug(`Delayed charge spend at ${this.parser.formatEpochTimestamp(window.end)}. ${charges} charges spent. No charge time lost. Count: ${count}`)\n\t\t\t\t\tcharges = 0\n\t\t\t\t}\n\n\t\t\t\tcurrentTime += step\n\t\t\t\tcharges += 1\n\t\t\t}\n\n\t\t\t// full charges were built up during a downtime.  Move to the end of the downtime to spend charges.\n\t\t\tif (\n\t\t\t\tcurrentTime < pullEndTimestamp\n\t\t\t\t&& this.downtime.isDowntime(currentTime)\n\t\t\t) {\n\t\t\t\tconst window = this.downtime.getDowntimeWindows(currentTime)[0]\n\t\t\t\tthis.debug(`Downtime detected at ${this.parser.formatEpochTimestamp(currentTime)} in window from ${this.parser.formatEpochTimestamp(window.start)} to ${this.parser.formatEpochTimestamp(window.end)}`)\n\n\t\t\t\tconst matchingDtUsage = dtUsages.find(uw => uw.end === window.end)\n\t\t\t\tif (matchingDtUsage === undefined) {\n\t\t\t\t\tcurrentTime = window.end\n\t\t\t\t} else {\n\t\t\t\t\t// remove this usage from the list to prevent an infinite loop\n\t\t\t\t\t// if the skill comes back off cooldown during the same downtime.\n\t\t\t\t\tdtUsages.splice(dtUsages.indexOf(matchingDtUsage), 1)\n\n\t\t\t\t\tthis.debug(`Usage detected during downtime at ${this.parser.formatEpochTimestamp(matchingDtUsage.start)}.`)\n\t\t\t\t\tcurrentTime = matchingDtUsage.start\n\t\t\t\t}\n\n\t\t\t\t// TODO: time after window end before usage.  should it just be first use offset? depends on what else was delayed and state in rotation\n\t\t\t}\n\t\t}\n\t\tthis.debug(`Total count for group ${gRep.name} is ${count}. Total reset time lost is ${this.parser.formatDuration(timeLost)}.`)\n\n\t\treturn count\n\t}\n}\n\nclass WeightedRule extends Rule {\n\tconstructor(options: TODO) {\n\t\tsuper({...options})\n\n\t\tconst totalWeight = this.requirements.reduce((acc, req) => acc + req.weight, 0)\n\t\tthis.requirements.map(req => req.weight = req.weight / totalWeight)\n\t}\n\n\tpublic override get percent(): number {\n\t\treturn this.requirements.reduce((acc, req) => acc + (req.percent * req.weight), 0)\n\t}\n}\n","import {Action, ActionKey} from 'data/ACTIONS'\nimport {Events} from 'event'\nimport {Analyser} from '../Analyser'\nimport {TimestampHook} from '../Dispatcher'\nimport {dependency} from '../Injectable'\nimport {Data} from './Data'\nimport {SpeedAdjustments} from './SpeedAdjustments'\n\nconst DEFAULT_CHARGES = 1\nconst GCD_CHARGES = 1\nconst GCD_COOLDOWN_GROUP = 58\n\n// Game data is fudgy at the best of times - this constant represents the maximum\n// amount of \"expected\" fudge time on cooldown overlapping that is worthless to report\nconst OVERLAP_NOISE_THRESHOLD = 50\n\n/** Representative key of a cooldown group. */\nexport type CooldownGroup = Exclude<Action['cooldownGroup'], undefined>\n\n/** Configuration for a single cooldown group on an action. */\ninterface CooldownGroupConfig {\n\taction: Action\n\tprimary: boolean\n\tgroup: CooldownGroup\n\tduration: number\n\tmaximumCharges: number\n}\n\n/**\n * Potential reasons for a group's cooldown to be ended. Encompasses both game-\n * truthful reasons and xiva-specific fudging.\n */\nexport enum CooldownEndReason {\n\tEXPIRED,\n\tINTERRUPTED,\n\tREDUCED,\n\t// Fudges\n\tPULL_ENDED,\n\tOVERLAPPED,\n}\n\n/** Historical representation of a single completed group cooldown. */\nexport interface CooldownHistoryEntry {\n\taction: Action\n\tstart: number\n\tend: number\n\tendReason: CooldownEndReason\n}\n\n/** State of a group's cooldown. */\ntype CooldownState =\n\t& Omit<CooldownHistoryEntry, 'endReason'>\n\t& {\n\t\thook: TimestampHook\n\t}\n\n/** Point in time snapshot of a change to a group's charge state. */\nexport interface ChargeHistoryEntry {\n\ttimestamp: number\n\taction: Action\n\tdelta: number\n\tcurrent: number\n\tmaximum: number\n}\n\n/** State of a group's charges. */\ntype ChargeState =\n\tOmit<ChargeHistoryEntry, 'delta' | 'timestamp'>\n\n/** Full state for a cooldown group. */\ninterface CooldownGroupState {\n\tcooldown?: CooldownState\n\tcooldownHistory: CooldownHistoryEntry[]\n\tcharges: ChargeState\n\tchargeHistory: ChargeHistoryEntry[]\n}\n\nexport type ActionSpecifier = Action | ActionKey\nexport type SelectionSpecifier = 'GCD' | CooldownGroup | ActionSpecifier\n\n/** Options for selection of groups that should be read/modified by a method. */\nexport interface SelectionOptions {\n\t/** Retrieve data for only the primary group of an action. Default `true`. */\n\tprimary: boolean\n}\n\nconst DEFAULT_SELECTION_OPTIONS: SelectionOptions = {\n\tprimary: true,\n}\n\nexport class Cooldowns extends Analyser {\n\tstatic override handle = 'cooldowns'\n\tstatic override debug = false\n\n\t@dependency private data!: Data\n\t@dependency private speedAdjustments!: SpeedAdjustments\n\n\t// A few of the actions used as keys are ephemeral, using weak to prevent leaking references to them.\n\tprivate actionConfigCache = new WeakMap<Action, CooldownGroupConfig[]>()\n\tprivate currentCast?: Action['id']\n\tprivate groupStates = new Map<CooldownGroup, CooldownGroupState>()\n\n\t/**\n\t * Get the cooldown group IDs for the specified action.\n\t *\n\t * @param specifier Selection specifier for groups who should be returned.\n\t * @param options Options to select the groups to read.\n\t */\n\tgroups(specifier: SelectionSpecifier, options?: Partial<SelectionOptions>) {\n\t\treturn Array.from(\n\t\t\tthis.iterateStates(specifier, options),\n\t\t\t({config}) => config.group\n\t\t)\n\t}\n\n\t/** Get a list of all known cooldown group IDs. */\n\tallGroups() {\n\t\treturn Array.from(this.groupStates.keys())\n\t}\n\n\t/**\n\t * Get the remaining time on cooldown of the specified group, in milliseconds.\n\t * If multiple groups are selected, the longest remaining cooldown will be returned.\n\t *\n\t * @param specifier Selection specifier for groups whose cooldown should be retrieved.\n\t * @param options Options to select the groups to read.\n\t */\n\tremaining(specifier: SelectionSpecifier, options?: Partial<SelectionOptions>) {\n\t\tlet remaining = 0\n\t\tfor (const {state: {cooldown}} of this.iterateStates(specifier, options)) {\n\t\t\tif (cooldown == null) { continue }\n\n\t\t\tremaining = Math.max(remaining, cooldown.end - this.parser.currentEpochTimestamp)\n\t\t}\n\n\t\treturn remaining\n\t}\n\n\t/**\n\t * Get the remaining charges of the specifiec action. If multiple groups are\n\t * selected, the minimum remaining charges will be returned.\n\t *\n\t * @param specifier Selection specifier for groups whose charges should be retrieved.\n\t * @param options Options to select the groups to read.\n\t */\n\tcharges(specifier: SelectionSpecifier, options?: Partial<SelectionOptions>) {\n\t\tconst chargeValues = []\n\t\tfor (const {state: {charges}} of this.iterateStates(specifier, options)) {\n\t\t\tchargeValues.push(charges.current)\n\t\t}\n\n\t\treturn chargeValues.length > 0\n\t\t\t? Math.min(...chargeValues)\n\t\t\t: 0\n\t}\n\n\t/**\n\t * Reduduce the remaining cooldown of groups associated with the specified\n\t * action by a set duration.\n\t *\n\t * @param action The action whose groups should be reduced.\n\t * @param reduction Duration in milliseconds that group cooldowns should be reduced by.\n\t */\n\treduce(action: ActionSpecifier, reduction: number, options?: Partial<SelectionOptions>) {\n\t\tfor (const {config, state: {cooldown}} of this.iterateStates(action, options)) {\n\t\t\t// If this group isn't on CD, no need to attempt to reduce it\n\t\t\tif (cooldown == null) { continue }\n\n\t\t\tconst newEnd = cooldown.end - reduction\n\n\t\t\t// If the new end time is in the past (or precisely now), the reduction\n\t\t\t// behaves like a reset with all the charge logic involved in that.\n\t\t\tif (newEnd <= this.parser.currentEpochTimestamp) {\n\t\t\t\tthis.endCooldown(config, CooldownEndReason.REDUCED)\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\t// Otherwise, we need to adjust the expected end time and reconfigure the hook\n\t\t\tcooldown.end = newEnd\n\t\t\tthis.removeTimestampHook(cooldown.hook)\n\t\t\tcooldown.hook = this.addTimestampHook(newEnd, () => {\n\t\t\t\tthis.endCooldown(config, CooldownEndReason.EXPIRED)\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Reset the cooldown on any active groups assocuited with the specified action.\n\t *\n\t * @param action The action whose groups should be reset.\n\t * @param options Options to select the groups to modify.\n\t */\n\treset(action: ActionSpecifier, options?: Partial<SelectionOptions>) {\n\t\tfor (const {config, state: {cooldown}} of this.iterateStates(action, options)) {\n\t\t\tif (cooldown == null) { continue }\n\t\t\tthis.endCooldown(config, CooldownEndReason.REDUCED)\n\t\t}\n\t}\n\n\t/**\n\t * Fetch the cooldown history of the specified action.\n\t *\n\t * @param specifier Selection specifier for group whose history should be retrieved.\n\t * @param options Options to select the groups to retieve.\n\t */\n\tcooldownHistory(specifier: SelectionSpecifier, options?: Partial<SelectionOptions>) {\n\t\tconst histories: CooldownHistoryEntry[] = []\n\t\tfor (const {state: {cooldownHistory}} of this.iterateStates(specifier, options)) {\n\t\t\thistories.push(...cooldownHistory)\n\t\t}\n\t\thistories.sort(\n\t\t\t(a, b) => a.start - b.start\n\t\t)\n\t\treturn histories\n\t}\n\n\t/**\n\t * Fetch the charge history of the specified action.\n\t *\n\t * @param specifier Selection specifier for group whose history should be retrieved.\n\t * @param options Options to select the groups to retieve.\n\t */\n\tchargeHistory(specifier: SelectionSpecifier, options?: Partial<SelectionOptions>) {\n\t\tconst histories: ChargeHistoryEntry[] = []\n\t\tfor (const {state: {chargeHistory}} of this.iterateStates(specifier, options)) {\n\t\t\thistories.push(...chargeHistory)\n\t\t}\n\t\thistories.sort(\n\t\t\t(a, b) => a.timestamp - b.timestamp\n\t\t)\n\t\treturn histories\n\t}\n\n\tprivate *iterateStates(specifier: SelectionSpecifier, options?: Partial<SelectionOptions>) {\n\t\tlet fullAction = specifier\n\t\tif (fullAction === 'GCD') {\n\t\t\t// Fabricating a fake GCD action\n\t\t\tfullAction = {\n\t\t\t\t...this.data.actions.UNKNOWN,\n\t\t\t\tonGcd: true,\n\t\t\t}\n\t\t} else if (typeof fullAction === 'number') {\n\t\t\t// Cooldown group\n\t\t\tfullAction = {\n\t\t\t\t...this.data.actions.UNKNOWN,\n\t\t\t\tcooldownGroup: fullAction,\n\t\t\t}\n\t\t} else if (typeof fullAction === 'string') {\n\t\t\t// Action key\n\t\t\tfullAction = this.data.actions[fullAction]\n\t\t}\n\n\t\tconst opts: SelectionOptions = {...DEFAULT_SELECTION_OPTIONS, ...options}\n\n\t\tfor (const config of this.getActionConfigs(fullAction)) {\n\t\t\tif (opts.primary && !config.primary) { continue }\n\n\t\t\tyield {config, state: this.getGroupState(config)}\n\t\t}\n\t}\n\n\toverride initialise() {\n\t\tthis.addEventHook(\n\t\t\t{type: 'prepare', source: this.parser.actor.id},\n\t\t\tthis.onPrepare,\n\t\t)\n\n\t\tthis.addEventHook(\n\t\t\t{type: 'interrupt', target: this.parser.actor.id},\n\t\t\tthis.onInterrupt,\n\t\t)\n\n\t\tthis.addEventHook(\n\t\t\t{type: 'action', source: this.parser.actor.id},\n\t\t\tthis.onAction,\n\t\t)\n\n\t\tthis.addEventHook('complete', this.onComplete)\n\t}\n\n\tprivate onPrepare(event: Events['prepare']) {\n\t\tthis.currentCast = event.action\n\n\t\tconst action = this.data.getAction(event.action)\n\t\tif (action == null) { return }\n\n\t\t// This is, for the sake of simplicity, assuming that charges are consumed\n\t\t// on prepare. As it stands, no 2+ charge action actually has a cast time,\n\t\t// so this is a pretty-safe assumption. Revisit if this ever changes.\n\t\tthis.useAction(action)\n\t}\n\n\tprivate onInterrupt(event: Events['interrupt']) {\n\t\t// If the interrupt doesn't match the current cast, something has gone very wrong\n\t\tif (this.currentCast !== event.action) {\n\t\t\t// TODO: Broken log?\n\t\t\tthrow new Error('Interrupted action does not match expected current cast.')\n\t\t}\n\n\t\t// Clear out current cast state\n\t\tthis.currentCast = undefined\n\n\t\tconst action = this.data.getAction(event.action)\n\t\tif (action == null) { return }\n\n\t\t// Reset cooldown for any of the interrupted cast's groups that are currently\n\t\t// active. We avoid inactive ones explicitly, as it's possible to interrupt\n\t\t// a cast beyond the end of all related cooldown groups (i.e. rdm long casts).\n\t\t// NOTE: This assumes that interrupting casts refunds charges. Given that,\n\t\t//       at current, there are no multi-charge or non-gcd interruptible\n\t\t//       skills, this is a safe assumption. Re-evaluate if the above changes.\n\t\tfor (const config of this.getActionConfigs(action)) {\n\t\t\tconst state = this.getGroupState(config)\n\t\t\tif (state.cooldown == null) { continue }\n\t\t\tthis.endCooldown(config, CooldownEndReason.INTERRUPTED)\n\t\t}\n\t}\n\n\tprivate onAction(event: Events['action']) {\n\t\t// Clear out any current casting state. If we're finishing a cast that's\n\t\t// already been tracked, noop.\n\t\tconst currentCast = this.currentCast\n\t\tthis.currentCast = undefined\n\t\tif (currentCast === event.action) {\n\t\t\treturn\n\t\t}\n\n\t\tconst action = this.data.getAction(event.action)\n\t\tif (action == null) { return }\n\n\t\tthis.useAction(action)\n\t}\n\n\tprivate onComplete() {\n\t\t// Clean up any cooldown groups that are still active\n\t\t// Using fake group config, as it's pretty irrelevant at this point of the run\n\t\tconst baseConfig = {\n\t\t\taction: this.data.actions.UNKNOWN,\n\t\t\tprimary: false,\n\t\t\tduration: 0,\n\t\t\tmaximumCharges: DEFAULT_CHARGES,\n\t\t}\n\n\t\tfor (const [group, state] of this.groupStates.entries()) {\n\t\t\tif (state.cooldown == null) { continue }\n\t\t\tthis.resolveCooldown(\n\t\t\t\t{group, ...baseConfig},\n\t\t\t\tCooldownEndReason.PULL_ENDED\n\t\t\t)\n\t\t}\n\t}\n\n\tprivate useAction(action: Action) {\n\t\t// TODO: precompute?\n\t\tfor (const config of this.getActionConfigs(action)) {\n\t\t\tthis.consumeCharge(config)\n\t\t}\n\t}\n\n\tprivate consumeCharge(config: CooldownGroupConfig) {\n\t\tconst groupState = this.getGroupState(config)\n\t\tconst chargeState = groupState.charges\n\n\t\tconst now = this.parser.currentEpochTimestamp\n\n\t\t// Check if we actually have a charge to consume. It's technically impossible for\n\t\t// this to trip, but the game (and log data) is fuzzy at the best of times, so it\n\t\t// actually occurs quite frequently. Blame Square Enix™️. Fudging by ending current\n\t\t// cooldown as an overlap to respect the log data and gain a charge to spend.\n\t\t// TODO: Even with speed adjustments, CDGs like the GCD (58) have some seriously\n\t\t//       fuzzy timings in logs and cause considerable overlapping. Look into it.\n\t\tif (chargeState.current <= 0) {\n\t\t\t// To be in the state of 0 charges, a cooldown _should_ be active. If it\n\t\t\t// isn't, something is _immensely_ wrong.\n\t\t\tconst cooldownState = groupState.cooldown\n\t\t\tif (cooldownState == null) {\n\t\t\t\tthrow new Error(`Attempted to consume charge of group ${config.group} at ${this.parser.formatEpochTimestamp(now)} with no charges remaining, and no active cooldown to fudge.`)\n\t\t\t}\n\n\t\t\tthis.debug(({log}) => {\n\t\t\t\tconst delta = cooldownState.end - now\n\t\t\t\tif (delta <= OVERLAP_NOISE_THRESHOLD) { return }\n\n\t\t\t\tlog(`Use of ${config.action.name} at ${this.parser.formatEpochTimestamp(now)} consumes a charge of group ${config.group} with ${chargeState.current} charges. Expected charge gain at ${this.parser.formatEpochTimestamp(cooldownState.end)} (delta ${delta}), fudging.`)\n\t\t\t})\n\n\t\t\tthis.endCooldown(config, CooldownEndReason.OVERLAPPED)\n\t\t}\n\n\t\t// If the group was at maximum charges, this usage will trip it's cooldown\n\t\tif (chargeState.current === chargeState.maximum) {\n\t\t\tthis.startCooldown(config)\n\t\t}\n\n\t\t// Consume the charge and add to history\n\t\tchargeState.current--\n\t\tchargeState.action = config.action\n\t\tgroupState.chargeHistory.push({\n\t\t\t...chargeState,\n\t\t\ttimestamp: now,\n\t\t\tdelta: -1,\n\t\t})\n\t}\n\n\tprivate gainCharge(config: CooldownGroupConfig) {\n\t\t// Get the current charge state for the group. If it's already at max, or\n\t\t// there's no state (implicitly max), we can noop.\n\t\tconst {charges: chargeState, chargeHistory} = this.getGroupState(config)\n\t\tif (\n\t\t\tchargeState == null\n\t\t\t|| chargeState.current === chargeState.maximum\n\t\t) {\n\t\t\treturn\n\t\t}\n\n\t\t// Add the charge and record\n\t\tchargeState.current++\n\t\tchargeHistory.push({\n\t\t\t...chargeState,\n\t\t\ttimestamp: this.parser.currentEpochTimestamp,\n\t\t\tdelta: +1,\n\t\t})\n\n\t\t// If there are still charges left to regenerate on the action, boot up\n\t\t// another cooldown for it.\n\t\t// TODO: This will break if ever there is a single CDG with 2+ actions in\n\t\t//       it, which have 2+ charges. The game does not currently contain\n\t\t//       anything which breaks this assumption.\n\t\tif (chargeState.current < chargeState.maximum) {\n\t\t\tthis.startCooldown(config)\n\t\t}\n\t}\n\n\tprivate startCooldown(config: CooldownGroupConfig) {\n\t\tconst groupState = this.getGroupState(config)\n\n\t\t// Groups only track one cooldown at a time. Any overlapping should be\n\t\t// resolved by charge consumption logic.\n\t\tconst cooldownState = groupState.cooldown\n\t\tif (cooldownState != null) {\n\t\t\tthrow new Error(`Cannot start cooldown for already-active group ${config.group} at ${this.parser.formatEpochTimestamp(this.parser.currentEpochTimestamp)}.`)\n\t\t}\n\n\t\t// Calculate an adjusted duration based on the triggering action\n\t\tlet duration = config.duration\n\t\tif (config.action.speedAttribute != null) {\n\t\t\tduration = this.speedAdjustments.getAdjustedDuration({\n\t\t\t\tduration,\n\t\t\t\tattribute: config.action.speedAttribute,\n\t\t\t})\n\t\t}\n\n\t\t// Save cooldown info into the state\n\t\tconst start = this.parser.currentEpochTimestamp\n\t\tconst end = start + duration\n\t\tgroupState.cooldown = {\n\t\t\taction: config.action,\n\t\t\tstart,\n\t\t\tend,\n\t\t\thook: this.addTimestampHook(end, () => {\n\t\t\t\tthis.endCooldown(config, CooldownEndReason.EXPIRED)\n\t\t\t}),\n\t\t}\n\t}\n\n\tprivate endCooldown(config: CooldownGroupConfig, reason: CooldownEndReason) {\n\t\tthis.resolveCooldown(config, reason)\n\n\t\t// The cooldown ended, we can regenerate a charge on it.\n\t\tthis.gainCharge(config)\n\t}\n\n\tprivate resolveCooldown(config: CooldownGroupConfig, reason: CooldownEndReason) {\n\t\t// Grab the current cooldown state for the group - if there is none, something\n\t\t// has gone pretty wrong.\n\t\tconst groupState = this.getGroupState(config)\n\t\tconst cooldownState = groupState.cooldown\n\t\tif (cooldownState == null) {\n\t\t\tthrow new Error(`Trying to end cooldown for group ${config.group} which has no current state.`)\n\t\t}\n\n\t\t// Clear the state out of shared structures and update the end to match the\n\t\t// current timestamp (will be a noop if CDG expired uneventfully).\n\t\tgroupState.cooldown = undefined\n\t\tthis.removeTimestampHook(cooldownState.hook)\n\t\tcooldownState.end = this.parser.currentEpochTimestamp\n\n\t\tgroupState.cooldownHistory.push({\n\t\t\taction: cooldownState.action,\n\t\t\tstart: cooldownState.start,\n\t\t\tend: cooldownState.end,\n\t\t\tendReason: reason,\n\t\t})\n\t}\n\n\tprivate getGroupState(config: CooldownGroupConfig) {\n\t\t// Get the CDG's current state, fabricating a fresh one if none exists\n\t\tlet groupState = this.groupStates.get(config.group)\n\t\tif (groupState == null) {\n\t\t\tconst maximum = config.maximumCharges\n\t\t\tgroupState = {\n\t\t\t\tcooldownHistory: [],\n\t\t\t\tcharges: {\n\t\t\t\t\taction: this.data.actions.UNKNOWN,\n\t\t\t\t\tcurrent: maximum,\n\t\t\t\t\tmaximum,\n\t\t\t\t},\n\t\t\t\tchargeHistory: [],\n\t\t\t}\n\t\t\tthis.groupStates.set(config.group, groupState)\n\t\t}\n\t\treturn groupState\n\t}\n\n\tprivate getActionConfigs(action: Action): CooldownGroupConfig[] {\n\t\t// TODO: Write automated CDG extraction from the data files, current data\n\t\t//       is pretty dumb about this stuff.\n\t\tlet groups = this.actionConfigCache.get(action)\n\t\tif (groups != null) {\n\t\t\treturn groups\n\t\t}\n\t\tgroups = []\n\t\tthis.actionConfigCache.set(action, groups)\n\n\t\t// If the action has no cooldown at all (technically impossible), we can't\n\t\t// track cooldowns for it.\n\t\tif (action.cooldown == null) { return groups }\n\n\t\t// GCDs all share a CDG.\n\t\tif (action.onGcd) {\n\t\t\tgroups.push({\n\t\t\t\taction,\n\t\t\t\tprimary: false,\n\t\t\t\tgroup: GCD_COOLDOWN_GROUP,\n\t\t\t\tduration: action.gcdRecast ?? action.cooldown,\n\t\t\t\tmaximumCharges: GCD_CHARGES,\n\t\t\t})\n\n\t\t\t// GCDs with a seperate recast are part of two CDGs.\n\t\t\tif (action.gcdRecast == null) {\n\t\t\t\tgroups[groups.length - 1].primary = true\n\t\t\t\treturn groups\n\t\t\t}\n\t\t}\n\n\t\t// Include the action's CDG. If none is specified, use the action ID to fill\n\t\t// in (all actions must have 1+ CDGs from a game POV). Using negative to ensure\n\t\t// that fudged CDGs do not overlap with real data.\n\t\tgroups.push({\n\t\t\taction,\n\t\t\tprimary: true,\n\t\t\tgroup: action.cooldownGroup ?? -action.id,\n\t\t\tduration: action.cooldown,\n\t\t\tmaximumCharges: action.charges ?? DEFAULT_CHARGES,\n\t\t})\n\t\treturn groups\n\t}\n}\n","enum DISPLAY_ORDER {\n\tABOUT = -50,\n\tBROKEN_LOG = -40,\n\tCHECKLIST = -30,\n\tSUGGESTIONS = -20,\n\tSTATISTICS = -10,\n\t// Module DO is 0-100\n\tCOMBOS = 110,\n\tPOSITIONALS = 120,\n\tDEFENSIVES = 125,\n\tTIMELINE = 130,\n\tEVENTS_VIEW = 140,\n\tCHANGELOG = 150,\n}\n\nexport default DISPLAY_ORDER\n","import {getDataBy} from 'data'\nimport {\n\tAction,\n\tActionKey,\n\tlayers as actionLayers,\n\troot as actionRoot,\n} from 'data/ACTIONS'\nimport {getAppliedData, Layer} from 'data/layer'\nimport {\n\tlayers as statusLayers,\n\troot as statusRoot,\n\tStatus,\n\tStatusKey,\n} from 'data/STATUSES'\nimport {Cause} from 'event'\nimport {Analyser} from 'parser/core/Analyser'\nimport {filter, oneOf} from 'parser/core/filter'\n\nexport class Data extends Analyser {\n\tstatic override handle = 'data'\n\n\tget actions() {\n\t\treturn this.getAppliedData(actionRoot, actionLayers)\n\t}\n\n\tget statuses() {\n\t\treturn this.getAppliedData(statusRoot, statusLayers)\n\t}\n\n\tgetAction(id: Action['id']): Action | undefined {\n\t\treturn getDataBy(this.actions, 'id', id)\n\t}\n\n\tgetStatus(id: Status['id']): Status | undefined {\n\t\treturn getDataBy(this.statuses, 'id', id)\n\t}\n\n\tmatchActionId(keys: ActionKey[]) {\n\t\treturn oneOf(keys.map(key => this.actions[key].id))\n\t}\n\n\tmatchCauseAction(keys: ActionKey[]) {\n\t\treturn filter<Cause>().type('action').action(this.matchActionId(keys))\n\t}\n\n\tmatchCauseActionId(keys: number[]) {\n\t\treturn filter<Cause>().type('action').action(oneOf(keys))\n\t}\n\n\tmatchStatusId(keys: StatusKey[]) {\n\t\treturn oneOf(keys.map(key => this.statuses[key].id))\n\t}\n\n\tmatchCauseStatus(keys: StatusKey[]) {\n\t\treturn filter<Cause>().type('status').status(this.matchStatusId(keys))\n\t}\n\n\tmatchCauseStatusId(keys: number[]) {\n\t\treturn filter<Cause>().type('status').status(oneOf(keys))\n\t}\n\n\tprivate getAppliedData<R extends object>(root: R, layers: Array<Layer<R>>): R {\n\t\treturn getAppliedData({\n\t\t\troot,\n\t\t\tlayers,\n\t\t\tstate: {\n\t\t\t\tpatch: this.parser.patch,\n\t\t\t},\n\t\t})\n\t}\n}\n","import React from 'react'\nimport {Analyser} from '../Analyser'\nimport {dependency} from '../Injectable'\nimport {Invulnerability} from './Invulnerability'\nimport {Timeline, SimpleItem} from './Timeline'\nimport {UnableToAct} from './UnableToAct'\n\ninterface DowntimeWindow {\n\tstart: number,\n\tend: number\n}\n\nexport default class Downtime extends Analyser {\n\tstatic override handle = 'downtime'\n\n\t@dependency private readonly unableToAct!: UnableToAct\n\t@dependency private readonly invulnerability!: Invulnerability\n\t@dependency private readonly timeline!: Timeline\n\n\toverride initialise() {\n\t\tthis.addEventHook('complete', this.onComplete)\n\t}\n\n\tprivate internalDowntime(start = this.parser.pull.timestamp, end = this.parser.currentEpochTimestamp) {\n\t\t// Get all the downtime from both unableToAct and invuln, and sort it\n\t\tconst downtimePeriods: DowntimeWindow[] = [\n\t\t\t...this.unableToAct.getWindows({\n\t\t\t\tstart,\n\t\t\t\tend,\n\t\t\t}),\n\t\t\t...this.invulnerability.getWindows({\n\t\t\t\tstart,\n\t\t\t\tend,\n\t\t\t\ttypes: ['untargetable'],\n\t\t\t}),\n\t\t].sort((a, b) => a.start - b.start)\n\n\t\t// If there's nothing, just stop now\n\t\tconst firstElement = downtimePeriods.shift()\n\t\tif (firstElement == null) {\n\t\t\treturn []\n\t\t}\n\n\t\tconst finalDowntimes = [firstElement]\n\t\tdowntimePeriods.forEach(downtime => {\n\t\t\tconst last = finalDowntimes[finalDowntimes.length - 1]\n\t\t\tif (downtime.start <= last.end) {\n\t\t\t\tif (downtime.end > last.end) {\n\t\t\t\t\tlast.end = downtime.end\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfinalDowntimes.push(downtime)\n\t\t\t}\n\t\t})\n\n\t\treturn finalDowntimes\n\t}\n\n\tisDowntime(when = this.parser.currentEpochTimestamp) {\n\t\treturn this.internalDowntime(when, when).length > 0\n\t}\n\n\tgetDowntime(start = this.parser.pull.timestamp, end = this.parser.currentEpochTimestamp) {\n\t\treturn this.internalDowntime(start, end).reduce(\n\t\t\t(uptime, invuln) => uptime + Math.min(invuln.end, end) - Math.max(invuln.start, start),\n\t\t\t0,\n\t\t)\n\t}\n\n\tgetDowntimeWindows = (start = this.parser.pull.timestamp, end = this.parser.currentEpochTimestamp) =>\n\t\tthis.internalDowntime(start, end).reduce<DowntimeWindow[]>(\n\t\t\t(windows, invuln) => {\n\t\t\t\twindows.push({\n\t\t\t\t\tstart: Math.max(invuln.start, start),\n\t\t\t\t\tend: Math.min(invuln.end, end),\n\t\t\t\t})\n\t\t\t\treturn windows\n\t\t\t},\n\t\t\t[],\n\t\t)\n\n\tprivate onComplete() {\n\t\tconst startTime = this.parser.pull.timestamp\n\t\tconst windows = this.getDowntimeWindows()\n\n\t\twindows.forEach(window => {\n\t\t\tthis.timeline.addItem(new SimpleItem({\n\t\t\t\tstart: window.start - startTime,\n\t\t\t\tend: window.end - startTime,\n\t\t\t\t// TODO: This but better?\n\t\t\t\tcontent: <div style={{width: '100%', height: '100%', backgroundColor: '#d5ddf666'}}/>,\n\t\t\t}))\n\t\t})\n\t}\n}\n","import {Event, Events, Resource} from 'event'\nimport React from 'react'\nimport {Actor, ReportMetaKey, Team} from 'report'\nimport * as TB from 'ts-toolbelt'\nimport {Analyser} from '../Analyser'\nimport {exists, filter, oneOf} from '../filter'\nimport {dependency} from '../Injectable'\nimport {SimpleItem, SimpleRow, Timeline} from './Timeline'\n\nexport enum Check {\n\t/** Mark an actor as targetable when it is first targeted by an event. */\n\tFIRST_TARGETED,\n\t/** Check actor updates for changes to actor targetability. */\n\tTARGETABLE,\n\t/** Consider an actor as untargetable on death. */\n\tDEATH,\n\t/**\n\t * Consider an actor as untargetable on hitting 1HP or being overkilled.\n\t * Use for actors that do not die in a typical manner.\n\t */\n\tOVERKILL,\n}\n\nconst DEFAULT_CHECKS = [\n\tCheck.FIRST_TARGETED,\n\tCheck.TARGETABLE,\n\tCheck.DEATH,\n]\n\ninterface IncludedActorConfig {\n\t/**\n\t * Checks to perform to determine targetability.\n\t * Defaults to [FIRST_TARGETED, TARGETABLE, DEATH].\n\t */\n\tchecks?: Check[]\n\n\t/**\n\t * Mirror 'untargetable' invuln windows into 'invulnerable' windows.\n\t * Default `true`. Disable for actors that take damage while untargetable -\n\t * you will need to add custom logic to add the invulnerable windows yourself.\n\t */\n\tmirrorToInvuln?: boolean\n}\n\ntype ActorConfig =\n\t& {kind: Record<ReportMetaKey, Actor['kind']>}\n\t& (\n\t\t| {exclude: true}\n\t\t| ({exclude?: false} & IncludedActorConfig)\n\t)\n\nexport type ActorsConfig = ActorConfig[]\n\nconst SHARED_ACTOR_CONFIG: ActorsConfig = [\n\t// Exclude unknown actors\n\t{kind: {legacyFflogs: 'unknown'}, exclude: true},\n]\n\nconst ALL_TYPES = ['invulnerable', 'untargetable'] as const\n/**\n * Possible type of invulnerability.\n * - `invulnerable` - the actor cannot be damaged\n * - `untargetable` - the actor cannot be targeted\n */\nexport type Type = (typeof ALL_TYPES)[number]\n\n/** A period of time. */\nexport interface Window {\n\tstart: number\n\tend: number\n}\n\n/**\n * The \"side\" of a window that an edge represents. The values of this enum are\n * _not_ arbitrary - they're used as part of the intersection algorithm. Don't\n * change them.\n */\nenum EdgeSide {\n\tSTART = 1,\n\tEND = -1,\n}\n\n/**\n * Representation of a boundary between a type being active and inactive, or\n * visa versa.\n */\ninterface Edge {\n\t/** ID representing the pairing of a START edge with its corresponding END edge. */\n\tid: number\n\tside: EdgeSide\n\ttimestamp: number\n}\n\n/** Options available to narrow considered data when merging ranges. */\nexport interface WindowFilter {\n\t/** Earliest point in time to consider. Defaults to the time of the pull. */\n\tstart?: number\n\t/** Latest point in time to consider. Defaults to the current timestamp. */\n\tend?: number\n\t/** Invulnerability types to consider. Defaults to all possible types. */\n\ttypes?: readonly Type[]\n\t/**\n\t * Filter to select actors that should be considered. Defaults to selecting\n\t * all actors on the FOE team.\n\t */\n\tactorFilter?: (actor: Actor) => boolean\n}\n\nconst DEFAULT_ACTOR_FILTER = filter<Actor>().team(Team.FOE)\n\nexport class Invulnerability extends Analyser {\n\tstatic override handle = 'invulnerability'\n\tstatic override debug = false\n\n\t@dependency private timeline!: Timeline\n\n\t/**\n\t * Array of configuration overrides. The default configuration should be fine\n\t * for most actors - add an override if the derived invulnerability windows\n\t * look wrong.\n\t */\n\tprotected actorConfig: ActorConfig[] = []\n\n\tprivate watchedActors = new Set<Actor>()\n\tprivate skipMirroring = new Set<Actor['id']>()\n\tprivate seenActors = new Set<Actor['id']>()\n\tprivate edges = new Map<Actor['id'], Record<Type, Edge[]>>()\n\n\tprivate nextEdgeId = 0\n\tprivate getNextEdgeId = () => this.nextEdgeId++\n\n\t// =====\n\t// #region Public API\n\t// =====\n\n\tisActive({\n\t\ttimestamp = this.parser.currentEpochTimestamp,\n\t\t...rest\n\t}: Omit<WindowFilter, 'start' | 'end'> & {timestamp?: number}): boolean {\n\t\tconst windows = this.getWindows({\n\t\t\t...rest,\n\t\t\tstart: timestamp,\n\t\t\tend: timestamp,\n\t\t})\n\t\treturn windows.length > 0\n\t}\n\n\tgetDuration(filter?: WindowFilter): number {\n\t\tconst windows = this.getWindows(filter)\n\t\treturn windows.reduce(\n\t\t\t(total, window) => total + (window.end - window.start),\n\t\t\t0,\n\t\t)\n\t}\n\n\tgetWindows({\n\t\tstart: rawStart = this.parser.pull.timestamp,\n\t\tend: rawEnd = this.parser.currentEpochTimestamp,\n\t\ttypes = ALL_TYPES,\n\t\tactorFilter = DEFAULT_ACTOR_FILTER,\n\t}: WindowFilter = {}): Window[] {\n\t\t// Ensure that the start is during the pull, and the end is not behind it.\n\t\t// We also ensure that the requested window is at minimum 1ms long to prevent\n\t\t// the following algorithm from trying to calculate a window with no duration.\n\t\tconst start = Math.max(rawStart, this.parser.pull.timestamp - 1)\n\t\tconst end = Math.max(rawEnd, rawStart + 1)\n\n\t\t// We track the expected total depth - equiv to number of matched actors\n\t\t// times requested types - to ensure we only catch full-invuln windows\n\t\tlet expectedDepth = 0\n\n\t\t// Collect all edges matching the filter\n\t\tconst edges: Edge[] = []\n\t\tfor (const actor of this.watchedActors) {\n\t\t\tif (!actorFilter(actor)) { continue }\n\n\t\t\texpectedDepth += types.length\n\n\t\t\tfor (const type of types) {\n\t\t\t\t// Fetch edges for this actor under the current type. No edges reliably\n\t\t\t\t// means the actor was available for the type for the full duration,\n\t\t\t\t// which in turn implies we can just shortcut the rest of the method.\n\t\t\t\tconst typeEdges = this.edges.get(actor.id)?.[type]\n\t\t\t\tif (typeEdges == null || typeEdges.length === 0) { return [] }\n\n\t\t\t\tconst rangeEdges = this.getEdgesInRange(typeEdges, start, end)\n\n\t\t\t\t// No edges within the narrowed range likewise implies full availability\n\t\t\t\tif (rangeEdges.length === 0) { return [] }\n\n\t\t\t\tedges.push(...rangeEdges)\n\t\t\t}\n\t\t}\n\n\t\t// Sort edges by their timestamp. When equal, sort with preference towards\n\t\t// maintaining ID pairings. This relies on the values of EdgeSide.\n\t\tedges.sort((a, b) => {\n\t\t\tconst delta = a.timestamp - b.timestamp\n\t\t\treturn delta !== 0\n\t\t\t\t? delta\n\t\t\t\t: a.side - b.side * (a.id === b.id ? -1 : 1)\n\t\t})\n\n\t\t// Trace the current depth of started edges\n\t\tlet depth = 0\n\n\t\tconst windows: Window[] = []\n\t\tfor (let index = 0; index < edges.length; index++) {\n\t\t\tconst edge = edges[index]\n\t\t\tdepth += edge.side\n\n\t\t\tif (depth !== expectedDepth) { continue }\n\n\t\t\t// If the current depth matches expectation, we've got a deepest possible\n\t\t\t// match, signifying a window matching the filter\n\t\t\twindows.push({\n\t\t\t\tstart: edge.timestamp,\n\t\t\t\tend: edges[index + 1].timestamp,\n\t\t\t})\n\t\t}\n\n\t\treturn windows\n\t}\n\n\t/**\n\t * Given a sorted collection of edges, get any within the specified time range.\n\t * Results will be sanity checked to ensure windows are fully represented.\n\t */\n\tprivate getEdgesInRange(edges: readonly Edge[], start: number, end: number): Edge[] {\n\t\t// We track the most recent side when iterating as it indicates the opening\n\t\t// status of a range\n\t\tlet lastSide = EdgeSide.END\n\n\t\t// Get an array of all edges stictly within the specified range\n\t\tconst rangeEdges: Edge[] = []\n\t\tfor (const edge of edges) {\n\t\t\tif (edge.timestamp > end) { break }\n\t\t\tlastSide = edge.side\n\t\t\tif (edge.timestamp < start) { continue }\n\t\t\trangeEdges.push(edge)\n\t\t}\n\n\t\tif (rangeEdges.length === 0) {\n\t\t\t// An empty range with a recent end implies no spanning window\n\t\t\tif (lastSide === EdgeSide.END) { return [] }\n\n\t\t\t// Conversely, a recent start implies full duration\n\t\t\tconst id = this.getNextEdgeId()\n\t\t\treturn [\n\t\t\t\t{id, side: EdgeSide.START, timestamp: start},\n\t\t\t\t{id, side: EdgeSide.END, timestamp: end},\n\t\t\t]\n\t\t}\n\n\t\t// Hem windows on both sides of the shortened range\n\t\tif (rangeEdges[0].side === EdgeSide.END) {\n\t\t\trangeEdges.unshift({\n\t\t\t\tid: rangeEdges[0].id,\n\t\t\t\tside: EdgeSide.START,\n\t\t\t\ttimestamp: start,\n\t\t\t})\n\t\t}\n\n\t\tconst lastEdge = rangeEdges[rangeEdges.length - 1]\n\t\tif (lastEdge.side === EdgeSide.START) {\n\t\t\trangeEdges.push({\n\t\t\t\tid: lastEdge.id,\n\t\t\t\tside: EdgeSide.END,\n\t\t\t\ttimestamp: end,\n\t\t\t})\n\t\t}\n\n\t\treturn rangeEdges\n\t}\n\n\t// =====\n\t// #endregion\n\t// #region Tracking\n\t// =====\n\n\toverride initialise() {\n\t\tconst reportSource = this.parser.report.meta.source\n\n\t\t// Flatten any subclass actor config to a map by the current report sources'\n\t\t// kind keys, for faster lookups later.\n\t\tconst flatConfig = new Map([...SHARED_ACTOR_CONFIG, ...this.actorConfig].map(config => [\n\t\t\tconfig.kind[reportSource],\n\t\t\tconfig,\n\t\t]))\n\n\t\t// Group actors by the checks that should be performed on them.\n\t\tconst actorChecks = new Map<Check, Array<Actor['id']>>()\n\t\tfor (const actor of this.parser.pull.actors) {\n\t\t\t// Skip player-controlled actors and their pets\n\t\t\t// TODO: This is primarily for consistency with old systems. Consider if it's feasible to track PCs.\n\t\t\tif (this.isPlayerDerived(actor)) {\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tconst config = flatConfig.get(actor.kind)\n\n\t\t\t// If the actor has been explicitly excluded, skip it entirely\n\t\t\tif (config != null && config.exclude) {\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tthis.watchedActors.add(actor)\n\n\t\t\t// Check if this actor should not be mirrored\n\t\t\tif (config?.mirrorToInvuln === false) {\n\t\t\t\tthis.skipMirroring.add(actor.id)\n\t\t\t}\n\n\t\t\t// Add the actor to each of the check keys it is configured for\n\t\t\tconst checks = config?.checks ?? DEFAULT_CHECKS\n\t\t\tfor (const check of checks) {\n\t\t\t\tlet actorIds = actorChecks.get(check)\n\t\t\t\tif (actorIds == null) {\n\t\t\t\t\tactorIds = []\n\t\t\t\t\tactorChecks.set(check, actorIds)\n\t\t\t\t}\n\t\t\t\tactorIds.push(actor.id)\n\t\t\t}\n\t\t}\n\n\t\t// Set up hooks for each check\n\t\tconst addHooksFns: Record<Check, (actorIds: Array<Actor['id']>) => void> = {\n\t\t\t[Check.TARGETABLE]: this.addTargetableHooks,\n\t\t\t[Check.DEATH]: this.addDeathHooks,\n\t\t\t[Check.OVERKILL]: this.addOverkillHooks,\n\t\t\t[Check.FIRST_TARGETED]: this.addFirstTargetedHooks,\n\t\t}\n\t\tfor (const [check, ids] of actorChecks) {\n\t\t\taddHooksFns[check](ids)\n\t\t}\n\n\t\tthis.debug(() => this.addEventHook('complete', this.renderDebugTimelineData))\n\t}\n\n\tprivate isPlayerDerived = (actor: Actor): boolean => false\n\t\t|| actor.playerControlled\n\t\t|| (actor.owner != null && this.isPlayerDerived(actor.owner))\n\n\tprivate addTargetableHooks = (actorIds: Array<Actor['id']>) => {\n\t\t// Preemptively start the first window at the beginning of the fight in case\n\t\t// the actor has been configured without first targeted\n\t\tfor (const id of actorIds) {\n\t\t\tthis.addStartEdge(id, -1)\n\t\t}\n\n\t\tthis.addEventHook(\n\t\t\tfilter<Event>()\n\t\t\t\t.type('actorUpdate')\n\t\t\t\t.actor(oneOf(actorIds))\n\t\t\t\t.targetable(exists),\n\t\t\tevent => {\n\t\t\t\t// This should never be hit, but sanity check anyway\n\t\t\t\tif (event.targetable == null) { return }\n\n\t\t\t\tevent.targetable\n\t\t\t\t\t? this.addEndEdge(event.actor, event.timestamp)\n\t\t\t\t\t: this.addStartEdge(event.actor, event.timestamp)\n\t\t\t}\n\t\t)\n\t}\n\n\tprivate addDeathHooks = (actorIds: Array<Actor['id']>) => {\n\t\tthis.addEventHook(\n\t\t\tfilter<Event>()\n\t\t\t\t.type('death')\n\t\t\t\t.actor(oneOf(actorIds)),\n\t\t\tevent => this.addStartEdge(event.actor, event.timestamp),\n\t\t)\n\n\t\tthis.addEventHook(\n\t\t\tfilter<Event>()\n\t\t\t\t.type('raise')\n\t\t\t\t.actor(oneOf(actorIds)),\n\t\t\tevent => this.addEndEdge(event.actor, event.timestamp),\n\t\t)\n\t}\n\n\tprivate addOverkillHooks = (actorIds: Array<Actor['id']>) => {\n\t\t// Hook both overkill and an update to 1HP to ensure all cases are caught\n\t\ttype EventDamageTargets = Events['damage']['targets']\n\t\tthis.addEventHook(\n\t\t\tfilter<Event>()\n\t\t\t\t.type('damage')\n\t\t\t\t.targets((t: EventDamageTargets): t is EventDamageTargets => t.some(target => actorIds.includes(target.target) && target.overkill > 0)),\n\t\t\tevent => {\n\t\t\t\tevent.targets.forEach(t => {\n\t\t\t\t\tif (actorIds.includes(t.target) && t.overkill > 0) {\n\t\t\t\t\t\tthis.addStartEdge(t.target, event.timestamp)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t)\n\t\tthis.addEventHook(\n\t\t\tfilter<Event>()\n\t\t\t\t.type('actorUpdate')\n\t\t\t\t.actor(oneOf(actorIds))\n\t\t\t\t.hp(filter<Resource>().current(1)),\n\t\t\tevent => this.addStartEdge(event.actor, event.timestamp),\n\t\t)\n\t}\n\n\tprivate addFirstTargetedHooks = (actorIds: Array<Actor['id']>) => {\n\t\t// Preemptively start the first window at the beginning of time. This will\n\t\t// fall well outside the fight bounds (1970) - it will be constrained\n\t\t// elsewhere. We do this to avoid potential errors caused by prepull logic\n\t\t// causing time backtracking.\n\t\tfor (const id of actorIds) {\n\t\t\tthis.addStartEdge(id, -1)\n\t\t}\n\n\t\t// Handle damage and heal event types separately because they have multi-target support and a different structure than other events\n\t\ttype EventMultiTargets = Events['damage' | 'heal']['targets']\n\t\tthis.addEventHook(\n\t\t\tfilter<Event>()\n\t\t\t\t.type(oneOf(['damage', 'heal']))\n\t\t\t\t.targets((t: EventMultiTargets): t is EventMultiTargets => t.some(target => actorIds.includes(target.target))),\n\t\t\tevent => {\n\t\t\t\tevent.targets.forEach(t => {\n\t\t\t\t\tif (actorIds.includes(t.target)) {\n\t\t\t\t\t\tthis.trackIfFirstTarget(event.source, t.target, event.timestamp)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t)\n\n\t\t// Exclude status updates, it's relatively common for player statuses to be mirrored to\n\t\t// untargetable actors, and we don't want that to crop up and cause issues.\n\t\t// Also exclude damage and heal as they're handled separately above due to their different signature\n\t\tconst ensureEventTypes = <T extends Event['type']>(types: T[]) => types\n\t\tconst ignoredTypes = ensureEventTypes(['statusApply', 'statusRemove', 'damage', 'heal'])\n\n\t\t// This is basically an inverse oneOf\n\t\t// TODO: Look into genericising this. Will require some type hackery in filter, hence not doing right now.\n\t\ttype PermittedTypes = TB.Union.Filter<\n\t\t\tEvent['type'],\n\t\t\t(typeof ignoredTypes) extends Array<infer T> ? T : never\n\t\t>\n\t\tconst ignoredTypesSet = new Set<Event['type']>(ignoredTypes)\n\t\tconst matchType = (value: Event['type']): value is PermittedTypes => !ignoredTypesSet.has(value)\n\n\t\t// Track actors that have been seen so they may be skipped. If you're thinking\n\t\t// of copying this pattern, probably don't - preference adding temporary hooks\n\t\t// that you remove once they've done their job. This is only implemented with\n\t\t// a single hook here due to the majority of the 100+ mechanic actors common in\n\t\t// complex fights never removing their hook, and just chew unnessecary time.\n\t\tthis.addEventHook(\n\t\t\tfilter<Event>()\n\t\t\t\t.type(matchType)\n\t\t\t\t.target(oneOf(actorIds)),\n\t\t\tevent => this.trackIfFirstTarget(event.source, event.target, event.timestamp)\n\t\t)\n\t}\n\n\tprivate trackIfFirstTarget(sourceId: string, targetId: string, timestamp: number) {\n\t\tif (this.seenActors.has(targetId) || sourceId === targetId) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.addEndEdge(targetId, timestamp)\n\t}\n\n\tprivate addStartEdge = (actorId: Actor['id'], timestamp: number) =>\n\t\tthis.mirrorTypeEdge(this.addTypeStartEdge, actorId, timestamp)\n\n\tprivate addEndEdge(actorId: Actor['id'], timestamp: number) {\n\t\tthis.mirrorTypeEdge(this.addTypeEndEdge, actorId, timestamp)\n\n\t\t// It's not uncommon for some checks such as TARGETABLE to close a window before\n\t\t// the actor is first targeted - mark any actors we close a window on as seen\n\t\t// so as to ignore them for the FIRST_TARGETED check\n\t\tthis.seenActors.add(actorId)\n\t}\n\n\tprivate mirrorTypeEdge(\n\t\tfn: (type: Type, actorId: Actor['id'], timestamp: number) => void,\n\t\tactorId: Actor['id'],\n\t\ttimestamp: number,\n\t) {\n\t\t// Start the untargetable window, mirroring to invuln if configured to do so\n\t\tfn('untargetable', actorId, timestamp)\n\t\tif (!this.skipMirroring.has(actorId)) {\n\t\t\tfn('invulnerable', actorId, timestamp)\n\t\t}\n\t}\n\n\tprivate addTypeStartEdge = (type: Type, actorId: Actor['id'], timestamp: number) => {\n\t\tconst edges = this.getActorEdges(actorId)\n\n\t\tconst typeEdges = edges[type]\n\t\tconst lastEdge = typeEdges[typeEdges.length - 1] as Edge | undefined\n\n\t\t// If the previous edge is a start, we can just piggyback on it.\n\t\tif (lastEdge != null && lastEdge.side === EdgeSide.START) {\n\t\t\treturn\n\t\t}\n\n\t\ttypeEdges.push({\n\t\t\tid: this.getNextEdgeId(),\n\t\t\tside: EdgeSide.START,\n\t\t\ttimestamp,\n\t\t})\n\t}\n\n\tprivate addTypeEndEdge = (type: Type, actorId: Actor['id'], timestamp: number) => {\n\t\tconst edges = this.getActorEdges(actorId)\n\n\t\tconst typeEdges = edges[type]\n\t\tconst lastEdge = typeEdges[typeEdges.length - 1] as Edge | undefined\n\n\t\t// If there's no currently open window (a trailing START), we can't really\n\t\t// end anything, as backtracking would effectively change history that may\n\t\t// have already been read. This typically only happens in dungeons and such.\n\t\tif (lastEdge?.side !== EdgeSide.START) {\n\t\t\tthis.debug(`Actor ${actorId} has no ${type} window to end.`)\n\t\t\treturn\n\t\t}\n\n\t\ttypeEdges.push({\n\t\t\tid: lastEdge.id,\n\t\t\tside: EdgeSide.END,\n\t\t\ttimestamp,\n\t\t})\n\t}\n\n\tprivate getActorEdges(actor: Actor['id']) {\n\t\tlet edges = this.edges.get(actor)\n\t\tif (edges == null) {\n\t\t\tedges = {\n\t\t\t\tinvulnerable: [],\n\t\t\t\tuntargetable: [],\n\t\t\t}\n\t\t\tthis.edges.set(actor, edges)\n\t\t}\n\t\treturn edges\n\t}\n\n\t// =====\n\t// #endregion\n\t// #region Debug output\n\t// =====\n\n\tprivate renderDebugTimelineData() {\n\t\tconst parentRow = this.timeline.addRow(new SimpleRow({\n\t\t\tlabel: 'Invuln2 Debug',\n\t\t\torder: -Infinity,\n\t\t}))\n\n\t\tconst kindRows = new Map<Actor['kind'], SimpleRow>()\n\n\t\tfor (const actor of this.watchedActors) {\n\t\t\tlet kindRow = kindRows.get(actor.kind)\n\t\t\tif (kindRow == null) {\n\t\t\t\tconst variousNames = this.parser.pull.actors\n\t\t\t\t\t.some(otherActor => otherActor.kind === actor.kind && otherActor.name !== actor.name)\n\t\t\t\tkindRow = parentRow.addRow(new SimpleRow({\n\t\t\t\t\tlabel: `${variousNames ? '[various]' : actor.name} (${actor.kind})`,\n\t\t\t\t\tcollapse: true,\n\t\t\t\t}))\n\t\t\t\tkindRows.set(actor.kind, kindRow)\n\n\t\t\t\tconst allRow = kindRow.addRow(new SimpleRow({\n\t\t\t\t\tlabel: 'all',\n\t\t\t\t\tcollapse: true,\n\t\t\t\t}))\n\n\t\t\t\tthis.buildDebugTypeRows(\n\t\t\t\t\tallRow,\n\t\t\t\t\tfilterActor => filterActor.kind === actor.kind,\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tconst actorRow = kindRow.addRow(new SimpleRow({\n\t\t\t\tlabel: `${actor.name} (${actor.id})`,\n\t\t\t\tcollapse: true,\n\t\t\t\thideCollapsed: true,\n\t\t\t}))\n\n\t\t\tthis.buildDebugTypeRows(\n\t\t\t\tactorRow,\n\t\t\t\tfilterActor => filterActor.id === actor.id,\n\t\t\t)\n\t\t}\n\t}\n\n\tprivate buildDebugTypeRows(parentRow: SimpleRow, actorFilter: WindowFilter['actorFilter']) {\n\t\tconst startTime = this.parser.pull.timestamp\n\t\tconst endTime = startTime + this.parser.pull.duration\n\n\t\tfor (const type of ALL_TYPES) {\n\t\t\tconst typeRow = parentRow.addRow(new SimpleRow({\n\t\t\t\tlabel: type,\n\t\t\t}))\n\n\t\t\tconst windows = this.getWindows({types: [type], actorFilter})\n\t\t\tfor (const window of windows) {\n\t\t\t\tif (window.start <= startTime && window.end >= endTime) { continue }\n\n\t\t\t\ttypeRow.addItem(new SimpleItem({\n\t\t\t\t\tstart: window.start - startTime,\n\t\t\t\t\tend: window.end - startTime,\n\t\t\t\t\tcontent: <div style={{width: '100%', height: '100%', backgroundColor: '#faa8'}}/>,\n\t\t\t\t}))\n\t\t\t}\n\t\t}\n\t}\n\n\t// =====\n\t// #endregion\n\t// =====\n}\n","import {useId} from '@reach/auto-id'\nimport {PatternLines} from '@visx/pattern'\nimport {Area} from '@visx/shape'\nimport {scaleLinear, ScaleTime} from 'd3-scale'\nimport {curveLinear, curveStepAfter} from 'd3-shape'\nimport _ from 'lodash'\nimport React, {ReactNode} from 'react'\nimport {ResourceData} from './ResourceGraphs'\nimport styles from './ResourceGraphs.module.css'\n\nexport interface GraphProps {\n\tresource: ResourceData\n\tscaleX: ScaleTime<number, number>\n}\n\nexport function Graph({resource, scaleX}: GraphProps) {\n\tconst id = useId()\n\n\t// NOTE: This is currently only rendered once. If we ever start re-rendering\n\t// this frequently, a lot of the logic below should be memo'd.\n\n\t// Ensure there's a data point for the end of the fight to prevent an early drop off\n\tlet data = resource.data\n\n\tif (data.length > 0) {\n\t\tconst [, domainEndDate] = scaleX.domain()\n\t\tconst domainEnd = domainEndDate.getTime()\n\t\tconst lastDatum = data[data.length - 1]\n\t\tif (lastDatum.time < domainEnd) {\n\t\t\tdata = [...data, {...lastDatum, time: domainEnd}]\n\t\t}\n\t}\n\n\t// Find the maximum value in the data and use it to build the Y axis scale\n\tconst maximumY = _.maxBy(resource.data, x => x.maximum)?.maximum ?? 1\n\tconst scaleY = scaleLinear()\n\t\t.domain([0, maximumY ?? 1])\n\t\t.range([1, 0])\n\n\t// Build the graph area for the current value\n\tconst currentArea = <>\n\t\t<ClipPath id={`${id}-current-path`}>\n\t\t\t<Area\n\t\t\t\tdata={data}\n\t\t\t\tcurve={(resource.linear ?? false) ? curveLinear : curveStepAfter}\n\t\t\t\tx={datum => scaleX(datum.time)}\n\t\t\t\ty0={scaleY(0)}\n\t\t\t\ty1={datum => scaleY(datum.current)}\n\t\t\t/>\n\t\t</ClipPath>\n\n\t\t<Rect fill=\"currentColor\" clipPath={`url(#${id}-current-path)`}/>\n\t</>\n\n\t// If the maximum value varies, build an area path for it\n\tlet maximumArea: ReactNode\n\tconst minimumMaximum = _.minBy(resource.data, x => x.maximum)?.maximum\n\tif (minimumMaximum !== maximumY) {\n\t\tmaximumArea = <>\n\t\t\t<PatternLines\n\t\t\t\tid={`${id}-maximum-fill`}\n\t\t\t\theight={5}\n\t\t\t\twidth={5}\n\t\t\t\tstroke=\"currentColor\"\n\t\t\t\tstrokeWidth={1}\n\t\t\t\torientation={['diagonal']}\n\t\t\t/>\n\n\t\t\t<ClipPath id={`${id}-maximum-path`} >\n\t\t\t\t<Area\n\t\t\t\t\tdata={data}\n\t\t\t\t\tcurve={(resource.linear ?? false) ? curveLinear :curveStepAfter}\n\t\t\t\t\tx={datum => scaleX(datum.time)}\n\t\t\t\t\ty0={scaleY(maximumY)}\n\t\t\t\t\ty1={datum => scaleY(datum.maximum)}\n\t\t\t\t/>\n\t\t\t</ClipPath>\n\n\t\t\t<Rect fill={`url(#${id}-maximum-fill)`} clipPath={`url(#${id}-maximum-path)`}/>\n\t\t</>\n\t}\n\n\treturn (\n\t\t<svg\n\t\t\tclassName={styles.graph}\n\t\t\tstyle={{color: resource.colour.toString()}}\n\t\t>\n\t\t\t{currentArea}\n\t\t\t{maximumArea}\n\t\t</svg>\n\t)\n}\n\n// Helpers to deduplicate markup above\n\ninterface ClipPathProps {\n\tid: string\n\tchildren?: ReactNode\n}\n\nconst ClipPath = ({id, children}: ClipPathProps) => (\n\t<defs>\n\t\t<clipPath id={id} clipPathUnits=\"objectBoundingBox\">\n\t\t\t{children}\n\t\t</clipPath>\n\t</defs>\n)\n\ninterface RectProps {\n\tfill: string\n\tclipPath: string\n}\n\nconst Rect = ({fill, clipPath}: RectProps) => (\n\t<rect\n\t\tx=\"0\"\n\t\ty=\"0\"\n\t\twidth=\"100%\"\n\t\theight=\"100%\"\n\t\tfill={fill}\n\t\tclipPath={clipPath}\n\t/>\n)\n","// extracted by mini-css-extract-plugin\nexport default {\"themeBackground\":\"var(--background)\",\"markerPointerSize\":\"5px\",\"graph\":\"ResourceGraphs-module_graph__3x3kb\",\"markerContainer\":\"ResourceGraphs-module_markerContainer__2qW1- ResourceGraphs-module_graph__3x3kb\",\"markerLine\":\"ResourceGraphs-module_markerLine__3WokG\",\"markerTooltip\":\"ResourceGraphs-module_markerTooltip__S7KRZ\",\"resourceList\":\"ResourceGraphs-module_resourceList__2xOkm\",\"resourceItem\":\"ResourceGraphs-module_resourceItem__1fdAM\",\"resourceSwatch\":\"ResourceGraphs-module_resourceSwatch__2gkVy\"};","import {NumberFormat, Trans} from '@lingui/react'\nimport React, {MouseEventHandler, ReactNode, useCallback, useState} from 'react'\nimport {createPortal} from 'react-dom'\nimport {ResourceDatum, ResourceMeta} from './ResourceGraphs'\nimport styles from './ResourceGraphs.module.css'\n\nexport type ResourceInfo =\n\t& ResourceMeta\n\t& Partial<ResourceDatum>\n\nexport interface MarkerHandlerProps {\n\thandle: string,\n\tgetData: (fightPercent: number, handle: string) => ResourceInfo[]\n}\n\ninterface MarkerPositionData {\n\tcursorLeft: number\n\titemTop: number\n\titemLeft: number\n}\n\ninterface MarkerState extends MarkerPositionData {\n\tresources: ResourceInfo[]\n}\n\nexport function MarkerHandler(props: MarkerHandlerProps) {\n\tconst {handle, getData} = props\n\tconst [markerState, setMarkerState] = useState<MarkerState>()\n\n\tconst onMouseMove: MouseEventHandler<HTMLDivElement> = useCallback(event => {\n\t\t// TODO: See if can reduce gBCR usage, it's not a cheap call.\n\t\tconst rect = event.currentTarget.getBoundingClientRect()\n\n\t\tconst fightPercent = (event.clientX - rect.left) / rect.width\n\n\t\tconst resources = getData(fightPercent, handle)\n\n\t\tsetMarkerState({\n\t\t\tcursorLeft: event.clientX,\n\t\t\titemTop: rect.top,\n\t\t\titemLeft: rect.left,\n\t\t\tresources,\n\t\t})\n\t}, [handle, getData])\n\n\tconst onMouseLeave = useCallback(() => {\n\t\tsetMarkerState(undefined)\n\t}, [])\n\n\treturn (\n\t\t<div\n\t\t\tclassName={styles.markerContainer}\n\t\t\tonMouseMove={onMouseMove}\n\t\t\tonMouseLeave={onMouseLeave}\n\t\t>\n\t\t\t{markerState != null && (\n\t\t\t\t<Marker {...markerState}>\n\t\t\t\t\t<ul className={styles.resourceList}>\n\t\t\t\t\t\t{markerState.resources.map(({label, current = 0, maximum = 0, colour}, index) => (\n\t\t\t\t\t\t\t<li key={index} className={styles.resourceItem}>\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tclassName={styles.resourceSwatch}\n\t\t\t\t\t\t\t\t\tstyle={{background: colour.toString()}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Trans id=\"core.resource-graphs.resource-value\">\n\t\t\t\t\t\t\t\t\t{label}:\n\t\t\t\t\t\t\t\t\t<NumberFormat value={current}/> /\n\t\t\t\t\t\t\t\t\t<NumberFormat value={maximum}/>\n\t\t\t\t\t\t\t\t</Trans>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t</Marker>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\ninterface MarkerProps extends MarkerPositionData {\n\tchildren?: ReactNode\n}\n\nconst Marker = ({\n\tchildren,\n\tcursorLeft,\n\titemTop,\n\titemLeft,\n}: MarkerProps) => <>\n\t<div\n\t\tclassName={styles.markerLine}\n\t\tstyle={{left: cursorLeft - itemLeft}}\n\t/>\n\t{createPortal(\n\t\t<div\n\t\t\tclassName={styles.markerTooltip}\n\t\t\tstyle={{\n\t\t\t\ttop: itemTop,\n\t\t\t\tleft: cursorLeft,\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</div>,\n\t\tdocument.body,\n\t)}\n</>\n","import {Trans} from '@lingui/react'\nimport Color from 'color'\nimport {ScaleTime, scaleUtc} from 'd3-scale'\nimport {Resource} from 'event'\nimport _ from 'lodash'\nimport {Analyser, AnalyserOptions} from 'parser/core/Analyser'\nimport {dependency} from 'parser/core/Injectable'\nimport {SimpleItem, SimpleRow, Timeline} from 'parser/core/modules/Timeline'\nimport React, {ReactNode} from 'react'\nimport {Graph} from './Graph'\nimport {MarkerHandler, ResourceInfo} from './MarkerHandler'\n\nexport interface ResourceMeta {\n\tlabel: ReactNode\n\tcolour: string | Color\n\tlinear?: boolean\n}\n\nexport interface ResourceDatum extends Resource {\n\ttime: number\n}\n\nexport interface ResourceData extends ResourceMeta {\n\tdata: ResourceDatum[]\n}\n\nexport interface ResourceDataGroup {\n\tdata: ResourceData[],\n\trow: SimpleRow\n}\n\n/**\n * Note: handle is not included in this interface to allow CounterGauges to opt out of passing it in.\n * If handle is not passed, the code there will assign the data to the default Gauges group.\n */\nexport interface ResourceGraphOptions {\n\t/** The label to display for this group of data */\n\tlabel: ReactNode,\n\t/** Should this group default to collapsed? If not included, the default is yes */\n\tcollapse?: boolean,\n\t/** Should this group be forced to remain collapsed. If not included, the default is no */\n\tforceCollapsed?: boolean\n\t/** The height of the row for the group. If not included, defaults to 64 px */\n\theight?: number\n}\n\nconst DEFAULT_ROW_HEIGHT: number = 64\n\nexport interface ResourceGroupOptions extends ResourceGraphOptions {\n\t/** The handle for this group of data */\n\thandle: string,\n}\n\nexport const RESOURCE_HANDLE: string = 'resources'\nexport const GAUGE_HANDLE: string = 'gauges'\n\nexport class ResourceGraphs extends Analyser {\n\tstatic override handle = 'resourceGraphs'\n\n\t@dependency private timeline!: Timeline\n\n\tprivate scaleX: ScaleTime<number, number>\n\n\tprivate dataGroups: Map<string, ResourceDataGroup> = new Map()\n\n\tconstructor(...args: AnalyserOptions) {\n\t\tsuper(...args)\n\n\t\tthis.addDataGroup({\n\t\t\thandle: RESOURCE_HANDLE,\n\t\t\tlabel: <Trans id=\"core.resource-graphs.row-label\">Resources</Trans>,\n\t\t})\n\t\tconst {timestamp, duration} = this.parser.pull\n\n\t\tthis.scaleX = scaleUtc()\n\t\t\t.domain([timestamp, timestamp + duration])\n\t\t\t.range([0, 1])\n\t}\n\n\t/**\n\t * Shorthand accessor for addData with the default resources group\n\t * @param resource The ResourceData to add\n\t */\n\tpublic addResource(resource: ResourceData) {\n\t\tthis.addResources(resource.label, [resource])\n\t}\n\n\t/**\n\t * Shorthand accessor for addDatas with the default resources group, if adding data to display on the same sub-row\n\t * @param label The sub-row label\n\t * @param resources The array of ResourceData to add\n\t */\n\tpublic addResources(label: ReactNode, resources: ResourceData[]) {\n\t\tthis.addDatas(RESOURCE_HANDLE, resources, label)\n\t}\n\n\t/**\n\t * Shorthand accessor for addData with the default gauges group, creating the group if necessary\n\t * @param gauge The gauge ResourceData to add\n\t * @param opts The ResourceGroupOptions defining this group\n\t */\n\tpublic addGauge(gauge: ResourceData, opts?: ResourceGroupOptions) {\n\t\tthis.addGauges(gauge.label, [gauge], opts)\n\t}\n\n\t/**\n\t * Shorthand accessor for addDatas with the default resources group, if adding data to display on the same sub-row, creating the group if necessary\n\t * @param label The sub-row label\n\t * @param gauges The array of gauge ResourceData to add\n\t * @param opts The ResourceGroupOptions defining this group\n\t */\n\tpublic addGauges(label: ReactNode, gauges: ResourceData[], opts?: ResourceGroupOptions) {\n\t\tlet gaugeGroup = this.dataGroups.get(GAUGE_HANDLE)\n\t\tif (gaugeGroup == null) {\n\t\t\tgaugeGroup = this.addDataGroup({\n\t\t\t\t...opts,\n\t\t\t\thandle: GAUGE_HANDLE,\n\t\t\t\tlabel: <Trans id=\"core.resource-graphs.gauge-label\">Gauges</Trans>,\n\t\t\t})\n\t\t}\n\n\t\tthis.addDatas(GAUGE_HANDLE, gauges, label)\n\t}\n\n\t/**\n\t * Adds a new data group and displays it on the timeline. Updates the group if already present and allowUpdate isn't false\n\t * @param opts The ResourceGroupOptions defining this group\n\t * @returns A reference to the ResourceDataGroup that was added or updated\n\t */\n\tpublic addDataGroup(opts: ResourceGroupOptions): ResourceDataGroup {\n\t\tconst {handle, label, collapse, forceCollapsed, height} = opts\n\t\tlet resourceData = this.dataGroups.get(handle)\n\t\tif (resourceData == null) {\n\t\t\tconst resourceRow = new SimpleRow({\n\t\t\t\tlabel,\n\t\t\t\torder: -200,\n\t\t\t\theight: (height ?? DEFAULT_ROW_HEIGHT),\n\t\t\t\tcollapse: (collapse ?? true),\n\t\t\t\tforceCollapsed: (forceCollapsed ?? false),\n\t\t\t\titems: [new SimpleItem({\n\t\t\t\t\tcontent: <MarkerHandler handle={handle} getData={this.getDataByHandle} />,\n\t\t\t\t\tstart: 0,\n\t\t\t\t\tend: this.parser.pull.duration,\n\t\t\t\t\t// Forcing this item above other items in its row, such that the line\n\t\t\t\t\t// marker is always above all graphs\n\t\t\t\t\tdepth: 1,\n\t\t\t\t})],\n\t\t\t})\n\t\t\tthis.timeline.addRow(resourceRow)\n\t\t\tresourceData = {data: [],\n\t\t\t\trow: resourceRow,\n\t\t\t}\n\t\t\tthis.dataGroups.set(handle, resourceData)\n\t\t} else {\n\t\t\tresourceData.row.collapse = collapse ?? resourceData.row.collapse\n\t\t\tresourceData.row.height = height ?? resourceData.row.height\n\t\t\tresourceData.row.forceCollapsed = forceCollapsed ?? resourceData.row.forceCollapsed\n\t\t}\n\t\treturn resourceData\n\t}\n\n\t/**\n\t * Adds one ResourceData object to the specified group\n\t * @param handle The handle of the group to add this data to\n\t * @param data The ResourceData object to add to the group\n\t */\n\tpublic addData(handle: string, data: ResourceData): void {\n\t\tthis.addDatas(handle, [data], data.label)\n\t}\n\t/**\n\t * Adds a list of ResourceData objects to the specified group\n\t * @param handle The handle of the group to add these data to\n\t * @param label The label for these data within the group\n\t * @param data The array of ResourceData objects to add to the group\n\t */\n\tpublic addDatas(handle: string, data: ResourceData[], label: ReactNode): void {\n\t\tconst dataGroup = this.dataGroups.get(handle)\n\t\tif (dataGroup == null) {\n\t\t\treturn\n\t\t}\n\n\t\tdata.forEach(data => dataGroup?.data.push(data))\n\n\t\t// Add a row for the graph - we only need a single item per resource, as the graph is the full duration.\n\t\t// TODO: Keep an eye on performance of this. If this chews resources too much, it should be\n\t\t// relatively simple to slice the graph into multiple smaller items which can be windowed.\n\t\tdataGroup.row.addRow(new SimpleRow({\n\t\t\tlabel,\n\t\t\theight: (dataGroup.row.height ?? DEFAULT_ROW_HEIGHT),\n\t\t\titems: data.map(data => {\n\t\t\t\treturn new SimpleItem({\n\t\t\t\t\tcontent: <Graph resource={data} scaleX={this.scaleX}/>,\n\t\t\t\t\tstart: 0,\n\t\t\t\t\tend: this.parser.pull.duration,\n\t\t\t\t})\n\t\t\t}),\n\t\t}))\n\t}\n\n\t/**\n\t * Retrieves the resource information for display when moused over the timeline\n\t * @param fightPercent The timestamp of the fight to show information at, as a percentage of the fight duration\n\t * @param dataHandle The handle of the group to display information for\n\t * @returns The array of ResourceInfo objects to display\n\t */\n\tprivate getDataByHandle = (fightPercent: number, dataHandle: string): ResourceInfo[] => {\n\t\tconst dataGroup = this.dataGroups.get(dataHandle)\n\t\tif (!dataGroup) { return [] }\n\n\t\tconst {duration, timestamp: pullTimestamp} = this.parser.pull\n\t\tconst timestamp = pullTimestamp + (duration * fightPercent)\n\n\t\tconst info = dataGroup.data.map(datum => {\n\t\t\tconst lastData = {..._.findLast(datum.data, datum => datum.time <= timestamp)}\n\t\t\tif (datum.linear && lastData != null) {\n\t\t\t\tconst lastTimestamp = lastData.time ?? pullTimestamp\n\t\t\t\tconst {current: nextCurrent, time: nextTimestamp} = _.find(datum.data, datum => datum.time > timestamp) || {current: 0, time: pullTimestamp + duration}\n\t\t\t\tconst delta = nextCurrent - (lastData.current ?? 0)\n\t\t\t\tconst timePct = (timestamp - lastTimestamp) / (nextTimestamp - lastTimestamp)\n\t\t\t\tlastData.current = (lastData.current ?? 0) + delta * timePct\n\t\t\t}\n\t\t\treturn ({\n\t\t\t\tlabel: datum.label,\n\t\t\t\tcolour: datum.colour,\n\t\t\t\t...lastData,\n\t\t\t})\n\t\t})\n\n\t\treturn info\n\t}\n}\n","import {JOBS} from 'data/JOBS'\nimport {Attribute} from 'event'\nimport {Actor} from 'report'\nimport {getSpeedStatAdjustedDuration} from 'utilities/speedStatMapper'\nimport {Analyser} from '../Analyser'\nimport {dependency} from '../Injectable'\nimport {Actors} from './Actors'\n\nexport type SpeedAttribute = Attribute.SKILL_SPEED | Attribute.SPELL_SPEED\n\ninterface ActorAttributeSpecifier  {\n\tattribute?: SpeedAttribute,\n\tactor?: Actor['id']\n}\n\nexport class SpeedAdjustments extends Analyser {\n\tstatic override handle = 'speedAdjustments'\n\n\t@dependency private actors!: Actors\n\n\t/**\n\t * Get the specified duration adjusted by the current value of the provided\n\t * actor's attribute. If not provided, the actor will default to the currently\n\t * parsed actor, and the attribute to that actor's primary speed attribute.\n\t * The value returned from this function _may_ be an estimate - check\n\t * {@link SpeedAdjustments.isAdjustmentEstimated} to see if it is.\n\t */\n\tgetAdjustedDuration({\n\t\tduration,\n\t\tattribute: maybeAttribute,\n\t\tactor: actorId = this.parser.actor.id,\n\t}: {\n\t\tduration: number,\n\t\tattribute?: SpeedAttribute,\n\t\tactor?: Actor['id']\n\t}) {\n\t\t// TODO: Pull the full algorithm in here, and track actions that adjust speeds\n\t\t//       to plug into it.\n\t\tconst actor = this.actors.get(actorId)\n\t\tconst attribute = actor.attributes[maybeAttribute ?? JOBS[actor.job].speedStat]\n\t\treturn getSpeedStatAdjustedDuration(attribute.value, duration)\n\t}\n\n\t/**\n\t * Returns whether the speed adjustments performed for the specified actor\n\t * attribute, defaulting to the currently parsed actor's primary speed attribute,\n\t * are estimates.\n\t */\n\tisAdjustmentEstimated(opts?: ActorAttributeSpecifier) {\n\t\treturn this.getActorAttribute(opts).estimated\n\t}\n\n\tprivate getActorAttribute({\n\t\tattribute: maybeAttribute,\n\t\tactor: actorId = this.parser.actor.id,\n\t}: ActorAttributeSpecifier = {}) {\n\t\tconst actor = this.actors.get(actorId)\n\t\treturn actor.attributes[maybeAttribute ?? JOBS[actor.job].speedStat]\n\t}\n}\n","import {ReactNode} from 'react'\nimport {matchClosestLower} from 'utilities'\n\nexport const SEVERITY = {\n\t// NOTE: Don't use MORBID, It's for deaths. I _will_ block the PRs on this.\n\tMORBID: 0,\n\tMAJOR: 1,\n\tMEDIUM: 2,\n\tMINOR: 3,\n\t// The matchClosest fall back to undefined, so let's use that for ignore too\n\tIGNORE: undefined,\n}\ntype Severity = typeof SEVERITY[keyof typeof SEVERITY]\n\nexport interface SuggestionOptions {\n\ticon: string\n\tcontent: ReactNode\n\twhy: ReactNode\n\tseverity: number\n}\n\nexport default class Suggestion {\n\tpublic icon: string // TODO: default image\n\tpublic content: ReactNode\n\tpublic why: ReactNode\n\tprivate severityValue: Severity\n\n\tconstructor(options: SuggestionOptions) {\n\t\tthis.icon = options.icon\n\t\tthis.content = options.content\n\t\tthis.why = options.why\n\t\tthis.severityValue = options.severity\n\t}\n\n\tget severity(): Severity {\n\t\treturn this.severityValue\n\t}\n\n\tset severity(value) {\n\t\tthis.severityValue = value ?? SEVERITY.MEDIUM\n\t}\n}\n\nexport interface SeverityTiers {\n\t[key: number]: Severity\n}\n\nexport interface TieredSuggestionOptions {\n\ticon: string\n\tcontent: ReactNode\n\twhy: ReactNode\n\ttiers: SeverityTiers\n\tvalue: number\n\tmatcher?: (tiers: SeverityTiers, value: number) => Severity\n}\n\nexport class TieredSuggestion extends Suggestion {\n\tpublic tiers: SeverityTiers\n\tpublic value: number\n\tpublic matcher: (tiers: SeverityTiers, value: number) => Severity\n\n\tconstructor(options: TieredSuggestionOptions) {\n\t\tsuper({...options, severity: SEVERITY.MINOR})\n\n\t\tthis.tiers = options.tiers\n\t\tthis.value = options.value\n\t\tthis.matcher = options.matcher ?? matchClosestLower\n\t}\n\n\toverride get severity() {\n\t\treturn this.matcher(this.tiers, this.value)\n\t}\n\n\t// noop setter so it doesn't die from the base class\n\toverride set severity(value) { /* noop */ }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"gutter\":\"20px\",\"checkbox\":\"Suggestions-module_checkbox__2r5WZ\",\"items\":\"Suggestions-module_items__1HGs-\",\"item\":\"Suggestions-module_item__3XrzH\",\"extra\":\"Suggestions-module_extra__3kAoW\"};","import {Trans} from '@lingui/react'\nimport {observer} from 'mobx-react'\nimport {SEVERITY} from 'parser/core/modules/Suggestions/Suggestion'\nimport * as PropTypes from 'prop-types'\nimport React from 'react'\nimport {Checkbox, Label} from 'semantic-ui-react'\n// Direct path import 'cus it'll be a dep loop otherwise\nimport {StoreContext} from 'store'\nimport {SettingsStore} from 'store/settings'\nimport styles from './Suggestions.module.css'\n\nconst SEVERITY_LABEL_PROPS = {\n\t[SEVERITY.MORBID]: {content: <Trans id=\"core.suggestions.severity.morbid\">Morbid</Trans>, color: 'black', icon: 'times'},\n\t[SEVERITY.MAJOR]: {content: <Trans id=\"core.suggestions.severity.major\">Major</Trans>, color: 'red', icon: 'arrow up'},\n\t[SEVERITY.MEDIUM]: {content: <Trans id=\"core.suggestions.severity.medium\">Medium</Trans>, color: 'orange'},\n\t[SEVERITY.MINOR]: {content: <Trans id=\"core.suggestions.severity.minor\">Minor</Trans>, color: 'blue', icon: 'arrow down'},\n}\n\n@observer\nclass Suggestions extends React.Component {\n\tstatic propTypes = {\n\t\tsettingsStore: PropTypes.instanceOf(SettingsStore),\n\t\tsuggestions: PropTypes.arrayOf(PropTypes.shape({\n\t\t\ticon: PropTypes.string.isRequired,\n\t\t\tcontent: PropTypes.node.isRequired,\n\t\t\twhy: PropTypes.node.isRequired,\n\t\t\tseverity: PropTypes.number.isRequired,\n\t\t})).isRequired,\n\t}\n\n\tstatic contextType = StoreContext\n\n\tonToggleShowMinor = (_, data) => {\n\t\tconst {settingsStore} = this.context\n\t\tsettingsStore.setShowMinorSuggestions(data.checked)\n\t}\n\n\trender() {\n\t\tconst showMinor = this.context.settingsStore.showMinorSuggestions\n\n\t\tconst suggestions = this.props.suggestions.filter(\n\t\t\tsuggestion => showMinor || suggestion.severity !== SEVERITY.MINOR,\n\t\t)\n\n\t\tconst hasMinor = this.props.suggestions.some(suggestion => suggestion.severity === SEVERITY.MINOR)\n\n\t\treturn <>\n\t\t\t{hasMinor && <Checkbox\n\t\t\t\ttoggle\n\t\t\t\tlabel={<label><Trans id=\"core.suggestion.show-minor\">Show minor</Trans></label>}\n\t\t\t\tdefaultChecked={showMinor}\n\t\t\t\tonChange={this.onToggleShowMinor}\n\t\t\t\tclassName={styles.checkbox}\n\t\t\t/>}\n\t\t\t<div className={styles.items}>\n\t\t\t\t{suggestions.map((suggestion, index) => <div key={index} className={styles.item}>\n\t\t\t\t\t<img src={suggestion.icon} alt=\"\"/>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{suggestion.content}\n\t\t\t\t\t\t<div className={styles.extra}>\n\t\t\t\t\t\t\t<Label horizontal {...SEVERITY_LABEL_PROPS[suggestion.severity]} />\n\t\t\t\t\t\t\t{suggestion.why}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>)}\n\t\t\t\t{suggestions.length === 0 && <div className={styles.item}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<strong><Trans id=\"core.suggestion.nothing\">There's nothing here!</Trans></strong><br/>\n\t\t\t\t\t\t{hasMinor && <Trans id=\"core.suggestion.nothing-but-minor\">You can check over the minor suggestions by flicking the \"Show minor\" switch in the top right.</Trans>}\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\t\t\t</div>\n\t\t</>\n\t}\n}\n\nexport default Suggestions\n","import {t} from '@lingui/macro'\nimport {Analyser, DisplayMode} from 'parser/core/Analyser'\nimport React from 'react'\nimport DISPLAY_ORDER from '../DISPLAY_ORDER'\nimport SuggestionsComponent from './Component'\nimport Suggestion, {SEVERITY} from './Suggestion'\n\nexport default class Suggestions extends Analyser {\n\tstatic handle = 'suggestions'\n\tstatic displayOrder = DISPLAY_ORDER.SUGGESTIONS\n\tstatic displayMode = DisplayMode.FULL\n\tstatic title = t('core.suggestions.title')`Suggestions`\n\n\t_suggestions = []\n\n\tadd(suggestion) {\n\t\tif (!(suggestion instanceof Suggestion)) {\n\t\t\tconsole.error('TODO: Proper error message for passing a non-suggestion to the suggestion add handler')\n\t\t\treturn\n\t\t}\n\n\t\tthis._suggestions.push(suggestion)\n\t}\n\n\toutput() {\n\t\t// Only show the suggestions module if it's had things sent to it\n\t\tif (this._suggestions.length === 0) {\n\t\t\treturn false\n\t\t}\n\n\t\t// Sort suggestions with most important at the top, and remove ignored\n\t\tconst suggestions = this._suggestions\n\t\t\t.filter(suggestion => suggestion.severity !== SEVERITY.IGNORE)\n\t\t\t.sort((a, b) => a.severity - b.severity)\n\n\t\t// Rendering is in a specialised component so it's got some state to work with\n\t\treturn <SuggestionsComponent suggestions={suggestions}/>\n\t}\n}\n","import {ScaleTime, scaleUtc} from 'd3-scale'\nimport _ from 'lodash'\nimport React, {createContext, useCallback, useContext, useEffect, useMemo, useRef, useState} from 'react'\nimport Measure, {BoundingRect, ContentRect, MeasureProps} from 'react-measure'\nimport {useGesture} from 'react-use-gesture'\nimport {UseGestureEvent} from 'react-use-gesture/dist/types'\n\n// d3-based types\nexport type Scale = ScaleTime<number, number>\nexport type Scalable = Parameters<Scale>[0]\ntype Vector2 = [number, number]\n\n// react-measure types\ntype MeasureChildren = MeasureProps['children']\n\n// TODO: Should? be able to remove this if I make module output a proper component\nexport type SetViewFn = (view: Vector2) => void\nexport type ExposeSetViewFn = (setter: SetViewFn) => void\n\n// Config constants\nconst DEFAULT_PAN_FACTOR = 0.05\nconst DEFAULT_ZOOM_FACTOR = 0.2\n\nconst EXPAND_DOMAIN_BY = 0.05 // 5%\n\n// These constants are copied from vis, which in turn copies them from a vast\n// array of similar mouse handling code in the wild. I trust it... kinda.\nconst LINE_HEIGHT = 40\nconst PAGE_HEIGHT = 800\nconst PIXEL_DIVISOR = 120\n\n// Context for the d3 scale data, consumed primarily by items\ninterface ScaleContextValues {\n\t/** Primary scale used to calculate positions within the range */\n\tprimary: Scale\n\t/** Extended scale with additional domain to the LHS to counter minor falloff issues where pertinent */\n\textended: Scale\n}\nconst fallbackScale = scaleUtc()\nconst ScaleContext = createContext<ScaleContextValues>({\n\tprimary: fallbackScale,\n\textended: fallbackScale,\n})\nexport const useScales = () => useContext(ScaleContext)\n\n// Utility functions\n\n// Different browsers and devices report deltas in different manners. Try to normalise the values.\nconst multipliers = new Map([\n\t[WheelEvent.DOM_DELTA_LINE, LINE_HEIGHT],\n\t[WheelEvent.DOM_DELTA_PAGE, PAGE_HEIGHT],\n])\n\n// I shouldn't need this but I do so here we are\nconst isWheelEvent = (event: UseGestureEvent): event is React.WheelEvent =>\n\tevent.type === 'wheel'\n\nfunction normaliseWheelDelta(deltaMode: number, delta: number) {\n\tconst multiplier = multipliers.get(deltaMode) ?? 1\n\treturn (delta * multiplier) / PIXEL_DIVISOR\n}\n\n/**\n * We can't prevent default on touch events, as their default is _required_ to\n * execute before non-touch events such as click fire. Handle it.\n */\nfunction preventMouseEventDefault(event?: UseGestureEvent) {\n\tif (event == null || event.type.includes('touch')) { return }\n\tevent.preventDefault()\n}\n\nexport interface ScaleHandlerProps {\n\t/** Minimum bound of time region to display. */\n\tmin: number\n\t/** Maximum bound of time region to display. */\n\tmax: number\n\t/** Start point of initial time region displayed. Defaults to min. */\n\tstart?: number\n\t/** End point of initial time region displayed. Defaults to max. */\n\tend?: number\n\t/** Minimum time duration to display. */\n\tzoomMin?: number\n\t/** Factor used to determine distance moved when panning with indirect inputs. Defaults to 0.05 (5%). */\n\tpanFactor?: number\n\t/** Factor used to determine distance zoomed with indirect inputs. Defaults to 0.2 (20%). */\n\tzoomFactor?: number\n\n\t/**\n\t * If provided, will be called with a function that can be used to adjust\n\t * the displayed view of the domain.\n\t */\n\texposeSetView?: ExposeSetViewFn\n}\n\nexport interface InternalScaleHandlerProps extends ScaleHandlerProps {\n\tchildren: MeasureChildren\n}\n\nexport function ScaleHandler({\n\tchildren,\n\tmin,\n\tmax,\n\tstart,\n\tend,\n\tzoomMin = 1,\n\tpanFactor = DEFAULT_PAN_FACTOR,\n\tzoomFactor = DEFAULT_ZOOM_FACTOR,\n\texposeSetView,\n}: InternalScaleHandlerProps) {\n\t// States representing the scale's range & domain\n\t// TODO: Should I just put the entire scale in the state and be done with it?\n\tconst [domain, setDomain] = useState<Vector2>([start ?? min, end ?? max])\n\tconst [range, setRange] = useState<Vector2>([0, 100])\n\tconst domainDistance = domain[1] - domain[0]\n\n\t// If able, expose our user domain setter so external code can adjust it\n\tconst setView = useCallback(\n\t\t(view: Vector2) => {\n\t\t\tlet [left, right] = view\n\t\t\t// Make sure the domain isn't flipped\n\t\t\tright = Math.max(left, right)\n\n\t\t\t// Make sure the domain isn't zoomed beyond zoomMin\n\t\t\tconst additionalZoom = zoomMin - (right - left)\n\t\t\tif (additionalZoom > 0) {\n\t\t\t\tleft = Math.max(left - additionalZoom / 2, min)\n\t\t\t\tright = Math.min(left + zoomMin, max)\n\t\t\t}\n\n\t\t\tsetDomain([left, right])\n\t\t},\n\t\t[min, max, zoomMin],\n\t)\n\tuseEffect(\n\t\t() => exposeSetView?.(setView),\n\t\t[setView, exposeSetView],\n\t)\n\n\t// Delta scale maintains the primary scale's domain's distance, but zeroed such that delta values can be calculated\n\tconst deltaScale = useMemo(\n\t\t() => scaleUtc().range(range).domain([0, domainDistance]),\n\t\t[range, domainDistance],\n\t)\n\n\t// Ref that will be populated with the scroll parent element. We need access to this for some\n\t// event binds, and location calculations\n\tconst scrollParentRef = useRef<HTMLDivElement>(null)\n\n\t// Track the current scroll parent bounds, we use this to calculate the mouse position and the range of the scale\n\tconst contentBounds = useRef<BoundingRect>()\n\tconst onContentResize = useCallback(({bounds}: ContentRect) => {\n\t\tcontentBounds.current = bounds\n\t\tif (bounds?.width != null) { setRange([0, bounds.width]) }\n\t}, [])\n\n\t// Helper functions for modifying the user domain\n\tconst pan = useCallback(\n\t\t({delta}: {delta: number}) => {\n\t\t\tsetDomain(([uMin, uMax]): Vector2 => {\n\t\t\t\tconst dist = uMax - uMin\n\t\t\t\treturn [\n\t\t\t\t\t_.clamp(uMin + delta, min, max - dist),\n\t\t\t\t\t_.clamp(uMax + delta, min + dist, max),\n\t\t\t\t]\n\t\t\t})\n\t\t},\n\t\t[min, max],\n\t)\n\n\tconst zoom = useCallback(\n\t\t({delta, centre}: {delta: number, centre: number}) => {\n\t\t\tsetDomain(([uMin, uMax]): Vector2 => {\n\t\t\t\tconst newMin = _.clamp(uMin - delta * centre, min, uMax - zoomMin)\n\t\t\t\tconst newMax = _.clamp(uMax + delta * (1 - centre), newMin + zoomMin, max)\n\t\t\t\treturn [newMin, newMax]\n\t\t\t})\n\t\t},\n\t\t[min, max, zoomMin],\n\t)\n\n\t// Need to set generic explicitly so TS types the return value correctly\n\tconst gestureConfig = {\n\t\tdomTarget: scrollParentRef,\n\t\teventOptions: {passive: false},\n\t\tdrag: {axis: 'x'},\n\t} as const\n\tconst bindGestures = useGesture<typeof gestureConfig>({\n\t\tonWheel: ({delta: [dX, dY], event}) => {\n\t\t\tpreventMouseEventDefault(event)\n\n\t\t\t// Get the larger of the two deltas. If it's 0, we don't want to do anything.\n\t\t\tconst maxDelta = Math.abs(dX) > Math.abs(dY) ? dX : dY\n\t\t\tif (maxDelta === 0) { return }\n\n\t\t\t// If the wheel event is a wheel event (really, use-gesture?), try to normalise the delta\n\t\t\tconst finalDelta = event != null && isWheelEvent(event)\n\t\t\t\t? normaliseWheelDelta(event.deltaMode, maxDelta)\n\t\t\t\t: maxDelta\n\n\t\t\t// Normalise the movement to a %age of the domain & pan\n\t\t\tpan({delta: finalDelta * domainDistance * panFactor})\n\t\t},\n\n\t\tonPinch: ({delta: [dX, dY], touches, origin, event}) => {\n\t\t\t// Can't not cancel touch events on pinch, as we'll get full page zoom. Can't cancel, as it\n\t\t\t// kills clicks. Delta is 0,0 on first tick (including click!?), which isn't really useful\n\t\t\t// as a pinch - bail early in that instance to avoid PD on clicks.\n\t\t\tif ((dX === 0 && dY === 0) || origin == null) { return }\n\t\t\tevent?.preventDefault()\n\n\t\t\t// Calc the zoom centre as a %age of the range\n\t\t\tconst [oX] = origin\n\t\t\tconst {left = 0, width = 1} = contentBounds.current ?? {} as Partial<BoundingRect>\n\t\t\tconst centre = _.clamp((oX - left) / width, 0, 1)\n\n\t\t\t// If there's touches, calculate zoom based on the X-axis delta\n\t\t\tif (touches > 0) {\n\t\t\t\tzoom({delta: -(deltaScale.invert(dX).getTime() * 2), centre})\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// No touches, so probably mouse events. Delta is pretty arbitrary, so calc our own factor.\n\n\t\t\t// Direction sticks around a bit too long. Calc our own.\n\t\t\tconst scale = (dY / Math.abs(dY)) * zoomFactor\n\n\t\t\t// We want zooming in to step at the same rate as zooming out, adjust the scale to ensure that.\n\t\t\tconst adjustedScale = scale > 0 ? scale : scale / (Math.abs(scale) + 1)\n\t\t\tzoom({delta: domainDistance * adjustedScale, centre})\n\t\t},\n\n\t\tonDrag: ({delta: [dX], event}) => {\n\t\t\tpreventMouseEventDefault(event)\n\t\t\tpan({delta: -deltaScale.invert(dX).getTime()})\n\t\t},\n\t}, gestureConfig)\n\tuseEffect(bindGestures, [bindGestures])\n\n\t// TODO: Keep an eye on the perf here. I don't like regenning the scale every time, but it's\n\t//       the easiest way to cascade updates over the context. It... should be fine?\n\tconst scales = useMemo(\n\t\t() => {\n\t\t\tconst extendBy = domainDistance * EXPAND_DOMAIN_BY\n\t\t\tconst primary = scaleUtc().range(range).domain(domain)\n\t\t\tconst extended = primary.copy().domain([domain[0] - extendBy, domain[1]])\n\t\t\treturn {primary, extended}\n\t\t},\n\t\t[domainDistance, range, domain],\n\t)\n\n\treturn (\n\t\t<div ref={scrollParentRef}>\n\t\t\t<ScaleContext.Provider value={scales}>\n\t\t\t\t<Measure bounds onResize={onContentResize}>{children}</Measure>\n\t\t\t</ScaleContext.Provider>\n\t\t</div>\n\t)\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"borderColour\":\"#bfbfbf\",\"borderWidth\":\"1px\",\"branchLabelWidth\":\"30px\",\"defaultRowHeight\":\"30px\",\"gridLineColour\":\"#e5e5e5\",\"majorGridLineColour\":\"#bfbfbf\",\"timeline\":\"Timeline-module_timeline__39UjP\",\"label\":\"Timeline-module_label__LEpvi\",\"track\":\"Timeline-module_track__pDSTM\",\"collapsed\":\"Timeline-module_collapsed__cdqyL\",\"minimised\":\"Timeline-module_minimised__3_5Iv\",\"content\":\"Timeline-module_content__3hZxy\",\"item\":\"Timeline-module_item__3CJXb\",\"gridLine\":\"Timeline-module_gridLine__1Jkpc\",\"major\":\"Timeline-module_major__34pof\",\"axisTick\":\"Timeline-module_axisTick__NL0Uz\",\"first\":\"Timeline-module_first__2yJov\"};","import React, {memo, ReactNode} from 'react'\nimport {Item as ItemConfig} from '../config'\nimport {useScales} from './ScaleHandler'\nimport styles from './Timeline.module.css'\n\nexport interface ItemsProps {\n\titems: readonly ItemConfig[]\n}\n\nexport const Items = memo(function Items({\n\titems,\n}: ItemsProps) {\n\tconst scales = useScales()\n\n\t// Calculate the positions of the items, and cull any that fall entirely outside\n\t// the current visible range. This isn't memo'd, as realistically almost every\n\t// render pass will need to re-calculate this.\n\tconst [min, max] = scales.extended.domain().map(t => t.getTime())\n\tconst filteredItems = []\n\tfor (const [index, item] of items.entries()) {\n\t\tif (\n\t\t\titem.start > max\n\t\t\t|| (item.end ?? item.start) < min\n\t\t) {\n\t\t\tcontinue\n\t\t}\n\t\tfilteredItems.push({\n\t\t\tindex,\n\t\t\tleft: scales.primary(item.start) ?? 0,\n\t\t\tright: item.end && scales.primary(item.end),\n\t\t\tdepth: item.depth,\n\t\t})\n\t}\n\n\treturn <>\n\t\t{filteredItems.map((itemDetails) => {\n\t\t\tconst {Content} = items[itemDetails.index]\n\t\t\treturn (\n\t\t\t\t<Item\n\t\t\t\t\tkey={itemDetails.index}\n\t\t\t\t\tleft={itemDetails.left}\n\t\t\t\t\tright={itemDetails.right}\n\t\t\t\t\tdepth={itemDetails.depth}\n\t\t\t\t>\n\t\t\t\t\t<Content/>\n\t\t\t\t</Item>\n\t\t\t)\n\t\t})}\n\t</>\n})\n\nexport interface ItemProps {\n\tchildren?: ReactNode,\n\tleft: number\n\tright?: number\n\tdepth?: number\n}\n\nexport const Item = memo(function Item({\n\tchildren,\n\tleft,\n\tright,\n\tdepth,\n}: ItemProps) {\n\treturn (\n\t\t<div\n\t\t\tclassName={styles.item}\n\t\t\tstyle={{\n\t\t\t\ttransform: `translateX(${left}px)`,\n\t\t\t\twidth: right != null ? right - left : undefined,\n\t\t\t\tzIndex: depth,\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</div>\n\t)\n})\n","import classNames from 'classnames'\nimport {timeMinute} from 'd3-time'\nimport {utcFormat} from 'd3-time-format'\nimport React, {Fragment, memo} from 'react'\nimport {isDefined} from 'utilities'\nimport {Item} from './Item'\nimport {useScales} from './ScaleHandler'\nimport styles from './Timeline.module.css'\n\nconst AXIS_ROW_HEIGHT = 50\n\nexport interface AxisProps {\n\theight: number\n}\n\nexport const Axis = memo(function Axis({\n\theight,\n}: AxisProps) {\n\tconst scales = useScales()\n\n\t// Extend the domain slightly so ticks don't disappear the moment they hit the edge\n\tconst ticks = scales.extended.ticks()\n\n\t// Calculate values used for the \"sticky\" first major tick\n\tconst viewMin = scales.primary.domain()[0]\n\tconst stickyTick = timeMinute(viewMin)\n\tconst stickyTickEnd = timeMinute.offset(stickyTick, 1)\n\n\t// Pre-calculate scaled tick locations\n\tconst lefts = ticks\n\t\t.map(tick => scales.primary(tick))\n\t\t.filter(isDefined)\n\n\treturn <>\n\t\t{/* Grid lines */}\n\t\t<div\n\t\t\tclassName={styles.track}\n\t\t\tstyle={{\n\t\t\t\tgridRowStart: 1,\n\t\t\t\tgridRowEnd: `span ${height + 1}`,\n\t\t\t}}\n\t\t>\n\t\t\t{ticks.map((tick, index) => (\n\t\t\t\t<Item key={tick.getTime()} left={lefts[index]}>\n\t\t\t\t\t<div className={classNames(\n\t\t\t\t\t\tstyles.gridLine,\n\t\t\t\t\t\tisMajorTick(tick) && styles.major,\n\t\t\t\t\t)}/>\n\t\t\t\t</Item>\n\t\t\t))}\n\t\t</div>\n\n\t\t{/* Numeric ticks */}\n\t\t<div\n\t\t\tclassName={styles.track}\n\t\t\tstyle={{\n\t\t\t\tgridRowStart: height + 1,\n\t\t\t\tgridRowEnd: 'span 1',\n\t\t\t\theight: AXIS_ROW_HEIGHT,\n\t\t\t}}\n\t\t>\n\t\t\t{ticks.map((tick, index) => <Fragment key={tick.getTime()}>\n\t\t\t\t<Item left={lefts[index]}>\n\t\t\t\t\t{/* Second ticks */}\n\t\t\t\t\t<div className={styles.axisTick}>\n\t\t\t\t\t\t{formatSeconds(tick)}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* Minute ticks. Skip ticks before stickyTickEnd to prevent dupes. */}\n\t\t\t\t\t{isMajorTick(tick) && (tick >= stickyTickEnd) && (\n\t\t\t\t\t\t<div className={classNames(styles.axisTick, styles.major)}>\n\t\t\t\t\t\t\t{formatMinutes(tick)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</Item>\n\t\t\t</Fragment>)}\n\n\t\t\t{/* \"Sticky\" minute tick */}\n\t\t\t<Item left={scales.primary(viewMin) ?? 0} right={scales.primary(stickyTickEnd)}>\n\t\t\t\t<div className={classNames(styles.axisTick, styles.major, styles.first)}>\n\t\t\t\t\t{formatMinutes(stickyTick)}\n\t\t\t\t</div>\n\t\t\t</Item>\n\t\t</div>\n\t</>\n})\n\n// Major ticks are minute lines\nconst isMajorTick = (date: Date) =>\n\tNumber(timeMinute(date)) === Number(date)\n\nconst formatSeconds = utcFormat('%-S')\nconst formatMinutes = utcFormat('%-Mm')\n","import {Row as RowConfig} from '../config'\n\nfunction cached<A extends object, R>(fn: (arg: A) => R) {\n\tconst cache = new WeakMap<A, R>()\n\treturn (arg: A) => {\n\t\tlet value = cache.get(arg)\n\t\tif (value == null) {\n\t\t\tvalue = fn(arg)\n\t\t\tcache.set(arg, value)\n\t\t}\n\t\treturn value\n\t}\n}\n\nexport const getMaxChildren = cached((\n\t(row: Pick<RowConfig, 'rows' | 'items'>): number =>\n\t\tMath.max(\n\t\t\tgetItemCount(row) && 1,\n\t\t\trow.rows.reduce((acc, cur) => acc + getMaxChildren(cur), 0),\n\t\t)\n))\n\n// TODO: Tweak this so I can cache it.\nexport const getMaxDepth = (rows: Array<Pick<RowConfig, 'rows'>>): number =>\n\trows.reduce((acc, cur) => Math.max(acc, getMaxDepth(cur.rows) + 1), 0)\n\nexport const getItemCount = cached((\n\t(row: Pick<RowConfig, 'rows' | 'items'>): number =>\n\t\trow.items.length + row.rows.reduce((acc, cur) => acc + getItemCount(cur), 0)\n))\n","import classNames from 'classnames'\nimport React, {CSSProperties, memo, ReactNode, useCallback, useMemo, useState} from 'react'\nimport Measure from 'react-measure'\nimport {Row as RowConfig} from '../config'\nimport {Items} from './Item'\nimport styles from './Timeline.module.css'\nimport {getItemCount, getMaxChildren} from './utilities'\n\n// We're using an explicit grid for the primary timeline area, and a negative implicit grid\n// for labels. CSS grids count negatives _starting_ at -1 at the end of the _explicit_ grid.\n// This is the offset we need to \"ignore\" the explicit grid when setting implicit locations.\nconst LABEL_GRID_OFFSET = -2\n\ninterface SharedRowProps {\n\tdepth: number,\n\tmaxDepth: number,\n\ttop: number,\n\theight: number,\n\tparentCollapsed: boolean,\n}\n\nexport type RowsProps = SharedRowProps & {\n\trows: readonly RowConfig[],\n}\n\nexport const Rows = memo(function Rows({\n\trows,\n\ttop,\n\theight,\n\tparentCollapsed,\n\t...rowProps\n}: RowsProps) {\n\tconst orderedRows = useMemo(\n\t\t() => rows\n\t\t\t.filter(row => getItemCount(row) > 0)\n\t\t\t.sort((a, b) => (a.order ?? 0) - (b.order ?? 0)),\n\t\t[rows],\n\t)\n\n\t// Calculate sizes\n\tlet currentTop = top\n\tconst sizes = orderedRows.map((row) => {\n\t\tif (parentCollapsed) {\n\t\t\treturn {\n\t\t\t\ttop: currentTop,\n\t\t\t\theight,\n\t\t\t}\n\t\t}\n\n\t\tconst maxChildren = getMaxChildren(row)\n\t\tconst thisTop = currentTop\n\t\tcurrentTop += maxChildren\n\t\treturn {\n\t\t\ttop: thisTop,\n\t\t\theight: maxChildren,\n\t\t}\n\t})\n\n\treturn <>\n\t\t{orderedRows.map((row, index) => (\n\t\t\t<Row\n\t\t\t\tkey={index}\n\t\t\t\trow={row}\n\t\t\t\ttop={sizes[index].top}\n\t\t\t\theight={sizes[index].height}\n\t\t\t\tparentCollapsed={parentCollapsed}\n\t\t\t\t{...rowProps}\n\t\t\t/>\n\t\t))}\n\t</>\n})\n\ntype RowProps = SharedRowProps & {\n\trow: RowConfig,\n}\n\nconst Row = memo(function Row({\n\trow,\n\tdepth,\n\tmaxDepth,\n\ttop,\n\theight,\n\tparentCollapsed,\n}: RowProps) {\n\tconst [selfCollapsed, setSelfCollapsed] = useState(row.collapse ?? false)\n\tconst toggleCollapsed = useCallback(\n\t\t() => setSelfCollapsed(value => !value),\n\t\t[],\n\t)\n\n\t// If the parent is collapsed and this row hides when in such a parent, we can just noop\n\tif (row.hideCollapsed && parentCollapsed) {\n\t\treturn null\n\t}\n\n\tconst hasChildren = row.rows.length > 0\n\n\tconst collapsed = hasChildren && (selfCollapsed || parentCollapsed)\n\n\tconst rowStyles = {\n\t\tgridRowStart: top,\n\t\tgridRowEnd: `span ${height}`,\n\t\tminHeight: parentCollapsed ? undefined : row.height,\n\t}\n\n\treturn <>\n\t\t{/* Label */}\n\t\t{!parentCollapsed && row.label != null && (\n\t\t\t<Label\n\t\t\t\tminimised={hasChildren && !selfCollapsed}\n\t\t\t\tcollapsed={collapsed}\n\t\t\t\tonClick={hasChildren && !(collapsed && row.forceCollapsed) ? toggleCollapsed : undefined}\n\t\t\t\tgridStyle={{ // TODO: Memo?\n\t\t\t\t\tgridColumnStart: (LABEL_GRID_OFFSET-maxDepth) + depth,\n\t\t\t\t\t...rowStyles,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{row.label}\n\t\t\t</Label>\n\t\t)}\n\n\t\t{/* Item track */}\n\t\t{row.items.length > 0 && (\n\t\t\t<div className={styles.track} style={rowStyles}>\n\t\t\t\t<Items items={row.items}/>\n\t\t\t</div>\n\t\t)}\n\n\t\t{hasChildren && (\n\t\t\t<Rows\n\t\t\t\trows={row.rows}\n\t\t\t\tdepth={depth + 1}\n\t\t\t\tmaxDepth={maxDepth}\n\t\t\t\ttop={top}\n\t\t\t\theight={height}\n\t\t\t\tparentCollapsed={collapsed}\n\t\t\t/>\n\t\t)}\n\t</>\n})\n\ninterface LabelProps {\n\tminimised: boolean\n\tcollapsed: boolean\n\tonClick?: () => void\n\tgridStyle?: CSSProperties\n\tchildren?: ReactNode\n}\n\nconst Label = memo(function Label({\n\tminimised,\n\tcollapsed,\n\tonClick,\n\tgridStyle,\n\tchildren,\n}: LabelProps) {\n\treturn (\n\t\t<Measure bounds>\n\t\t\t{({measureRef, contentRect}) => (\n\t\t\t\t<div\n\t\t\t\t\tref={measureRef}\n\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\tstyles.label,\n\t\t\t\t\t\tminimised && styles.minimised,\n\t\t\t\t\t\tcollapsed && styles.collapsed,\n\t\t\t\t\t)}\n\t\t\t\t\tstyle={gridStyle}\n\t\t\t\t\tonClick={onClick}\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={styles.content}\n\t\t\t\t\t\tstyle={{maxWidth: minimised ? contentRect.bounds?.height : undefined}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</Measure>\n\t)\n})\n","import React from 'react'\nimport {Item as ItemConfig, Row as RowConfig} from '../config'\nimport {Axis} from './Axis'\nimport {Items} from './Item'\nimport {Rows} from './Row'\nimport {ScaleHandler, ScaleHandlerProps} from './ScaleHandler'\nimport styles from './Timeline.module.css'\nimport {getMaxChildren, getMaxDepth} from './utilities'\n\nexport type TimelineProps =\n\t& ScaleHandlerProps\n\t& {rows?: RowConfig[], items?: ItemConfig[]}\n\nexport function Timeline({\n\trows = [],\n\titems = [],\n\t...scaleHandlerProps\n}: TimelineProps) {\n\tconst maxDepth = getMaxDepth(rows)\n\tconst maxChildren = getMaxChildren({rows, items})\n\n\treturn (\n\t\t<ScaleHandler {...scaleHandlerProps}>\n\t\t\t{({measureRef}) => (\n\t\t\t\t<div className={styles.timeline}>\n\t\t\t\t\t<div ref={measureRef} style={{gridColumnStart: 2, gridColumnEnd: 'span 1'}}/>\n\n\t\t\t\t\t<Axis height={maxChildren}/>\n\n\t\t\t\t\t<Rows\n\t\t\t\t\t\trows={rows}\n\t\t\t\t\t\tdepth={0}\n\t\t\t\t\t\tmaxDepth={maxDepth}\n\t\t\t\t\t\ttop={1}\n\t\t\t\t\t\theight={maxChildren}\n\t\t\t\t\t\tparentCollapsed={false}\n\t\t\t\t\t/>\n\n\t\t\t\t\t{/* Root-level item track */}\n\t\t\t\t\t{items.length > 0 && (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={styles.track}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tgridRowStart: 1,\n\t\t\t\t\t\t\t\tgridRowEnd: `span ${maxChildren}`,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Items items={items}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</ScaleHandler>\n\t)\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"gutter\":\"20px\",\"helpText\":\"Timeline-module_helpText__1zj7F\"};","import {t} from '@lingui/macro'\nimport {Trans} from '@lingui/react'\nimport {Analyser, DisplayMode} from 'parser/core/Analyser'\nimport React from 'react'\nimport DISPLAY_ORDER from '../DISPLAY_ORDER'\nimport {\n\tSetViewFn,\n\tTimeline as TimelineComponent,\n} from './components'\nimport {\n\tItem as ItemConfig,\n\tRow as RowConfig,\n} from './config'\nimport styles from './Timeline.module.css'\n\n// We default to showing the first minute of the pull. Showing the entire fight at once\n// is overwhelming for an initial view.\nconst INITIAL_END = 60000 // One minute\n\nconst MINIMUM_ZOOM = 10000 // 10 seconds (~4 gcds)\n\nexport class Timeline extends Analyser {\n\tstatic override handle = 'timeline'\n\tstatic override displayOrder = DISPLAY_ORDER.TIMELINE\n\tstatic override displayMode = DisplayMode.FULL\n\tstatic override title = t('core.timeline.title')`Timeline`\n\n\tprivate setView?: SetViewFn\n\n\tprivate rows: RowConfig[] = []\n\tprivate items: ItemConfig[] = []\n\n\t/**\n\t * Add a row to the timeline.\n\t * @param row The row to add\n\t * @returns The added row\n\t */\n\taddRow<T extends RowConfig>(row: T): T {\n\t\tthis.rows.push(row)\n\t\treturn row\n\t}\n\n\t/**\n\t * Add a new global item to the timeline. The added item will not be scoped\n\t * to a row, and hence will span the height of the entire timeline.\n\t * @param item The item to add globally\n\t * @returns The added item\n\t */\n\taddItem<T extends ItemConfig>(item: T): T {\n\t\tthis.items.push(item)\n\t\treturn item\n\t}\n\n\t/**\n\t * Move & zoom the viewport to show the specified range\n\t * @param start Timestamp of the start of the range\n\t * @param end Timestamp of the end of the range\n\t * @param scrollTo If true, the page will be scrolled to reveal the timeline\n\t */\n\tshow = (start: number, end: number, scrollTo: boolean = true) => {\n\t\tthis.setView?.([start, end])\n\n\t\tif (scrollTo) {\n\t\t\tthis.parser.scrollTo(Timeline.handle)\n\t\t}\n\t}\n\n\tprivate exposeSetView = (handler: SetViewFn) => {\n\t\tthis.setView = handler\n\t}\n\n\toverride output() {\n\t\treturn <>\n\t\t\t<Trans id=\"core.timeline.help-text\" render=\"span\" className={styles.helpText}>\n\t\t\t\tScroll or click+drag to pan, ctrl+scroll or pinch to zoom.\n\t\t\t</Trans>\n\t\t\t<TimelineComponent\n\t\t\t\trows={this.rows}\n\t\t\t\titems={this.items}\n\n\t\t\t\tmin={0}\n\t\t\t\tmax={this.parser.currentDuration}\n\t\t\t\tend={Math.min(this.parser.currentDuration, INITIAL_END)}\n\t\t\t\tzoomMin={MINIMUM_ZOOM}\n\t\t\t\texposeSetView={this.exposeSetView}\n\t\t\t/>\n\t\t</>\n\t}\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"backgroundColour\":\"rgba(213, 221, 246, .4)\",\"abilityItem\":\"Item-module_abilityItem__6fNH1\",\"zeroWidthAbility\":\"Item-module_zeroWidthAbility__2O0g6\"};","import classNames from 'classnames'\nimport {Action} from 'data/ACTIONS'\nimport {Status} from 'data/STATUSES'\nimport React, {ComponentType, ReactNode} from 'react'\nimport styles from './Item.module.css'\n\nexport interface Item {\n\t/** Start time of the item. */\n\treadonly start: number\n\t/** End time of the item. If unspecified, item represents the point in time of `start`. */\n\treadonly end?: number\n\t/** Depth of the item. Higher values are closer to the user. */\n\treadonly depth?: number\n\t/** Component to render as the item. */\n\treadonly Content: ComponentType\n}\n\nexport interface BaseItemOptions {\n\tstart: number\n\tend?: number\n\tdepth?: number\n}\n\nexport abstract class BaseItem implements Item {\n\treadonly start: number\n\treadonly end?: number\n\treadonly depth?: number\n\n\tabstract Content: ComponentType\n\n\tconstructor(opts: BaseItemOptions) {\n\t\tthis.start = opts.start\n\t\tthis.end = opts.end\n\t\tthis.depth = opts.depth\n\t}\n}\n\n/**\n * Simple item that can be added to the timeline. You are expected to provide\n * your own content to visualise.\n */\nexport class SimpleItem extends BaseItem {\n\tprivate readonly content: ReactNode\n\n\tconstructor({content, ...opts}: {content?: ReactNode} & BaseItemOptions) {\n\t\tsuper(opts)\n\t\tthis.content = content\n\t}\n\n\tContent = () => <>{this.content}</>\n}\n\n// Heh. Hiding this 'cus I hate calling stuff an ability\n// Also maybe we wanna change UIs later iuno\nclass AbilityItem extends BaseItem {\n\tprivate readonly ability: Action | Status\n\n\tconstructor({ability, ...opts}: {ability: Action | Status} & BaseItemOptions) {\n\t\tsuper(opts)\n\t\tthis.ability = ability\n\t}\n\n\tContent = () => (\n\t\t<div className={classNames(\n\t\t\tstyles.abilityItem,\n\t\t\t// start === end is invisible, allow it to overflow\n\t\t\tthis.start === this.end && styles.zeroWidthAbility,\n\t\t)}>\n\t\t\t<img\n\t\t\t\tsrc={this.ability.icon}\n\t\t\t\talt={this.ability.name}\n\t\t\t\ttitle={this.ability.name}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\n/** Pre-fabricated item representing an action. */\nexport class ActionItem extends AbilityItem {\n\tconstructor({action, ...opts}: {action: Action} & BaseItemOptions) {\n\t\tsuper({...opts, ability: action})\n\t}\n}\n\n/** Pre-fabricated item representing a status */\nexport class StatusItem extends AbilityItem {\n\tconstructor({status, ...opts}: {status: Status} & BaseItemOptions) {\n\t\tsuper({...opts, ability: status})\n\t}\n}\n","import {ReactNode} from 'react'\nimport {Item} from './Item'\n\nexport interface Row {\n\t/** Label to display for the row */\n\treadonly label?: ReactNode\n\t/** Minimum height of the row */\n\treadonly height?: number\n\t/** Override insertion order of row. Smaller numbers appear first. */\n\treadonly order?: number\n\t/** If true, the row will default to a collapsed state. Default `false`. */\n\treadonly collapse?: boolean\n\t/** If true, and the row starts collapsed, the row will not allow exiting from the collapsed state. Default `false`. */\n\treadonly forceCollapsed?: boolean\n\t/** If true, items and rows within this row are hidden when the parent is collapsed. Default `false`. */\n\treadonly hideCollapsed?: boolean\n\t/** Child rows of this row */\n\treadonly rows: Row[]\n\t/** Items within this row */\n\treadonly items: Item[]\n}\n\n/** Simple row that can be added to the timeline */\nexport class SimpleRow implements Row {\n\tlabel?: ReactNode\n\theight?: number\n\torder?: number\n\tcollapse?: boolean\n\tforceCollapsed?: boolean\n\thideCollapsed?: boolean\n\trows: Row[]\n\titems: Item[]\n\n\tconstructor(opts: {\n\t\tlabel?: ReactNode,\n\t\theight?: number\n\t\torder?: number\n\t\tcollapse?: boolean\n\t\tforceCollapsed?: boolean\n\t\thideCollapsed?: boolean\n\t\trows?: readonly Row[],\n\t\titems?: readonly Item[],\n\t} = {}) {\n\t\tthis.label = opts.label\n\t\tthis.height = opts.height\n\t\tthis.order = opts.order\n\t\tthis.collapse = opts.collapse\n\t\tthis.forceCollapsed = opts.forceCollapsed\n\t\tthis.hideCollapsed = opts.hideCollapsed\n\t\tthis.rows = opts.rows?.slice() ?? []\n\t\tthis.items = opts.items?.slice() ?? []\n\t}\n\n\t/** Add a row as a child to this row */\n\taddRow<T extends Row>(row: T): T {\n\t\tthis.rows.push(row)\n\t\treturn row\n\t}\n\n\t/** Add an item to this row */\n\taddItem<T extends Item>(item: T): T {\n\t\tthis.items.push(item)\n\t\treturn item\n\t}\n}\n\n/** Row that will contain all items added within a dedicated track (opposed to default spanning behaviour) */\nexport class ContainerRow extends SimpleRow {\n\tprivate containerRow?: SimpleRow\n\n\toverride addRow<T extends Row>(row: T): T {\n\t\t// If there's items on the main row, we need to move them onto the container now there's a subrow\n\t\tif (this.items.length > 0) {\n\t\t\tthis.buildContainer()\n\t\t}\n\n\t\treturn super.addRow(row)\n\t}\n\n\toverride addItem<T extends Item>(item: T): T {\n\t\t// If we don't have a container, but there's already subrows, we need to build one\n\t\tif (this.containerRow == null && this.rows.length > 0) {\n\t\t\tthis.buildContainer()\n\t\t}\n\n\t\treturn this.containerRow == null\n\t\t\t? super.addItem(item)\n\t\t\t: this.containerRow.addItem(item)\n\t}\n\n\tprivate buildContainer() {\n\t\t// We may be building the container after items are already added to the parent - copy across\n\t\tthis.containerRow = super.addRow(new SimpleRow({\n\t\t\torder: -Infinity,\n\t\t\titems: this.items,\n\t\t}))\n\t\tthis.items = []\n\t}\n}\n","/* eslint-disable */\n// This file is automatically generated. Do not edit.\n// If you wish to regenerate, run `yarn generate`.\nexport const UNABLE_TO_ACT_STATUS_IDS = [\n\t1, // Petrification (lockActions)\n\t2, // Stun (lockActions)\n\t3, // Sleep (lockActions)\n\t4, // Daze (lockActions)\n\t11, // Confused (lockControl)\n\t66, // Terror (lockActions)\n\t142, // Stun (lockActions)\n\t149, // Stun (lockActions)\n\t201, // Stun (lockActions)\n\t213, // Pacification (lockActions)\n\t227, // Seduced (lockActions, lockControl)\n\t292, // Fetters (lockActions)\n\t296, // Hysteria (lockActions)\n\t371, // Zombification (lockControl)\n\t378, // Death Throes (lockActions)\n\t387, // Fool's Tumble (lockActions)\n\t401, // Seized (lockActions)\n\t402, // Thrown for a Loop (lockControl)\n\t421, // Devoured (lockActions, lockControl)\n\t423, // Nightmare (lockActions)\n\t434, // Absolute Bind (lockActions)\n\t435, // Demon Eye (lockActions)\n\t437, // Stone Curse (lockActions)\n\t467, // Briny Veil (lockActions)\n\t468, // Voidbound (lockActions, lockControl)\n\t486, // Watery Grave (lockActions)\n\t487, // Deep Freeze (lockActions)\n\t504, // Fetters (lockActions, lockControl)\n\t506, // Vertigo (lockActions)\n\t510, // Fetters (lockActions, lockControl)\n\t516, // Chaos (lockActions)\n\t603, // Mummification (lockControl)\n\t609, // Seized (lockActions)\n\t610, // Petrification (lockActions)\n\t625, // Down for the Count (lockActions)\n\t626, // Out of the Action (lockActions)\n\t663, // Red Light (lockControl)\n\t667, // Fetters (lockActions, lockControl)\n\t668, // Fetters (lockActions, lockControl)\n\t711, // Temporary Insanity (lockActions)\n\t713, // Severe Damage (lockActions)\n\t715, // Staggered (lockActions)\n\t770, // Fetters (lockActions, lockControl)\n\t774, // Down for the Count (lockActions)\n\t778, // Earthen Accord (lockActions, lockControl)\n\t779, // Out of Body (lockActions)\n\t783, // Down for the Count (lockActions)\n\t800, // Fetters (lockActions, lockControl)\n\t822, // Fetters (lockActions, lockControl)\n\t823, // Seduced (lockActions, lockControl)\n\t896, // Down for the Count (lockActions, lockControl)\n\t900, // Temporal Displacement (lockActions)\n\t901, // Fetters (lockActions, lockControl)\n\t926, // Sleep (lockActions)\n\t930, // Fetters (lockActions, lockControl)\n\t937, // Unwilling Host (lockControl)\n\t939, // Out of the Action (lockActions)\n\t961, // Seized (lockActions)\n\t990, // Fetters (lockActions, lockControl)\n\t991, // Seduced (lockActions, lockControl)\n\t996, // Concussion (lockActions, lockControl)\n\t997, // Concussion (lockActions, lockControl)\n\t1010, // Fetters (lockActions, lockControl)\n\t1047, // Confused (lockControl)\n\t1055, // Fetters (lockActions, lockControl)\n\t1069, // Assimilated (lockActions, lockControl)\n\t1098, // Aetherial Surge (lockActions, lockControl)\n\t1105, // Pumpkin (lockControl)\n\t1118, // Passenger (lockActions, lockControl)\n\t1119, // Temporal Displacement (lockActions, lockControl)\n\t1150, // Deep Freeze (lockActions)\n\t1222, // Fey Union (lockActions)\n\t1254, // Deep Freeze (lockActions)\n\t1257, // Forced March (lockActions)\n\t1267, // Affixed (lockActions, lockControl)\n\t1268, // In Event (lockActions, lockControl)\n\t1271, // Clashing (lockActions, lockControl)\n\t1283, // Confused (lockControl)\n\t1287, // Seized (lockActions)\n\t1343, // Stun (lockActions)\n\t1347, // Silence (lockActions)\n\t1348, // Sleep (lockActions)\n\t1363, // Sleep (lockActions)\n\t1389, // Seduced (lockActions, lockControl)\n\t1391, // Fetters (lockActions, lockControl)\n\t1399, // Fetters (lockActions, lockControl)\n\t1400, // Terror (lockActions)\n\t1417, // Stone Curse (lockActions)\n\t1421, // Craven (lockControl)\n\t1423, // Transfiguration (lockControl)\n\t1438, // Resonant (lockActions)\n\t1459, // Transfiguration (lockControl)\n\t1460, // Fetters (lockActions, lockControl)\n\t1477, // Fetters (lockActions, lockControl)\n\t1479, // Falling (lockActions)\n\t1497, // Fetters (lockActions, lockControl)\n\t1510, // Sleep (lockActions)\n\t1511, // Petrification (lockActions)\n\t1513, // Stun (lockActions, lockControl)\n\t1520, // Mounted (lockActions, lockControl)\n\t1522, // Stun (lockActions)\n\t1533, // Airbound (lockActions, lockControl)\n\t1576, // 石化の呪い (lockActions)\n\t1596, // Sleep (lockActions)\n\t1614, // Fetters (lockActions, lockControl)\n\t1619, // Preoccupied (lockActions, lockControl)\n\t1626, // Memory Loss (lockActions)\n\t1681, // Paying the Piper (lockActions)\n\t1696, // Drowning (lockActions, lockControl)\n\t1722, // Diamondback (lockActions)\n\t1726, // Fetters (lockActions, lockControl)\n\t1731, // Deep Freeze (lockActions)\n\t1757, // Fetters (lockActions, lockControl)\n\t1758, // Deep Freeze (lockActions)\n\t1768, // Watery Grave (lockActions)\n\t1785, // Down for the Count (lockActions)\n\t1849, // Fetters (lockActions, lockControl)\n\t1900, // Winged Shield (lockActions)\n\t1907, // Faded Out (lockActions)\n\t1908, // Fetters (lockActions, lockControl)\n\t1929, // Light Beyond Darkness (lockActions, lockControl)\n\t1937, // In Event (lockActions, lockControl)\n\t1943, // Hastilude (lockActions)\n\t1950, // Down for the Count (lockActions)\n\t1953, // Down for the Count (lockActions)\n\t1963, // Down for the Count (lockActions)\n\t1990, // Attunement (lockActions)\n\t2109, // Out of the Action (lockActions)\n\t2148, // Contact Prohibition Ordained (lockControl)\n\t2149, // Contact Regulation Ordained (lockActions, lockControl)\n\t2150, // Escape Prohibition Ordained (lockControl)\n\t2151, // Escape Detection Ordained (lockActions, lockControl)\n\t2159, // Red Light (lockControl)\n\t2165, // Temporal Displacement (lockActions, lockControl)\n\t2206, // Atlas (lockActions, lockControl)\n\t2249, // Unstable (lockActions, lockControl)\n\t2252, // Deep Freeze (lockActions)\n\t2285, // Fetters (lockActions, lockControl)\n\t2286, // Fetters (lockActions, lockControl)\n\t2305, // Zombification (lockControl)\n\t2310, // Truly Berserk (lockControl)\n\t2350, // Hastilude (lockActions)\n\t2407, // Fetters (lockActions, lockControl)\n\t2408, // Down for the Count (lockActions)\n\t2416, // Light Beyond Darkness (lockActions, lockControl)\n\t2486, // Sucked In (lockActions)\n\t2505, // Herbsona (lockActions, lockControl)\n\t2523, // Restricted Access (lockActions, lockControl)\n\t2529, // Sucked In (lockActions)\n\t2542, // 不浄の恐怖 (lockActions)\n\t2573, // Break (lockActions)\n\t2651, // Manusya Berserk (lockControl)\n\t2656, // Stun (lockActions)\n\t2658, // Deep Freeze (lockActions)\n\t2737, // Fading Consciousness (lockActions)\n\t2738, // At Death's Door (lockActions)\n\t2781, // Unlimited (lockActions)\n\t2810, // Chorus Aligned (lockActions)\n\t2821, // To the Dungeons (lockActions)\n\t2824, // Incapacitated (lockActions)\n\t2825, // Deactivated (lockActions)\n\t2851, // In Event (lockActions, lockControl)\n\t2910, // Down for the Count (lockActions)\n\t2933, // In Event (lockActions, lockControl)\n\t2953, // Stun (lockActions)\n\t2955, // Will to Live (lockActions)\n\t2961, // Down for the Count (lockActions)\n\t2973, // Spinning (lockActions)\n\t2974, // Dizzy (lockActions)\n\t2975, // Fetters (lockActions)\n\t2983, // Sleep (lockActions)\n\t2999, // In Event (lockActions, lockControl)\n\t3007, // Petrification (lockActions)\n\t3023, // Hysteria (lockActions)\n\t3024, // Seduced (lockActions)\n\t3055, // Contact Prohibition Ordained (lockControl)\n\t3056, // Contact Regulation Ordained (lockActions, lockControl)\n\t3057, // Escape Prohibition Ordained (lockControl)\n\t3058, // Escape Detection Ordained (lockActions, lockControl)\n\t3080, // Rhythmetic Fever (lockActions)\n\t3121, // Featherbrained (lockActions)\n\t3165, // Down for the Count (lockActions)\n\t3174, // Meteodrive (lockActions)\n\t3190, // 星遁天誅 (lockActions)\n\t3219, // Deep Freeze (lockActions)\n\t3249, // Fetters (lockActions)\n\t3283, // Fetters (lockActions)\n\t3287, // Deep Freeze (lockActions)\n\t3316, // Out of Control (lockActions, lockControl)\n\t3318, // Bodily Manipulation (lockActions, lockControl)\n\t3324, // Fetters (lockActions, lockControl)\n\t3362, // Out of Control (lockActions, lockControl)\n\t3363, // Seduced (lockActions, lockControl)\n\t3408, // Stun (lockActions)\n\t3421, // Fetters (lockActions, lockControl)\n\t3461, // Featherbrained (lockActions)\n\t3465, // Stun (lockActions)\n\t3466, // Sleep (lockActions)\n\t3467, // Vegetal Vapours (lockActions, lockControl)\n\t3501, // Down for the Count (lockActions, lockControl)\n\t3513, // Concussion (lockActions, lockControl)\n\t3519, // Deep Freeze (lockActions)\n\t3549, // Incapacitating Soul Snare (lockActions, lockControl)\n\t3552, // Fetters (lockActions, lockControl)\n\t3570, // Wrathful Revelation (lockActions, lockControl)\n\t3571, // Delightful Revelation (lockActions, lockControl)\n\t3697, // Seized (lockActions)\n\t1727, // Waning Nocturne (lockActions)\n]\n","import {STATUS_ID_OFFSET} from 'data/STATUSES'\nimport {UNABLE_TO_ACT_STATUS_IDS} from 'generated/unableToActStatusIds'\n\nexport const STATUS_IDS = UNABLE_TO_ACT_STATUS_IDS.map(i => i+STATUS_ID_OFFSET)\n","import {Trans} from '@lingui/react'\nimport {Event, Events} from 'event'\nimport {Analyser} from 'parser/core/Analyser'\nimport {filter, oneOf} from 'parser/core/filter'\nimport {dependency} from 'parser/core/Injectable'\nimport React from 'react'\nimport {Actor} from 'report'\nimport BrokenLog from '../BrokenLog'\nimport {SimpleItem, SimpleRow, Timeline} from '../Timeline'\nimport {STATUS_IDS} from './statusIds'\n\nexport interface Window {\n\t/** Number of events currently causing inability to act. */\n\tdepth: number\n\t/** The start time of this window. */\n\tstart: number\n\t/** The end time of this window. If `depth > 0`, will be `Infinity`. */\n\tend: number\n\t/** Events causing inability to act. */\n\tapplyEvents: Array<Events['statusApply']>\n\t/** Events counteracting inability to act. */\n\tremoveEvents: Array<Events['statusRemove'] | Events['complete']>\n}\n\nexport interface WindowFilter {\n\t/** Actor ID to retrieve windows for. */\n\tactorId?: Actor['id']\n\t/** Omit windows closed prior to this timestamp. */\n\tstart?: number\n\t/** Omit windows opened after this timestamp. */\n\tend?: number\n}\n\nexport class UnableToAct extends Analyser {\n\tstatic override handle = 'unableToAct'\n\tstatic override debug = false\n\n\t@dependency private brokenLog!: BrokenLog\n\t@dependency private timeline!: Timeline\n\n\tprivate actorWindows = new Map<Actor['id'], Window[]>()\n\n\t/**\n\t * Get unable to act windows for the specified actor that intersect with the\n\t * provided range. Defaults to all windows for the currently parsed actor.\n\t */\n\tgetWindows({\n\t\tactorId = this.parser.actor.id,\n\t\tstart = this.parser.pull.timestamp,\n\t\tend = this.parser.currentEpochTimestamp,\n\t}: WindowFilter = {}) {\n\t\treturn this.getActorWindows(actorId)\n\t\t\t.filter(window => window.end > start && window.start < end)\n\t}\n\n\t/**\n\t * Get the duration that specified actor was unable to act within the provided\n\t * range. Defaults to total time unable to act for the currently parsed actor.\n\t */\n\tgetDuration({\n\t\tactorId = this.parser.actor.id,\n\t\tstart = this.parser.pull.timestamp,\n\t\tend = this.parser.currentEpochTimestamp,\n\t}: WindowFilter = {}) {\n\t\treturn this.getWindows({actorId, start, end})\n\t\t\t.reduce((duration, window) => duration + Math.min(window.end, end) - Math.max(window.start, start), 0)\n\t}\n\n\t/**\n\t * Check if the specified actor was unable to act at the provided timestamp.\n\t * Defaults to checking the parsed actor at the current timestamp.\n\t */\n\tisUnableToAct({\n\t\tactorId = this.parser.actor.id,\n\t\ttimestamp = this.parser.currentEpochTimestamp,\n\t}: {\n\t\tactorId?: Actor['id']\n\t\ttimestamp?: number\n\t} = {}) {\n\t\treturn this.getWindows({\n\t\t\tactorId,\n\t\t\tstart: timestamp,\n\t\t\tend: timestamp,\n\t\t}).length > 0\n\t}\n\n\toverride initialise() {\n\t\tconst statusFilter = filter<Event>().status(oneOf(STATUS_IDS))\n\t\tthis.addEventHook(statusFilter.type('statusApply'), this.onApply)\n\t\tthis.addEventHook(statusFilter.type('statusRemove'), this.onRemove)\n\n\t\tthis.addEventHook('complete', this.onComplete)\n\t}\n\n\tprivate onApply(event: Events['statusApply']) {\n\t\tconst windows = this.getActorWindows(event.target)\n\n\t\t// Get the latest window, building a new one if there is none, or the previous is complete\n\t\tlet window: Window | undefined = windows[windows.length - 1]\n\t\tif (window == null || window.depth <= 0) {\n\t\t\twindow = {\n\t\t\t\tdepth: 0,\n\t\t\t\tstart: event.timestamp,\n\t\t\t\tend: Infinity,\n\t\t\t\tapplyEvents: [],\n\t\t\t\tremoveEvents: [],\n\t\t\t}\n\t\t\twindows.push(window)\n\t\t}\n\n\t\twindow.depth++\n\t\twindow.applyEvents.push(event)\n\t}\n\n\tprivate onRemove(event: Events['statusRemove']) {\n\t\tconst windows = this.getActorWindows(event.target)\n\n\t\t// Make sure nothing's gone wrong\n\t\tconst window: Window | undefined = windows[windows.length - 1]\n\t\tif (window == null || window.depth <= 0) {\n\t\t\tthis.brokenLog.trigger(this, 'no valid window to close', (\n\t\t\t\t<Trans id=\"core.unable-to-act.no-valid-window\">\n\t\t\t\t\tActor {event.target} has no valid window to end.\n\t\t\t\t</Trans>\n\t\t\t))\n\t\t\treturn\n\t\t}\n\n\t\tthis.decrementWindow(window, event)\n\t}\n\n\tprivate onComplete(event: Events['complete']) {\n\t\t// Clear out any open windows\n\t\tfor (const windows of this.actorWindows.values()) {\n\t\t\tif (windows.length === 0) { continue }\n\t\t\tconst window = windows[windows.length - 1]\n\t\t\twhile (window.depth > 0) {\n\t\t\t\tthis.decrementWindow(window, event)\n\t\t\t}\n\t\t}\n\n\t\tthis.debug(() => this.renderDebugTimelineData())\n\t}\n\n\tprivate getActorWindows(actorId: Actor['id']) {\n\t\tlet windows = this.actorWindows.get(actorId)\n\t\tif (windows == null) {\n\t\t\twindows = []\n\t\t\tthis.actorWindows.set(actorId, windows)\n\t\t}\n\t\treturn windows\n\t}\n\n\tprivate decrementWindow(\n\t\twindow: Window,\n\t\tevent: Events['statusRemove'] | Events['complete'],\n\t) {\n\t\twindow.depth--\n\t\twindow.removeEvents.push(event)\n\t\tif (window.depth <= 0) {\n\t\t\twindow.end = event.timestamp\n\t\t}\n\t}\n\n\tprivate renderDebugTimelineData() {\n\t\tconst startTime = this.parser.pull.timestamp\n\t\tconst parentRow = this.timeline.addRow(new SimpleRow({\n\t\t\tlabel: 'UTA2 Debug',\n\t\t\torder: -Infinity,\n\t\t}))\n\n\t\tfor (const [actorId, windows] of this.actorWindows.entries()) {\n\t\t\tconst actor = this.parser.pull.actors.find(actor => actor.id === actorId)\n\t\t\tconst row = parentRow.addRow(new SimpleRow({\n\t\t\t\tlabel: actor != null\n\t\t\t\t\t? `${actor.name} (${actorId})`\n\t\t\t\t\t: actorId,\n\t\t\t}))\n\n\t\t\tfor (const window of windows) {\n\t\t\t\trow.addItem(new SimpleItem({\n\t\t\t\t\tstart: window.start - startTime,\n\t\t\t\t\tend: window.end - startTime,\n\t\t\t\t\tcontent: <div style={{width: '100%', height: '100%', backgroundColor: '#aaf'}}/>,\n\t\t\t\t}))\n\t\t\t}\n\t\t}\n\t}\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"procOverlay\":\"ProcOverlay-module_procOverlay__1RGAc\",\"link\":\"ProcOverlay-module_link__3AZJr\"};","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 15596,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 15596,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 95606,\n\t\"./ss.js\": 95606,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 59172,\n\t\"./tzm-latn.js\": 59172,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;"],"names":["Rotation","event","action","cause","type","events","this","props","className","index","actionId","getActionId","getDataBy","ACTIONS","autoAttack","icon","console","error","linkClassName","onGcd","isProc","overlayStyle","iconSize","Link","id","ITEM_ID_OFFSET","ItemLink","ActionLink","cn","showName","Component","proxyInner","customiser","objValue","filterValue","filterInternal","current","Proxy","get","target","key","value","apply","thisArg","toCheck","filter","oneOf","values","set","Array","isArray","has","noneOf","exists","ActorResources","opts","hp","mp","position","attributes","_updateHistory","_statusHistory","time","updateHistory","statusHistory","buildResource","buildPosition","buildAttributes","getHistoricalValue","targetable","statusId","source","getStatusApplication","data","statusEvents","requestedSourceEvents","Infinity","sourceEvents","lastEvent","timestamp","field","self","maximum","x","y","bearing","getHistoricalAttribute","attribute","eventAttr","SUB_ATTRIBUTE_MINIMUM","estimated","Attribute","getter","fallback","i","length","Actor","actor","kind","name","team","playerControlled","owner","job","push","status","Actors","ResourceGraphs","actors","parser","getTeam","Team","pull","reportActor","actorSpecifier","Error","addEventHook","onUpdate","onStatus","onComplete","addUpdateEntry","addStatusEntry","resourceGraphs","addResource","label","Trans","colour","Analyser","handle","dependency","BrokenLog","Data","triggers","reason","erroneous","constructor","triggerKey","getReportPatch","report","branch","Sentry","scope","setTags","module","setExtras","meta","unknownAction","actions","UNKNOWN","triggerUnknownCause","unknownStatus","statuses","trigger","size","render","basic","compact","message","title","displayOrder","DISPLAY_ORDER","displayMode","DisplayMode","TARGET","SUCCESS","WARN","FAIL","undefined","Rule","options","description","requirements","DisplayOrder","forEach","matchClosestLower","percent","weightedPercents","aggregate","requirement","weight","totalWeight","TieredRule","tiers","matcher","RULE_STYLES","text","color","autoExpand","Checklist","rules","expanded","panels","rule","ruleStyles","tier","Math","min","content","Icon","styles","toFixed","Progress","Accordion","exclusive","defaultActiveIndex","styled","fluid","_rules","sortedRules","a","b","Requirement","_percent","_weight","overrideDisplay","CooldownDowntime","Downtime","trackedCds","suggestionOnlyCooldowns","usages","resets","checklistName","checklistDescription","checklistTarget","defaultAllowedAverageDowntime","defaultFirstUseOffset","trackedDisplayOrder","_event","trackedIds","allCooldowns","group","cooldowns","acc","cur","resetIds","resetBy","baseFilter","onTrackedCast","onResetCast","countUsage","getTrackedGroup","abilityId","cdRequirements","cdGroup","createRequirement","checklist","add","WeightedRule","addJobSuggestions","expected","calculateMaxUsages","actual","calculateUsageCount","requirementDisplay","val","ix","getAction","debug","gRep","cooldown","maxCharges","charges","step","allowedAverageDowntime","gResets","gUsages","dtUsages","u","downtime","isDowntime","getDowntimeWindows","resetTime","refundAmount","timeLost","firstUseOffset","count","expectedFirstUseTime","actualFirstUseTime","pullEndTimestamp","duration","currentTime","actualSecondUseTime","formatEpochTimestamp","rs","previousTime","shift","window","end","start","matchingDtUsage","uw","formatDuration","req","CooldownEndReason","DEFAULT_SELECTION_OPTIONS","primary","Cooldowns","SpeedAdjustments","actionConfigCache","currentCast","groupStates","specifier","iterateStates","config","remaining","state","max","currentEpochTimestamp","chargeValues","reduction","newEnd","endCooldown","REDUCED","removeTimestampHook","hook","addTimestampHook","EXPIRED","histories","cooldownHistory","chargeHistory","fullAction","cooldownGroup","getActionConfigs","getGroupState","onPrepare","onInterrupt","onAction","useAction","INTERRUPTED","baseConfig","maximumCharges","resolveCooldown","PULL_ENDED","consumeCharge","groupState","chargeState","now","cooldownState","log","delta","OVERLAPPED","startCooldown","speedAttribute","speedAdjustments","getAdjustedDuration","gainCharge","endReason","groups","gcdRecast","getAppliedData","actionRoot","actionLayers","statusRoot","statusLayers","keys","matchActionId","matchStatusId","root","layers","patch","UnableToAct","Invulnerability","Timeline","internalDowntime","windows","invuln","downtimePeriods","unableToAct","getWindows","invulnerability","types","firstElement","finalDowntimes","last","when","uptime","startTime","timeline","addItem","SimpleItem","style","width","height","backgroundColor","Check","EdgeSide","DEFAULT_CHECKS","FIRST_TARGETED","TARGETABLE","DEATH","SHARED_ACTOR_CONFIG","legacyFflogs","exclude","ALL_TYPES","DEFAULT_ACTOR_FILTER","actorConfig","watchedActors","skipMirroring","seenActors","edges","nextEdgeId","getNextEdgeId","isPlayerDerived","addTargetableHooks","actorIds","addStartEdge","addEndEdge","addDeathHooks","addOverkillHooks","targets","t","some","overkill","addFirstTargetedHooks","trackIfFirstTarget","ignoredTypesSet","actorId","mirrorTypeEdge","addTypeStartEdge","typeEdges","getActorEdges","lastEdge","side","START","addTypeEndEdge","END","rest","total","rawStart","rawEnd","actorFilter","expectedDepth","rangeEdges","getEdgesInRange","depth","edge","lastSide","unshift","reportSource","flatConfig","actorChecks","mirrorToInvuln","checks","check","addHooksFns","OVERKILL","ids","renderDebugTimelineData","sourceId","targetId","fn","invulnerable","untargetable","parentRow","addRow","SimpleRow","order","kindRows","kindRow","variousNames","otherActor","collapse","allRow","buildDebugTypeRows","filterActor","actorRow","hideCollapsed","endTime","typeRow","Graph","resource","scaleX","useId","domain","domainEnd","getTime","lastDatum","maximumArea","maximumY","scaleY","scaleLinear","range","currentArea","ClipPath","Area","curve","linear","curveLinear","curveStepAfter","datum","y0","y1","Rect","fill","clipPath","stroke","strokeWidth","orientation","toString","children","clipPathUnits","MarkerHandler","getData","useState","markerState","setMarkerState","onMouseMove","useCallback","rect","currentTarget","getBoundingClientRect","fightPercent","clientX","left","resources","cursorLeft","itemTop","top","itemLeft","onMouseLeave","Marker","background","createPortal","document","body","RESOURCE_HANDLE","GAUGE_HANDLE","args","dataGroups","getDataByHandle","dataHandle","dataGroup","pullTimestamp","lastData","lastTimestamp","nextCurrent","nextTimestamp","timePct","addDataGroup","scaleUtc","addResources","addDatas","gauge","addGauges","gauges","gaugeGroup","forceCollapsed","resourceData","resourceRow","items","row","maybeAttribute","JOBS","speedStat","getSpeedStatAdjustedDuration","getActorAttribute","SEVERITY","MORBID","MAJOR","MEDIUM","MINOR","IGNORE","Suggestion","why","severityValue","severity","TieredSuggestion","SEVERITY_LABEL_PROPS","Suggestions","observer","onToggleShowMinor","_","context","settingsStore","setShowMinorSuggestions","checked","showMinor","showMinorSuggestions","suggestions","suggestion","hasMinor","Checkbox","toggle","defaultChecked","onChange","src","alt","Label","horizontal","React","contextType","StoreContext","_suggestions","fallbackScale","ScaleContext","createContext","extended","useScales","useContext","multipliers","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","preventMouseEventDefault","preventDefault","ScaleHandler","zoomMin","panFactor","zoomFactor","exposeSetView","setDomain","setRange","domainDistance","setView","view","right","additionalZoom","useEffect","deltaScale","useMemo","scrollParentRef","useRef","contentBounds","onContentResize","bounds","pan","uMin","uMax","dist","zoom","centre","newMin","gestureConfig","domTarget","eventOptions","passive","drag","axis","bindGestures","useGesture","onWheel","dX","dY","maxDelta","abs","deltaMode","finalDelta","isWheelEvent","onPinch","touches","origin","oX","invert","scale","adjustedScale","onDrag","scales","extendBy","copy","ref","Provider","onResize","Items","memo","filteredItems","item","itemDetails","Content","Item","transform","zIndex","Axis","ticks","viewMin","stickyTick","timeMinute","stickyTickEnd","lefts","tick","isDefined","gridRowStart","gridRowEnd","classNames","isMajorTick","Fragment","formatSeconds","formatMinutes","date","Number","utcFormat","cached","cache","arg","getMaxChildren","getItemCount","rows","getMaxDepth","Rows","parentCollapsed","rowProps","orderedRows","currentTop","sizes","maxChildren","thisTop","Row","maxDepth","selfCollapsed","setSelfCollapsed","toggleCollapsed","hasChildren","collapsed","rowStyles","minHeight","minimised","onClick","gridStyle","gridColumnStart","measureRef","contentRect","maxWidth","scaleHandlerProps","gridColumnEnd","show","scrollTo","handler","currentDuration","BaseItem","AbilityItem","ability","ActionItem","StatusItem","ContainerRow","containerRow","buildContainer","UNABLE_TO_ACT_STATUS_IDS","STATUS_IDS","STATUS_ID_OFFSET","actorWindows","getActorWindows","statusFilter","onApply","onRemove","applyEvents","removeEvents","brokenLog","decrementWindow","map","webpackContext","webpackContextResolve","__webpack_require__","o","e","code","Object","resolve","exports"],"sourceRoot":""}